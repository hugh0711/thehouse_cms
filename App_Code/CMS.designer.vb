'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="HKSPA_dev")>  _
Partial Public Class CMSDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAlbum(instance As Album)
    End Sub
  Partial Private Sub UpdateAlbum(instance As Album)
    End Sub
  Partial Private Sub DeleteAlbum(instance As Album)
    End Sub
  Partial Private Sub InsertAlbumPhoto(instance As AlbumPhoto)
    End Sub
  Partial Private Sub UpdateAlbumPhoto(instance As AlbumPhoto)
    End Sub
  Partial Private Sub DeleteAlbumPhoto(instance As AlbumPhoto)
    End Sub
  Partial Private Sub InsertAlbumCategory(instance As AlbumCategory)
    End Sub
  Partial Private Sub UpdateAlbumCategory(instance As AlbumCategory)
    End Sub
  Partial Private Sub DeleteAlbumCategory(instance As AlbumCategory)
    End Sub
  Partial Private Sub InsertAlbumPhoto_info(instance As AlbumPhoto_info)
    End Sub
  Partial Private Sub UpdateAlbumPhoto_info(instance As AlbumPhoto_info)
    End Sub
  Partial Private Sub DeleteAlbumPhoto_info(instance As AlbumPhoto_info)
    End Sub
  Partial Private Sub InsertPromo(instance As Promo)
    End Sub
  Partial Private Sub UpdatePromo(instance As Promo)
    End Sub
  Partial Private Sub DeletePromo(instance As Promo)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("MySqlConnection").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Albums() As System.Data.Linq.Table(Of Album)
		Get
			Return Me.GetTable(Of Album)
		End Get
	End Property
	
	Public ReadOnly Property AlbumPhotos() As System.Data.Linq.Table(Of AlbumPhoto)
		Get
			Return Me.GetTable(Of AlbumPhoto)
		End Get
	End Property
	
	Public ReadOnly Property AlbumCategories() As System.Data.Linq.Table(Of AlbumCategory)
		Get
			Return Me.GetTable(Of AlbumCategory)
		End Get
	End Property
	
	Public ReadOnly Property AlbumPhoto_infos() As System.Data.Linq.Table(Of AlbumPhoto_info)
		Get
			Return Me.GetTable(Of AlbumPhoto_info)
		End Get
	End Property
	
	Public ReadOnly Property view_AlbumPhotoInfos() As System.Data.Linq.Table(Of view_AlbumPhotoInfo)
		Get
			Return Me.GetTable(Of view_AlbumPhotoInfo)
		End Get
	End Property
	
	Public ReadOnly Property Promos() As System.Data.Linq.Table(Of Promo)
		Get
			Return Me.GetTable(Of Promo)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Album")>  _
Partial Public Class Album
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AlbumID As System.Guid
	
	Private _AlbumName As String
	
	Private _Description As String
	
	Private _AlbumDate As System.Nullable(Of Date)
	
	Private _PhotoCount As System.Nullable(Of Integer)
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _PreviewUrl As String
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _UpdateDate As System.Nullable(Of Date)
	
	Private _UpdatedBy As String
	
	Private _AlbumPhotos As EntitySet(Of AlbumPhoto)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAlbumIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnAlbumIDChanged()
    End Sub
    Partial Private Sub OnAlbumNameChanging(value As String)
    End Sub
    Partial Private Sub OnAlbumNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnAlbumDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAlbumDateChanged()
    End Sub
    Partial Private Sub OnPhotoCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPhotoCountChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    Partial Private Sub OnPreviewUrlChanging(value As String)
    End Sub
    Partial Private Sub OnPreviewUrlChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnUpdateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdateDateChanged()
    End Sub
    Partial Private Sub OnUpdatedByChanging(value As String)
    End Sub
    Partial Private Sub OnUpdatedByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AlbumPhotos = New EntitySet(Of AlbumPhoto)(AddressOf Me.attach_AlbumPhotos, AddressOf Me.detach_AlbumPhotos)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property AlbumID() As System.Guid
		Get
			Return Me._AlbumID
		End Get
		Set
			If ((Me._AlbumID = value)  _
						= false) Then
				Me.OnAlbumIDChanging(value)
				Me.SendPropertyChanging
				Me._AlbumID = value
				Me.SendPropertyChanged("AlbumID")
				Me.OnAlbumIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumName", DbType:="NVarChar(256)")>  _
	Public Property AlbumName() As String
		Get
			Return Me._AlbumName
		End Get
		Set
			If (String.Equals(Me._AlbumName, value) = false) Then
				Me.OnAlbumNameChanging(value)
				Me.SendPropertyChanging
				Me._AlbumName = value
				Me.SendPropertyChanged("AlbumName")
				Me.OnAlbumNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumDate", DbType:="Date")>  _
	Public Property AlbumDate() As System.Nullable(Of Date)
		Get
			Return Me._AlbumDate
		End Get
		Set
			If (Me._AlbumDate.Equals(value) = false) Then
				Me.OnAlbumDateChanging(value)
				Me.SendPropertyChanging
				Me._AlbumDate = value
				Me.SendPropertyChanged("AlbumDate")
				Me.OnAlbumDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoCount", DbType:="Int")>  _
	Public Property PhotoCount() As System.Nullable(Of Integer)
		Get
			Return Me._PhotoCount
		End Get
		Set
			If (Me._PhotoCount.Equals(value) = false) Then
				Me.OnPhotoCountChanging(value)
				Me.SendPropertyChanging
				Me._PhotoCount = value
				Me.SendPropertyChanged("PhotoCount")
				Me.OnPhotoCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreviewUrl", DbType:="NVarChar(50)")>  _
	Public Property PreviewUrl() As String
		Get
			Return Me._PreviewUrl
		End Get
		Set
			If (String.Equals(Me._PreviewUrl, value) = false) Then
				Me.OnPreviewUrlChanging(value)
				Me.SendPropertyChanging
				Me._PreviewUrl = value
				Me.SendPropertyChanged("PreviewUrl")
				Me.OnPreviewUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="DateTime")>  _
	Public Property UpdateDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdateDate
		End Get
		Set
			If (Me._UpdateDate.Equals(value) = false) Then
				Me.OnUpdateDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdateDate = value
				Me.SendPropertyChanged("UpdateDate")
				Me.OnUpdateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedBy", DbType:="NVarChar(256)")>  _
	Public Property UpdatedBy() As String
		Get
			Return Me._UpdatedBy
		End Get
		Set
			If (String.Equals(Me._UpdatedBy, value) = false) Then
				Me.OnUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._UpdatedBy = value
				Me.SendPropertyChanged("UpdatedBy")
				Me.OnUpdatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Album_AlbumPhoto", Storage:="_AlbumPhotos", ThisKey:="AlbumID", OtherKey:="AlbumID")>  _
	Public Property AlbumPhotos() As EntitySet(Of AlbumPhoto)
		Get
			Return Me._AlbumPhotos
		End Get
		Set
			Me._AlbumPhotos.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AlbumPhotos(ByVal entity As AlbumPhoto)
		Me.SendPropertyChanging
		entity.Album = Me
	End Sub
	
	Private Sub detach_AlbumPhotos(ByVal entity As AlbumPhoto)
		Me.SendPropertyChanging
		entity.Album = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AlbumPhoto")>  _
Partial Public Class AlbumPhoto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PhotoID As System.Guid
	
	Private _AlbumID As System.Nullable(Of System.Guid)
	
	Private _PhotoName As String
	
	Private _Description As String
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _UpdateDate As System.Nullable(Of Date)
	
	Private _UpdatedBy As String
	
	Private _AlbumPhoto_infos As EntitySet(Of AlbumPhoto_info)
	
	Private _Album As EntityRef(Of Album)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPhotoIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnPhotoIDChanged()
    End Sub
    Partial Private Sub OnAlbumIDChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnAlbumIDChanged()
    End Sub
    Partial Private Sub OnPhotoNameChanging(value As String)
    End Sub
    Partial Private Sub OnPhotoNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnUpdateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdateDateChanged()
    End Sub
    Partial Private Sub OnUpdatedByChanging(value As String)
    End Sub
    Partial Private Sub OnUpdatedByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AlbumPhoto_infos = New EntitySet(Of AlbumPhoto_info)(AddressOf Me.attach_AlbumPhoto_infos, AddressOf Me.detach_AlbumPhoto_infos)
		Me._Album = CType(Nothing, EntityRef(Of Album))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property PhotoID() As System.Guid
		Get
			Return Me._PhotoID
		End Get
		Set
			If ((Me._PhotoID = value)  _
						= false) Then
				Me.OnPhotoIDChanging(value)
				Me.SendPropertyChanging
				Me._PhotoID = value
				Me.SendPropertyChanged("PhotoID")
				Me.OnPhotoIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumID", DbType:="UniqueIdentifier")>  _
	Public Property AlbumID() As System.Nullable(Of System.Guid)
		Get
			Return Me._AlbumID
		End Get
		Set
			If (Me._AlbumID.Equals(value) = false) Then
				If Me._Album.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAlbumIDChanging(value)
				Me.SendPropertyChanging
				Me._AlbumID = value
				Me.SendPropertyChanged("AlbumID")
				Me.OnAlbumIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoName", DbType:="NVarChar(256)")>  _
	Public Property PhotoName() As String
		Get
			Return Me._PhotoName
		End Get
		Set
			If (String.Equals(Me._PhotoName, value) = false) Then
				Me.OnPhotoNameChanging(value)
				Me.SendPropertyChanging
				Me._PhotoName = value
				Me.SendPropertyChanged("PhotoName")
				Me.OnPhotoNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="DateTime")>  _
	Public Property UpdateDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdateDate
		End Get
		Set
			If (Me._UpdateDate.Equals(value) = false) Then
				Me.OnUpdateDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdateDate = value
				Me.SendPropertyChanged("UpdateDate")
				Me.OnUpdateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedBy", DbType:="NVarChar(256)")>  _
	Public Property UpdatedBy() As String
		Get
			Return Me._UpdatedBy
		End Get
		Set
			If (String.Equals(Me._UpdatedBy, value) = false) Then
				Me.OnUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._UpdatedBy = value
				Me.SendPropertyChanged("UpdatedBy")
				Me.OnUpdatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AlbumPhoto_AlbumPhoto_info", Storage:="_AlbumPhoto_infos", ThisKey:="PhotoID", OtherKey:="PhotoID")>  _
	Public Property AlbumPhoto_infos() As EntitySet(Of AlbumPhoto_info)
		Get
			Return Me._AlbumPhoto_infos
		End Get
		Set
			Me._AlbumPhoto_infos.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Album_AlbumPhoto", Storage:="_Album", ThisKey:="AlbumID", OtherKey:="AlbumID", IsForeignKey:=true)>  _
	Public Property Album() As Album
		Get
			Return Me._Album.Entity
		End Get
		Set
			Dim previousValue As Album = Me._Album.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Album.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Album.Entity = Nothing
					previousValue.AlbumPhotos.Remove(Me)
				End If
				Me._Album.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AlbumPhotos.Add(Me)
					Me._AlbumID = value.AlbumID
				Else
					Me._AlbumID = CType(Nothing, Nullable(Of System.Guid))
				End If
				Me.SendPropertyChanged("Album")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AlbumPhoto_infos(ByVal entity As AlbumPhoto_info)
		Me.SendPropertyChanging
		entity.AlbumPhoto = Me
	End Sub
	
	Private Sub detach_AlbumPhoto_infos(ByVal entity As AlbumPhoto_info)
		Me.SendPropertyChanging
		entity.AlbumPhoto = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AlbumCategory")>  _
Partial Public Class AlbumCategory
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CategoryID As Integer
	
	Private _AlbumID As System.Guid
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCategoryIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCategoryIDChanged()
    End Sub
    Partial Private Sub OnAlbumIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnAlbumIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me.OnCategoryIDChanging(value)
				Me.SendPropertyChanging
				Me._CategoryID = value
				Me.SendPropertyChanged("CategoryID")
				Me.OnCategoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property AlbumID() As System.Guid
		Get
			Return Me._AlbumID
		End Get
		Set
			If ((Me._AlbumID = value)  _
						= false) Then
				Me.OnAlbumIDChanging(value)
				Me.SendPropertyChanging
				Me._AlbumID = value
				Me.SendPropertyChanged("AlbumID")
				Me.OnAlbumIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AlbumPhoto_info")>  _
Partial Public Class AlbumPhoto_info
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PhotoID As System.Guid
	
	Private _camera_model As String
	
	Private _f_stop As String
	
	Private _exposure_time As String
	
	Private _iso_speed As String
	
	Private _exposure_bias As String
	
	Private _focal_length As String
	
	Private _max_aperture As String
	
	Private _meeting_mode As String
	
	Private _subject_distance As String
	
	Private _flash_mode As String
	
	Private _Author As String
	
	Private _AlbumPhoto As EntityRef(Of AlbumPhoto)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPhotoIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnPhotoIDChanged()
    End Sub
    Partial Private Sub Oncamera_modelChanging(value As String)
    End Sub
    Partial Private Sub Oncamera_modelChanged()
    End Sub
    Partial Private Sub Onf_stopChanging(value As String)
    End Sub
    Partial Private Sub Onf_stopChanged()
    End Sub
    Partial Private Sub Onexposure_timeChanging(value As String)
    End Sub
    Partial Private Sub Onexposure_timeChanged()
    End Sub
    Partial Private Sub Oniso_speedChanging(value As String)
    End Sub
    Partial Private Sub Oniso_speedChanged()
    End Sub
    Partial Private Sub Onexposure_biasChanging(value As String)
    End Sub
    Partial Private Sub Onexposure_biasChanged()
    End Sub
    Partial Private Sub Onfocal_lengthChanging(value As String)
    End Sub
    Partial Private Sub Onfocal_lengthChanged()
    End Sub
    Partial Private Sub Onmax_apertureChanging(value As String)
    End Sub
    Partial Private Sub Onmax_apertureChanged()
    End Sub
    Partial Private Sub Onmeeting_modeChanging(value As String)
    End Sub
    Partial Private Sub Onmeeting_modeChanged()
    End Sub
    Partial Private Sub Onsubject_distanceChanging(value As String)
    End Sub
    Partial Private Sub Onsubject_distanceChanged()
    End Sub
    Partial Private Sub Onflash_modeChanging(value As String)
    End Sub
    Partial Private Sub Onflash_modeChanged()
    End Sub
    Partial Private Sub OnAuthorChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AlbumPhoto = CType(Nothing, EntityRef(Of AlbumPhoto))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property PhotoID() As System.Guid
		Get
			Return Me._PhotoID
		End Get
		Set
			If ((Me._PhotoID = value)  _
						= false) Then
				If Me._AlbumPhoto.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPhotoIDChanging(value)
				Me.SendPropertyChanging
				Me._PhotoID = value
				Me.SendPropertyChanged("PhotoID")
				Me.OnPhotoIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_camera_model", DbType:="NVarChar(100)")>  _
	Public Property camera_model() As String
		Get
			Return Me._camera_model
		End Get
		Set
			If (String.Equals(Me._camera_model, value) = false) Then
				Me.Oncamera_modelChanging(value)
				Me.SendPropertyChanging
				Me._camera_model = value
				Me.SendPropertyChanged("camera_model")
				Me.Oncamera_modelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f_stop", DbType:="NVarChar(50)")>  _
	Public Property f_stop() As String
		Get
			Return Me._f_stop
		End Get
		Set
			If (String.Equals(Me._f_stop, value) = false) Then
				Me.Onf_stopChanging(value)
				Me.SendPropertyChanging
				Me._f_stop = value
				Me.SendPropertyChanged("f_stop")
				Me.Onf_stopChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exposure_time", DbType:="NVarChar(50)")>  _
	Public Property exposure_time() As String
		Get
			Return Me._exposure_time
		End Get
		Set
			If (String.Equals(Me._exposure_time, value) = false) Then
				Me.Onexposure_timeChanging(value)
				Me.SendPropertyChanging
				Me._exposure_time = value
				Me.SendPropertyChanged("exposure_time")
				Me.Onexposure_timeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iso_speed", DbType:="NVarChar(50)")>  _
	Public Property iso_speed() As String
		Get
			Return Me._iso_speed
		End Get
		Set
			If (String.Equals(Me._iso_speed, value) = false) Then
				Me.Oniso_speedChanging(value)
				Me.SendPropertyChanging
				Me._iso_speed = value
				Me.SendPropertyChanged("iso_speed")
				Me.Oniso_speedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exposure_bias", DbType:="NVarChar(50)")>  _
	Public Property exposure_bias() As String
		Get
			Return Me._exposure_bias
		End Get
		Set
			If (String.Equals(Me._exposure_bias, value) = false) Then
				Me.Onexposure_biasChanging(value)
				Me.SendPropertyChanging
				Me._exposure_bias = value
				Me.SendPropertyChanged("exposure_bias")
				Me.Onexposure_biasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_focal_length", DbType:="NVarChar(50)")>  _
	Public Property focal_length() As String
		Get
			Return Me._focal_length
		End Get
		Set
			If (String.Equals(Me._focal_length, value) = false) Then
				Me.Onfocal_lengthChanging(value)
				Me.SendPropertyChanging
				Me._focal_length = value
				Me.SendPropertyChanged("focal_length")
				Me.Onfocal_lengthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_aperture", DbType:="NVarChar(50)")>  _
	Public Property max_aperture() As String
		Get
			Return Me._max_aperture
		End Get
		Set
			If (String.Equals(Me._max_aperture, value) = false) Then
				Me.Onmax_apertureChanging(value)
				Me.SendPropertyChanging
				Me._max_aperture = value
				Me.SendPropertyChanged("max_aperture")
				Me.Onmax_apertureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_meeting_mode", DbType:="NVarChar(50)")>  _
	Public Property meeting_mode() As String
		Get
			Return Me._meeting_mode
		End Get
		Set
			If (String.Equals(Me._meeting_mode, value) = false) Then
				Me.Onmeeting_modeChanging(value)
				Me.SendPropertyChanging
				Me._meeting_mode = value
				Me.SendPropertyChanged("meeting_mode")
				Me.Onmeeting_modeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subject_distance", DbType:="NVarChar(50)")>  _
	Public Property subject_distance() As String
		Get
			Return Me._subject_distance
		End Get
		Set
			If (String.Equals(Me._subject_distance, value) = false) Then
				Me.Onsubject_distanceChanging(value)
				Me.SendPropertyChanging
				Me._subject_distance = value
				Me.SendPropertyChanged("subject_distance")
				Me.Onsubject_distanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flash_mode", DbType:="NVarChar(50)")>  _
	Public Property flash_mode() As String
		Get
			Return Me._flash_mode
		End Get
		Set
			If (String.Equals(Me._flash_mode, value) = false) Then
				Me.Onflash_modeChanging(value)
				Me.SendPropertyChanging
				Me._flash_mode = value
				Me.SendPropertyChanged("flash_mode")
				Me.Onflash_modeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(100)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me.OnAuthorChanging(value)
				Me.SendPropertyChanging
				Me._Author = value
				Me.SendPropertyChanged("Author")
				Me.OnAuthorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AlbumPhoto_AlbumPhoto_info", Storage:="_AlbumPhoto", ThisKey:="PhotoID", OtherKey:="PhotoID", IsForeignKey:=true)>  _
	Public Property AlbumPhoto() As AlbumPhoto
		Get
			Return Me._AlbumPhoto.Entity
		End Get
		Set
			Dim previousValue As AlbumPhoto = Me._AlbumPhoto.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AlbumPhoto.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AlbumPhoto.Entity = Nothing
					previousValue.AlbumPhoto_infos.Remove(Me)
				End If
				Me._AlbumPhoto.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AlbumPhoto_infos.Add(Me)
					Me._PhotoID = value.PhotoID
				Else
					Me._PhotoID = CType(Nothing, System.Guid)
				End If
				Me.SendPropertyChanged("AlbumPhoto")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_AlbumPhotoInfo")>  _
Partial Public Class view_AlbumPhotoInfo
	
	Private _PhotoID As System.Guid
	
	Private _AlbumID As System.Nullable(Of System.Guid)
	
	Private _PhotoName As String
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdateDate As System.Nullable(Of Date)
	
	Private _camera_model As String
	
	Private _f_stop As String
	
	Private _exposure_time As String
	
	Private _iso_speed As String
	
	Private _exposure_bias As String
	
	Private _focal_length As String
	
	Private _max_aperture As String
	
	Private _meeting_mode As String
	
	Private _subject_distance As String
	
	Private _flash_mode As String
	
	Private _Author As String
	
	Private _AlbumName As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoID", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property PhotoID() As System.Guid
		Get
			Return Me._PhotoID
		End Get
		Set
			If ((Me._PhotoID = value)  _
						= false) Then
				Me._PhotoID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumID", DbType:="UniqueIdentifier")>  _
	Public Property AlbumID() As System.Nullable(Of System.Guid)
		Get
			Return Me._AlbumID
		End Get
		Set
			If (Me._AlbumID.Equals(value) = false) Then
				Me._AlbumID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoName", DbType:="NVarChar(256)")>  _
	Public Property PhotoName() As String
		Get
			Return Me._PhotoName
		End Get
		Set
			If (String.Equals(Me._PhotoName, value) = false) Then
				Me._PhotoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="DateTime")>  _
	Public Property UpdateDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdateDate
		End Get
		Set
			If (Me._UpdateDate.Equals(value) = false) Then
				Me._UpdateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_camera_model", DbType:="NVarChar(100)")>  _
	Public Property camera_model() As String
		Get
			Return Me._camera_model
		End Get
		Set
			If (String.Equals(Me._camera_model, value) = false) Then
				Me._camera_model = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f_stop", DbType:="NVarChar(50)")>  _
	Public Property f_stop() As String
		Get
			Return Me._f_stop
		End Get
		Set
			If (String.Equals(Me._f_stop, value) = false) Then
				Me._f_stop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exposure_time", DbType:="NVarChar(50)")>  _
	Public Property exposure_time() As String
		Get
			Return Me._exposure_time
		End Get
		Set
			If (String.Equals(Me._exposure_time, value) = false) Then
				Me._exposure_time = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iso_speed", DbType:="NVarChar(50)")>  _
	Public Property iso_speed() As String
		Get
			Return Me._iso_speed
		End Get
		Set
			If (String.Equals(Me._iso_speed, value) = false) Then
				Me._iso_speed = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exposure_bias", DbType:="NVarChar(50)")>  _
	Public Property exposure_bias() As String
		Get
			Return Me._exposure_bias
		End Get
		Set
			If (String.Equals(Me._exposure_bias, value) = false) Then
				Me._exposure_bias = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_focal_length", DbType:="NVarChar(50)")>  _
	Public Property focal_length() As String
		Get
			Return Me._focal_length
		End Get
		Set
			If (String.Equals(Me._focal_length, value) = false) Then
				Me._focal_length = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_aperture", DbType:="NVarChar(50)")>  _
	Public Property max_aperture() As String
		Get
			Return Me._max_aperture
		End Get
		Set
			If (String.Equals(Me._max_aperture, value) = false) Then
				Me._max_aperture = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_meeting_mode", DbType:="NVarChar(50)")>  _
	Public Property meeting_mode() As String
		Get
			Return Me._meeting_mode
		End Get
		Set
			If (String.Equals(Me._meeting_mode, value) = false) Then
				Me._meeting_mode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subject_distance", DbType:="NVarChar(50)")>  _
	Public Property subject_distance() As String
		Get
			Return Me._subject_distance
		End Get
		Set
			If (String.Equals(Me._subject_distance, value) = false) Then
				Me._subject_distance = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flash_mode", DbType:="NVarChar(50)")>  _
	Public Property flash_mode() As String
		Get
			Return Me._flash_mode
		End Get
		Set
			If (String.Equals(Me._flash_mode, value) = false) Then
				Me._flash_mode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(100)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumName", DbType:="NVarChar(256)")>  _
	Public Property AlbumName() As String
		Get
			Return Me._AlbumName
		End Get
		Set
			If (String.Equals(Me._AlbumName, value) = false) Then
				Me._AlbumName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Promo")>  _
Partial Public Class Promo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PromoID As Integer
	
	Private _Name As String
	
	Private _PromoSettingID As System.Nullable(Of Integer)
	
	Private _PromoImageUrl As String
	
	Private _PromoUrl As String
	
	Private _UnitFunctionID As System.Nullable(Of Integer)
	
	Private _StartDate As System.Nullable(Of Date)
	
	Private _EndDate As System.Nullable(Of Date)
	
	Private _IsSingleDay As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _CreatedBy As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdatedBy As String
	
	Private _UpdateDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPromoIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPromoIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnPromoSettingIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPromoSettingIDChanged()
    End Sub
    Partial Private Sub OnPromoImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnPromoImageUrlChanged()
    End Sub
    Partial Private Sub OnPromoUrlChanging(value As String)
    End Sub
    Partial Private Sub OnPromoUrlChanged()
    End Sub
    Partial Private Sub OnUnitFunctionIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUnitFunctionIDChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnIsSingleDayChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsSingleDayChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnUpdatedByChanging(value As String)
    End Sub
    Partial Private Sub OnUpdatedByChanged()
    End Sub
    Partial Private Sub OnUpdateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdateDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PromoID() As Integer
		Get
			Return Me._PromoID
		End Get
		Set
			If ((Me._PromoID = value)  _
						= false) Then
				Me.OnPromoIDChanging(value)
				Me.SendPropertyChanging
				Me._PromoID = value
				Me.SendPropertyChanged("PromoID")
				Me.OnPromoIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(256)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoSettingID", DbType:="Int")>  _
	Public Property PromoSettingID() As System.Nullable(Of Integer)
		Get
			Return Me._PromoSettingID
		End Get
		Set
			If (Me._PromoSettingID.Equals(value) = false) Then
				Me.OnPromoSettingIDChanging(value)
				Me.SendPropertyChanging
				Me._PromoSettingID = value
				Me.SendPropertyChanged("PromoSettingID")
				Me.OnPromoSettingIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoImageUrl", DbType:="NVarChar(256)")>  _
	Public Property PromoImageUrl() As String
		Get
			Return Me._PromoImageUrl
		End Get
		Set
			If (String.Equals(Me._PromoImageUrl, value) = false) Then
				Me.OnPromoImageUrlChanging(value)
				Me.SendPropertyChanging
				Me._PromoImageUrl = value
				Me.SendPropertyChanged("PromoImageUrl")
				Me.OnPromoImageUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoUrl", DbType:="NVarChar(256)")>  _
	Public Property PromoUrl() As String
		Get
			Return Me._PromoUrl
		End Get
		Set
			If (String.Equals(Me._PromoUrl, value) = false) Then
				Me.OnPromoUrlChanging(value)
				Me.SendPropertyChanging
				Me._PromoUrl = value
				Me.SendPropertyChanged("PromoUrl")
				Me.OnPromoUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitFunctionID", DbType:="Int")>  _
	Public Property UnitFunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._UnitFunctionID
		End Get
		Set
			If (Me._UnitFunctionID.Equals(value) = false) Then
				Me.OnUnitFunctionIDChanging(value)
				Me.SendPropertyChanging
				Me._UnitFunctionID = value
				Me.SendPropertyChanged("UnitFunctionID")
				Me.OnUnitFunctionIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
	Public Property StartDate() As System.Nullable(Of Date)
		Get
			Return Me._StartDate
		End Get
		Set
			If (Me._StartDate.Equals(value) = false) Then
				Me.OnStartDateChanging(value)
				Me.SendPropertyChanging
				Me._StartDate = value
				Me.SendPropertyChanged("StartDate")
				Me.OnStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
	Public Property EndDate() As System.Nullable(Of Date)
		Get
			Return Me._EndDate
		End Get
		Set
			If (Me._EndDate.Equals(value) = false) Then
				Me.OnEndDateChanging(value)
				Me.SendPropertyChanging
				Me._EndDate = value
				Me.SendPropertyChanged("EndDate")
				Me.OnEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSingleDay", DbType:="Bit")>  _
	Public Property IsSingleDay() As System.Nullable(Of Boolean)
		Get
			Return Me._IsSingleDay
		End Get
		Set
			If (Me._IsSingleDay.Equals(value) = false) Then
				Me.OnIsSingleDayChanging(value)
				Me.SendPropertyChanging
				Me._IsSingleDay = value
				Me.SendPropertyChanged("IsSingleDay")
				Me.OnIsSingleDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedBy", DbType:="NVarChar(256)")>  _
	Public Property UpdatedBy() As String
		Get
			Return Me._UpdatedBy
		End Get
		Set
			If (String.Equals(Me._UpdatedBy, value) = false) Then
				Me.OnUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._UpdatedBy = value
				Me.SendPropertyChanged("UpdatedBy")
				Me.OnUpdatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="DateTime")>  _
	Public Property UpdateDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdateDate
		End Get
		Set
			If (Me._UpdateDate.Equals(value) = false) Then
				Me.OnUpdateDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdateDate = value
				Me.SendPropertyChanged("UpdateDate")
				Me.OnUpdateDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
