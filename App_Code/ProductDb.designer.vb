'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="TheHouse_dev")>  _
Partial Public Class ProductDbDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertProduct(instance As Product)
    End Sub
  Partial Private Sub UpdateProduct(instance As Product)
    End Sub
  Partial Private Sub DeleteProduct(instance As Product)
    End Sub
  Partial Private Sub InsertProductImage(instance As ProductImage)
    End Sub
  Partial Private Sub UpdateProductImage(instance As ProductImage)
    End Sub
  Partial Private Sub DeleteProductImage(instance As ProductImage)
    End Sub
  Partial Private Sub InsertProductName(instance As ProductName)
    End Sub
  Partial Private Sub UpdateProductName(instance As ProductName)
    End Sub
  Partial Private Sub DeleteProductName(instance As ProductName)
    End Sub
  Partial Private Sub InsertProductSize(instance As ProductSize)
    End Sub
  Partial Private Sub UpdateProductSize(instance As ProductSize)
    End Sub
  Partial Private Sub DeleteProductSize(instance As ProductSize)
    End Sub
  Partial Private Sub InsertProductTag(instance As ProductTag)
    End Sub
  Partial Private Sub UpdateProductTag(instance As ProductTag)
    End Sub
  Partial Private Sub DeleteProductTag(instance As ProductTag)
    End Sub
  Partial Private Sub InsertComment(instance As Comment)
    End Sub
  Partial Private Sub UpdateComment(instance As Comment)
    End Sub
  Partial Private Sub DeleteComment(instance As Comment)
    End Sub
  Partial Private Sub InsertLikeTable(instance As LikeTable)
    End Sub
  Partial Private Sub UpdateLikeTable(instance As LikeTable)
    End Sub
  Partial Private Sub DeleteLikeTable(instance As LikeTable)
    End Sub
  Partial Private Sub InsertTag(instance As Tag)
    End Sub
  Partial Private Sub UpdateTag(instance As Tag)
    End Sub
  Partial Private Sub DeleteTag(instance As Tag)
    End Sub
  Partial Private Sub InsertTagName(instance As TagName)
    End Sub
  Partial Private Sub UpdateTagName(instance As TagName)
    End Sub
  Partial Private Sub DeleteTagName(instance As TagName)
    End Sub
  Partial Private Sub InsertOpinionLeader(instance As OpinionLeader)
    End Sub
  Partial Private Sub UpdateOpinionLeader(instance As OpinionLeader)
    End Sub
  Partial Private Sub DeleteOpinionLeader(instance As OpinionLeader)
    End Sub
  Partial Private Sub InsertViewCount(instance As ViewCount)
    End Sub
  Partial Private Sub UpdateViewCount(instance As ViewCount)
    End Sub
  Partial Private Sub DeleteViewCount(instance As ViewCount)
    End Sub
  Partial Private Sub InsertProductDetail(instance As ProductDetail)
    End Sub
  Partial Private Sub UpdateProductDetail(instance As ProductDetail)
    End Sub
  Partial Private Sub DeleteProductDetail(instance As ProductDetail)
    End Sub
  Partial Private Sub InsertMemberDetail(instance As MemberDetail)
    End Sub
  Partial Private Sub UpdateMemberDetail(instance As MemberDetail)
    End Sub
  Partial Private Sub DeleteMemberDetail(instance As MemberDetail)
    End Sub
  Partial Private Sub InsertSiteFunction(instance As SiteFunction)
    End Sub
  Partial Private Sub UpdateSiteFunction(instance As SiteFunction)
    End Sub
  Partial Private Sub DeleteSiteFunction(instance As SiteFunction)
    End Sub
  Partial Private Sub InsertRestaurantDetail(instance As RestaurantDetail)
    End Sub
  Partial Private Sub UpdateRestaurantDetail(instance As RestaurantDetail)
    End Sub
  Partial Private Sub DeleteRestaurantDetail(instance As RestaurantDetail)
    End Sub
  Partial Private Sub InsertRestaurantEventDateTime(instance As RestaurantEventDateTime)
    End Sub
  Partial Private Sub UpdateRestaurantEventDateTime(instance As RestaurantEventDateTime)
    End Sub
  Partial Private Sub DeleteRestaurantEventDateTime(instance As RestaurantEventDateTime)
    End Sub
  Partial Private Sub InsertProductRelated(instance As ProductRelated)
    End Sub
  Partial Private Sub UpdateProductRelated(instance As ProductRelated)
    End Sub
  Partial Private Sub DeleteProductRelated(instance As ProductRelated)
    End Sub
  Partial Private Sub InsertEventDetail(instance As EventDetail)
    End Sub
  Partial Private Sub UpdateEventDetail(instance As EventDetail)
    End Sub
  Partial Private Sub DeleteEventDetail(instance As EventDetail)
    End Sub
  Partial Private Sub InsertOrderForm(instance As OrderForm)
    End Sub
  Partial Private Sub UpdateOrderForm(instance As OrderForm)
    End Sub
  Partial Private Sub DeleteOrderForm(instance As OrderForm)
    End Sub
  Partial Private Sub InsertOrderItem(instance As OrderItem)
    End Sub
  Partial Private Sub UpdateOrderItem(instance As OrderItem)
    End Sub
  Partial Private Sub DeleteOrderItem(instance As OrderItem)
    End Sub
  Partial Private Sub InsertOrderStatus(instance As OrderStatus)
    End Sub
  Partial Private Sub UpdateOrderStatus(instance As OrderStatus)
    End Sub
  Partial Private Sub DeleteOrderStatus(instance As OrderStatus)
    End Sub
  Partial Private Sub InsertOrderStatusLang(instance As OrderStatusLang)
    End Sub
  Partial Private Sub UpdateOrderStatusLang(instance As OrderStatusLang)
    End Sub
  Partial Private Sub DeleteOrderStatusLang(instance As OrderStatusLang)
    End Sub
  Partial Private Sub InsertPaymentMethod(instance As PaymentMethod)
    End Sub
  Partial Private Sub UpdatePaymentMethod(instance As PaymentMethod)
    End Sub
  Partial Private Sub DeletePaymentMethod(instance As PaymentMethod)
    End Sub
  Partial Private Sub InsertPaymentMethodLang(instance As PaymentMethodLang)
    End Sub
  Partial Private Sub UpdatePaymentMethodLang(instance As PaymentMethodLang)
    End Sub
  Partial Private Sub DeletePaymentMethodLang(instance As PaymentMethodLang)
    End Sub
  Partial Private Sub InsertPayPalLog(instance As PayPalLog)
    End Sub
  Partial Private Sub UpdatePayPalLog(instance As PayPalLog)
    End Sub
  Partial Private Sub DeletePayPalLog(instance As PayPalLog)
    End Sub
  Partial Private Sub InsertPayPalStatusMap(instance As PayPalStatusMap)
    End Sub
  Partial Private Sub UpdatePayPalStatusMap(instance As PayPalStatusMap)
    End Sub
  Partial Private Sub DeletePayPalStatusMap(instance As PayPalStatusMap)
    End Sub
  Partial Private Sub InsertEventUser(instance As EventUser)
    End Sub
  Partial Private Sub UpdateEventUser(instance As EventUser)
    End Sub
  Partial Private Sub DeleteEventUser(instance As EventUser)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("MySqlConnection").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property view_Products() As System.Data.Linq.Table(Of view_Product)
		Get
			Return Me.GetTable(Of view_Product)
		End Get
	End Property
	
	Public ReadOnly Property Products() As System.Data.Linq.Table(Of Product)
		Get
			Return Me.GetTable(Of Product)
		End Get
	End Property
	
	Public ReadOnly Property ProductImages() As System.Data.Linq.Table(Of ProductImage)
		Get
			Return Me.GetTable(Of ProductImage)
		End Get
	End Property
	
	Public ReadOnly Property ProductNames() As System.Data.Linq.Table(Of ProductName)
		Get
			Return Me.GetTable(Of ProductName)
		End Get
	End Property
	
	Public ReadOnly Property ProductSizes() As System.Data.Linq.Table(Of ProductSize)
		Get
			Return Me.GetTable(Of ProductSize)
		End Get
	End Property
	
	Public ReadOnly Property ProductTags() As System.Data.Linq.Table(Of ProductTag)
		Get
			Return Me.GetTable(Of ProductTag)
		End Get
	End Property
	
	Public ReadOnly Property Comments() As System.Data.Linq.Table(Of Comment)
		Get
			Return Me.GetTable(Of Comment)
		End Get
	End Property
	
	Public ReadOnly Property LikeTables() As System.Data.Linq.Table(Of LikeTable)
		Get
			Return Me.GetTable(Of LikeTable)
		End Get
	End Property
	
	Public ReadOnly Property Tags() As System.Data.Linq.Table(Of Tag)
		Get
			Return Me.GetTable(Of Tag)
		End Get
	End Property
	
	Public ReadOnly Property TagNames() As System.Data.Linq.Table(Of TagName)
		Get
			Return Me.GetTable(Of TagName)
		End Get
	End Property
	
	Public ReadOnly Property view_Tags() As System.Data.Linq.Table(Of view_Tag)
		Get
			Return Me.GetTable(Of view_Tag)
		End Get
	End Property
	
	Public ReadOnly Property view_ProductTags() As System.Data.Linq.Table(Of view_ProductTag)
		Get
			Return Me.GetTable(Of view_ProductTag)
		End Get
	End Property
	
	Public ReadOnly Property view_LikeTableCounts() As System.Data.Linq.Table(Of view_LikeTableCount)
		Get
			Return Me.GetTable(Of view_LikeTableCount)
		End Get
	End Property
	
	Public ReadOnly Property view_LikeTableCountByUsers() As System.Data.Linq.Table(Of view_LikeTableCountByUser)
		Get
			Return Me.GetTable(Of view_LikeTableCountByUser)
		End Get
	End Property
	
	Public ReadOnly Property view_Comments() As System.Data.Linq.Table(Of view_Comment)
		Get
			Return Me.GetTable(Of view_Comment)
		End Get
	End Property
	
	Public ReadOnly Property OpinionLeaders() As System.Data.Linq.Table(Of OpinionLeader)
		Get
			Return Me.GetTable(Of OpinionLeader)
		End Get
	End Property
	
	Public ReadOnly Property ViewCounts() As System.Data.Linq.Table(Of ViewCount)
		Get
			Return Me.GetTable(Of ViewCount)
		End Get
	End Property
	
	Public ReadOnly Property ProductDetails() As System.Data.Linq.Table(Of ProductDetail)
		Get
			Return Me.GetTable(Of ProductDetail)
		End Get
	End Property
	
	Public ReadOnly Property view_ProductImages() As System.Data.Linq.Table(Of view_ProductImage)
		Get
			Return Me.GetTable(Of view_ProductImage)
		End Get
	End Property
	
	Public ReadOnly Property view_productDetails() As System.Data.Linq.Table(Of view_productDetail)
		Get
			Return Me.GetTable(Of view_productDetail)
		End Get
	End Property
	
	Public ReadOnly Property view_ProductImageTags() As System.Data.Linq.Table(Of view_ProductImageTag)
		Get
			Return Me.GetTable(Of view_ProductImageTag)
		End Get
	End Property
	
	Public ReadOnly Property MemberDetails() As System.Data.Linq.Table(Of MemberDetail)
		Get
			Return Me.GetTable(Of MemberDetail)
		End Get
	End Property
	
	Public ReadOnly Property SiteFunctions() As System.Data.Linq.Table(Of SiteFunction)
		Get
			Return Me.GetTable(Of SiteFunction)
		End Get
	End Property
	
	Public ReadOnly Property RestaurantDetails() As System.Data.Linq.Table(Of RestaurantDetail)
		Get
			Return Me.GetTable(Of RestaurantDetail)
		End Get
	End Property
	
	Public ReadOnly Property RestaurantEventDateTimes() As System.Data.Linq.Table(Of RestaurantEventDateTime)
		Get
			Return Me.GetTable(Of RestaurantEventDateTime)
		End Get
	End Property
	
	Public ReadOnly Property view_RestaurantDetails() As System.Data.Linq.Table(Of view_RestaurantDetail)
		Get
			Return Me.GetTable(Of view_RestaurantDetail)
		End Get
	End Property
	
	Public ReadOnly Property ProductRelateds() As System.Data.Linq.Table(Of ProductRelated)
		Get
			Return Me.GetTable(Of ProductRelated)
		End Get
	End Property
	
	Public ReadOnly Property EventDetails() As System.Data.Linq.Table(Of EventDetail)
		Get
			Return Me.GetTable(Of EventDetail)
		End Get
	End Property
	
	Public ReadOnly Property OrderForms() As System.Data.Linq.Table(Of OrderForm)
		Get
			Return Me.GetTable(Of OrderForm)
		End Get
	End Property
	
	Public ReadOnly Property OrderItems() As System.Data.Linq.Table(Of OrderItem)
		Get
			Return Me.GetTable(Of OrderItem)
		End Get
	End Property
	
	Public ReadOnly Property OrderStatus() As System.Data.Linq.Table(Of OrderStatus)
		Get
			Return Me.GetTable(Of OrderStatus)
		End Get
	End Property
	
	Public ReadOnly Property OrderStatusLangs() As System.Data.Linq.Table(Of OrderStatusLang)
		Get
			Return Me.GetTable(Of OrderStatusLang)
		End Get
	End Property
	
	Public ReadOnly Property PaymentMethods() As System.Data.Linq.Table(Of PaymentMethod)
		Get
			Return Me.GetTable(Of PaymentMethod)
		End Get
	End Property
	
	Public ReadOnly Property PaymentMethodLangs() As System.Data.Linq.Table(Of PaymentMethodLang)
		Get
			Return Me.GetTable(Of PaymentMethodLang)
		End Get
	End Property
	
	Public ReadOnly Property PayPalLogs() As System.Data.Linq.Table(Of PayPalLog)
		Get
			Return Me.GetTable(Of PayPalLog)
		End Get
	End Property
	
	Public ReadOnly Property PayPalStatusMaps() As System.Data.Linq.Table(Of PayPalStatusMap)
		Get
			Return Me.GetTable(Of PayPalStatusMap)
		End Get
	End Property
	
	Public ReadOnly Property EventUsers() As System.Data.Linq.Table(Of EventUser)
		Get
			Return Me.GetTable(Of EventUser)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_Product")>  _
Partial Public Class view_Product
	
	Private _CategoryID As Integer
	
	Private _ProductID As Integer
	
	Private _ProductCode As String
	
	Private _Description As String
	
	Private _MOQ As System.Nullable(Of Integer)
	
	Private _MOQUnit As String
	
	Private _ProductionLeadTime As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _SellingPrice As System.Nullable(Of Decimal)
	
	Private _Cost As System.Nullable(Of Decimal)
	
	Private _DiscountPrice As System.Nullable(Of Decimal)
	
	Private _ShippingFee As System.Nullable(Of Decimal)
	
	Private _Weight As System.Nullable(Of Decimal)
	
	Private _Height As System.Nullable(Of Decimal)
	
	Private _Width As System.Nullable(Of Decimal)
	
	Private _Depth As System.Nullable(Of Decimal)
	
	Private _SellingStartDate As System.Nullable(Of Date)
	
	Private _SellingEndDate As System.Nullable(Of Date)
	
	Private _Lang As String
	
	Private _ProductName As String
	
	Private _Name As String
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Private _CategoryName As String
	
	Private _fileUrl As String
	
	Private _fileUrl2 As String
	
	Private _LongDescription As String
	
	Private _NavigateUrl As String
	
	Private _VideoUrl As String
	
	Private _Video3D As System.Nullable(Of Boolean)
	
	Private _Author As String
	
	Private _CameraModel As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me._CategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(50)")>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me._ProductCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQ", DbType:="Int")>  _
	Public Property MOQ() As System.Nullable(Of Integer)
		Get
			Return Me._MOQ
		End Get
		Set
			If (Me._MOQ.Equals(value) = false) Then
				Me._MOQ = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQUnit", DbType:="NVarChar(50)")>  _
	Public Property MOQUnit() As String
		Get
			Return Me._MOQUnit
		End Get
		Set
			If (String.Equals(Me._MOQUnit, value) = false) Then
				Me._MOQUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductionLeadTime", DbType:="NVarChar(200)")>  _
	Public Property ProductionLeadTime() As String
		Get
			Return Me._ProductionLeadTime
		End Get
		Set
			If (String.Equals(Me._ProductionLeadTime, value) = false) Then
				Me._ProductionLeadTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me._CreatedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Money")>  _
	Public Property SellingPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SellingPrice
		End Get
		Set
			If (Me._SellingPrice.Equals(value) = false) Then
				Me._SellingPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cost", DbType:="Money")>  _
	Public Property Cost() As System.Nullable(Of Decimal)
		Get
			Return Me._Cost
		End Get
		Set
			If (Me._Cost.Equals(value) = false) Then
				Me._Cost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountPrice", DbType:="Money")>  _
	Public Property DiscountPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountPrice
		End Get
		Set
			If (Me._DiscountPrice.Equals(value) = false) Then
				Me._DiscountPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShippingFee", DbType:="Money")>  _
	Public Property ShippingFee() As System.Nullable(Of Decimal)
		Get
			Return Me._ShippingFee
		End Get
		Set
			If (Me._ShippingFee.Equals(value) = false) Then
				Me._ShippingFee = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Decimal(18,2)")>  _
	Public Property Weight() As System.Nullable(Of Decimal)
		Get
			Return Me._Weight
		End Get
		Set
			If (Me._Weight.Equals(value) = false) Then
				Me._Weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Decimal(18,2)")>  _
	Public Property Height() As System.Nullable(Of Decimal)
		Get
			Return Me._Height
		End Get
		Set
			If (Me._Height.Equals(value) = false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Decimal(18,2)")>  _
	Public Property Width() As System.Nullable(Of Decimal)
		Get
			Return Me._Width
		End Get
		Set
			If (Me._Width.Equals(value) = false) Then
				Me._Width = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Depth", DbType:="Decimal(18,2)")>  _
	Public Property Depth() As System.Nullable(Of Decimal)
		Get
			Return Me._Depth
		End Get
		Set
			If (Me._Depth.Equals(value) = false) Then
				Me._Depth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingStartDate", DbType:="DateTime")>  _
	Public Property SellingStartDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingStartDate
		End Get
		Set
			If (Me._SellingStartDate.Equals(value) = false) Then
				Me._SellingStartDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingEndDate", DbType:="DateTime")>  _
	Public Property SellingEndDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingEndDate
		End Get
		Set
			If (Me._SellingEndDate.Equals(value) = false) Then
				Me._SellingEndDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="NVarChar(256)")>  _
	Public Property ProductName() As String
		Get
			Return Me._ProductName
		End Get
		Set
			If (String.Equals(Me._ProductName, value) = false) Then
				Me._ProductName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me._FunctionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl", DbType:="NVarChar(256)")>  _
	Public Property fileUrl() As String
		Get
			Return Me._fileUrl
		End Get
		Set
			If (String.Equals(Me._fileUrl, value) = false) Then
				Me._fileUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl2", DbType:="NVarChar(256)")>  _
	Public Property fileUrl2() As String
		Get
			Return Me._fileUrl2
		End Get
		Set
			If (String.Equals(Me._fileUrl2, value) = false) Then
				Me._fileUrl2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LongDescription", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LongDescription() As String
		Get
			Return Me._LongDescription
		End Get
		Set
			If (String.Equals(Me._LongDescription, value) = false) Then
				Me._LongDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NavigateUrl", DbType:="NVarChar(256)")>  _
	Public Property NavigateUrl() As String
		Get
			Return Me._NavigateUrl
		End Get
		Set
			If (String.Equals(Me._NavigateUrl, value) = false) Then
				Me._NavigateUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VideoUrl", DbType:="NVarChar(256)")>  _
	Public Property VideoUrl() As String
		Get
			Return Me._VideoUrl
		End Get
		Set
			If (String.Equals(Me._VideoUrl, value) = false) Then
				Me._VideoUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Video3D", DbType:="Bit")>  _
	Public Property Video3D() As System.Nullable(Of Boolean)
		Get
			Return Me._Video3D
		End Get
		Set
			If (Me._Video3D.Equals(value) = false) Then
				Me._Video3D = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(256)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CameraModel", DbType:="NVarChar(500)")>  _
	Public Property CameraModel() As String
		Get
			Return Me._CameraModel
		End Get
		Set
			If (String.Equals(Me._CameraModel, value) = false) Then
				Me._CameraModel = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Product")>  _
Partial Public Class Product
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProductID As Integer
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Private _ProductCode As String
	
	Private _Name As String
	
	Private _Description As String
	
	Private _MOQ As System.Nullable(Of Integer)
	
	Private _MOQUnit As String
	
	Private _ProductionLeadTime As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _SellingPrice As System.Nullable(Of Decimal)
	
	Private _Cost As System.Nullable(Of Decimal)
	
	Private _DiscountPrice As System.Nullable(Of Decimal)
	
	Private _ShippingFee As System.Nullable(Of Decimal)
	
	Private _Weight As System.Nullable(Of Decimal)
	
	Private _Height As System.Nullable(Of Decimal)
	
	Private _Width As System.Nullable(Of Decimal)
	
	Private _Depth As System.Nullable(Of Decimal)
	
	Private _SellingStartDate As System.Nullable(Of Date)
	
	Private _SellingEndDate As System.Nullable(Of Date)
	
	Private _fileUrl As String
	
	Private _NavigateUrl As String
	
	Private _VideoUrl As String
	
	Private _Video3D As System.Nullable(Of Boolean)
	
	Private _Author As String
	
	Private _CameraModel As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnFunctionIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFunctionIDChanged()
    End Sub
    Partial Private Sub OnProductCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProductCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnMOQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMOQChanged()
    End Sub
    Partial Private Sub OnMOQUnitChanging(value As String)
    End Sub
    Partial Private Sub OnMOQUnitChanged()
    End Sub
    Partial Private Sub OnProductionLeadTimeChanging(value As String)
    End Sub
    Partial Private Sub OnProductionLeadTimeChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnSellingPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSellingPriceChanged()
    End Sub
    Partial Private Sub OnCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCostChanged()
    End Sub
    Partial Private Sub OnDiscountPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountPriceChanged()
    End Sub
    Partial Private Sub OnShippingFeeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnShippingFeeChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnWidthChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnWidthChanged()
    End Sub
    Partial Private Sub OnDepthChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDepthChanged()
    End Sub
    Partial Private Sub OnSellingStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSellingStartDateChanged()
    End Sub
    Partial Private Sub OnSellingEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSellingEndDateChanged()
    End Sub
    Partial Private Sub OnfileUrlChanging(value As String)
    End Sub
    Partial Private Sub OnfileUrlChanged()
    End Sub
    Partial Private Sub OnNavigateUrlChanging(value As String)
    End Sub
    Partial Private Sub OnNavigateUrlChanged()
    End Sub
    Partial Private Sub OnVideoUrlChanging(value As String)
    End Sub
    Partial Private Sub OnVideoUrlChanged()
    End Sub
    Partial Private Sub OnVideo3DChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnVideo3DChanged()
    End Sub
    Partial Private Sub OnAuthorChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorChanged()
    End Sub
    Partial Private Sub OnCameraModelChanging(value As String)
    End Sub
    Partial Private Sub OnCameraModelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me.OnFunctionIDChanging(value)
				Me.SendPropertyChanging
				Me._FunctionID = value
				Me.SendPropertyChanged("FunctionID")
				Me.OnFunctionIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(50)")>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me.OnProductCodeChanging(value)
				Me.SendPropertyChanging
				Me._ProductCode = value
				Me.SendPropertyChanged("ProductCode")
				Me.OnProductCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQ", DbType:="Int")>  _
	Public Property MOQ() As System.Nullable(Of Integer)
		Get
			Return Me._MOQ
		End Get
		Set
			If (Me._MOQ.Equals(value) = false) Then
				Me.OnMOQChanging(value)
				Me.SendPropertyChanging
				Me._MOQ = value
				Me.SendPropertyChanged("MOQ")
				Me.OnMOQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQUnit", DbType:="NVarChar(50)")>  _
	Public Property MOQUnit() As String
		Get
			Return Me._MOQUnit
		End Get
		Set
			If (String.Equals(Me._MOQUnit, value) = false) Then
				Me.OnMOQUnitChanging(value)
				Me.SendPropertyChanging
				Me._MOQUnit = value
				Me.SendPropertyChanged("MOQUnit")
				Me.OnMOQUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductionLeadTime", DbType:="NVarChar(200)")>  _
	Public Property ProductionLeadTime() As String
		Get
			Return Me._ProductionLeadTime
		End Get
		Set
			If (String.Equals(Me._ProductionLeadTime, value) = false) Then
				Me.OnProductionLeadTimeChanging(value)
				Me.SendPropertyChanging
				Me._ProductionLeadTime = value
				Me.SendPropertyChanged("ProductionLeadTime")
				Me.OnProductionLeadTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me.OnModifiedByChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedBy = value
				Me.SendPropertyChanged("ModifiedBy")
				Me.OnModifiedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Money")>  _
	Public Property SellingPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SellingPrice
		End Get
		Set
			If (Me._SellingPrice.Equals(value) = false) Then
				Me.OnSellingPriceChanging(value)
				Me.SendPropertyChanging
				Me._SellingPrice = value
				Me.SendPropertyChanged("SellingPrice")
				Me.OnSellingPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cost", DbType:="Money")>  _
	Public Property Cost() As System.Nullable(Of Decimal)
		Get
			Return Me._Cost
		End Get
		Set
			If (Me._Cost.Equals(value) = false) Then
				Me.OnCostChanging(value)
				Me.SendPropertyChanging
				Me._Cost = value
				Me.SendPropertyChanged("Cost")
				Me.OnCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountPrice", DbType:="Money")>  _
	Public Property DiscountPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountPrice
		End Get
		Set
			If (Me._DiscountPrice.Equals(value) = false) Then
				Me.OnDiscountPriceChanging(value)
				Me.SendPropertyChanging
				Me._DiscountPrice = value
				Me.SendPropertyChanged("DiscountPrice")
				Me.OnDiscountPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShippingFee", DbType:="Money")>  _
	Public Property ShippingFee() As System.Nullable(Of Decimal)
		Get
			Return Me._ShippingFee
		End Get
		Set
			If (Me._ShippingFee.Equals(value) = false) Then
				Me.OnShippingFeeChanging(value)
				Me.SendPropertyChanging
				Me._ShippingFee = value
				Me.SendPropertyChanged("ShippingFee")
				Me.OnShippingFeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Decimal(18,2)")>  _
	Public Property Weight() As System.Nullable(Of Decimal)
		Get
			Return Me._Weight
		End Get
		Set
			If (Me._Weight.Equals(value) = false) Then
				Me.OnWeightChanging(value)
				Me.SendPropertyChanging
				Me._Weight = value
				Me.SendPropertyChanged("Weight")
				Me.OnWeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Decimal(18,2)")>  _
	Public Property Height() As System.Nullable(Of Decimal)
		Get
			Return Me._Height
		End Get
		Set
			If (Me._Height.Equals(value) = false) Then
				Me.OnHeightChanging(value)
				Me.SendPropertyChanging
				Me._Height = value
				Me.SendPropertyChanged("Height")
				Me.OnHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Decimal(18,2)")>  _
	Public Property Width() As System.Nullable(Of Decimal)
		Get
			Return Me._Width
		End Get
		Set
			If (Me._Width.Equals(value) = false) Then
				Me.OnWidthChanging(value)
				Me.SendPropertyChanging
				Me._Width = value
				Me.SendPropertyChanged("Width")
				Me.OnWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Depth", DbType:="Decimal(18,2)")>  _
	Public Property Depth() As System.Nullable(Of Decimal)
		Get
			Return Me._Depth
		End Get
		Set
			If (Me._Depth.Equals(value) = false) Then
				Me.OnDepthChanging(value)
				Me.SendPropertyChanging
				Me._Depth = value
				Me.SendPropertyChanged("Depth")
				Me.OnDepthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingStartDate", DbType:="DateTime")>  _
	Public Property SellingStartDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingStartDate
		End Get
		Set
			If (Me._SellingStartDate.Equals(value) = false) Then
				Me.OnSellingStartDateChanging(value)
				Me.SendPropertyChanging
				Me._SellingStartDate = value
				Me.SendPropertyChanged("SellingStartDate")
				Me.OnSellingStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingEndDate", DbType:="DateTime")>  _
	Public Property SellingEndDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingEndDate
		End Get
		Set
			If (Me._SellingEndDate.Equals(value) = false) Then
				Me.OnSellingEndDateChanging(value)
				Me.SendPropertyChanging
				Me._SellingEndDate = value
				Me.SendPropertyChanged("SellingEndDate")
				Me.OnSellingEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl", DbType:="NVarChar(256)")>  _
	Public Property fileUrl() As String
		Get
			Return Me._fileUrl
		End Get
		Set
			If (String.Equals(Me._fileUrl, value) = false) Then
				Me.OnfileUrlChanging(value)
				Me.SendPropertyChanging
				Me._fileUrl = value
				Me.SendPropertyChanged("fileUrl")
				Me.OnfileUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NavigateUrl", DbType:="NVarChar(256)")>  _
	Public Property NavigateUrl() As String
		Get
			Return Me._NavigateUrl
		End Get
		Set
			If (String.Equals(Me._NavigateUrl, value) = false) Then
				Me.OnNavigateUrlChanging(value)
				Me.SendPropertyChanging
				Me._NavigateUrl = value
				Me.SendPropertyChanged("NavigateUrl")
				Me.OnNavigateUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VideoUrl", DbType:="NVarChar(256)")>  _
	Public Property VideoUrl() As String
		Get
			Return Me._VideoUrl
		End Get
		Set
			If (String.Equals(Me._VideoUrl, value) = false) Then
				Me.OnVideoUrlChanging(value)
				Me.SendPropertyChanging
				Me._VideoUrl = value
				Me.SendPropertyChanged("VideoUrl")
				Me.OnVideoUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Video3D", DbType:="Bit")>  _
	Public Property Video3D() As System.Nullable(Of Boolean)
		Get
			Return Me._Video3D
		End Get
		Set
			If (Me._Video3D.Equals(value) = false) Then
				Me.OnVideo3DChanging(value)
				Me.SendPropertyChanging
				Me._Video3D = value
				Me.SendPropertyChanged("Video3D")
				Me.OnVideo3DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(256)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me.OnAuthorChanging(value)
				Me.SendPropertyChanging
				Me._Author = value
				Me.SendPropertyChanged("Author")
				Me.OnAuthorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CameraModel", DbType:="NVarChar(500)")>  _
	Public Property CameraModel() As String
		Get
			Return Me._CameraModel
		End Get
		Set
			If (String.Equals(Me._CameraModel, value) = false) Then
				Me.OnCameraModelChanging(value)
				Me.SendPropertyChanging
				Me._CameraModel = value
				Me.SendPropertyChanged("CameraModel")
				Me.OnCameraModelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductImage")>  _
Partial Public Class ProductImage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _ProductID As Integer
	
	Private _Url As String
	
	Private _Width As System.Nullable(Of Integer)
	
	Private _Height As System.Nullable(Of Integer)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _ThumbnailWidth As System.Nullable(Of Integer)
	
	Private _ThumbnailHeight As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnUrlChanging(value As String)
    End Sub
    Partial Private Sub OnUrlChanged()
    End Sub
    Partial Private Sub OnWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWidthChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnThumbnailWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnThumbnailWidthChanged()
    End Sub
    Partial Private Sub OnThumbnailHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnThumbnailHeightChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Url", DbType:="NVarChar(100)")>  _
	Public Property Url() As String
		Get
			Return Me._Url
		End Get
		Set
			If (String.Equals(Me._Url, value) = false) Then
				Me.OnUrlChanging(value)
				Me.SendPropertyChanging
				Me._Url = value
				Me.SendPropertyChanged("Url")
				Me.OnUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Int")>  _
	Public Property Width() As System.Nullable(Of Integer)
		Get
			Return Me._Width
		End Get
		Set
			If (Me._Width.Equals(value) = false) Then
				Me.OnWidthChanging(value)
				Me.SendPropertyChanging
				Me._Width = value
				Me.SendPropertyChanged("Width")
				Me.OnWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Int")>  _
	Public Property Height() As System.Nullable(Of Integer)
		Get
			Return Me._Height
		End Get
		Set
			If (Me._Height.Equals(value) = false) Then
				Me.OnHeightChanging(value)
				Me.SendPropertyChanging
				Me._Height = value
				Me.SendPropertyChanged("Height")
				Me.OnHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailWidth", DbType:="Int")>  _
	Public Property ThumbnailWidth() As System.Nullable(Of Integer)
		Get
			Return Me._ThumbnailWidth
		End Get
		Set
			If (Me._ThumbnailWidth.Equals(value) = false) Then
				Me.OnThumbnailWidthChanging(value)
				Me.SendPropertyChanging
				Me._ThumbnailWidth = value
				Me.SendPropertyChanged("ThumbnailWidth")
				Me.OnThumbnailWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailHeight", DbType:="Int")>  _
	Public Property ThumbnailHeight() As System.Nullable(Of Integer)
		Get
			Return Me._ThumbnailHeight
		End Get
		Set
			If (Me._ThumbnailHeight.Equals(value) = false) Then
				Me.OnThumbnailHeightChanging(value)
				Me.SendPropertyChanging
				Me._ThumbnailHeight = value
				Me.SendPropertyChanged("ThumbnailHeight")
				Me.OnThumbnailHeightChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductName")>  _
Partial Public Class ProductName
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProductNameID As Integer
	
	Private _ProductID As Integer
	
	Private _Lang As String
	
	Private _ProductName As String
	
	Private _Description As String
	
	Private _fileUrl As String
	
	Private _LongDescription As String
	
	Private _fileUrl2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProductNameIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductNameIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnLangChanging(value As String)
    End Sub
    Partial Private Sub OnLangChanged()
    End Sub
    Partial Private Sub OnProductNameChanging(value As String)
    End Sub
    Partial Private Sub OnProductNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnfileUrlChanging(value As String)
    End Sub
    Partial Private Sub OnfileUrlChanged()
    End Sub
    Partial Private Sub OnLongDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnLongDescriptionChanged()
    End Sub
    Partial Private Sub OnfileUrl2Changing(value As String)
    End Sub
    Partial Private Sub OnfileUrl2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductNameID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ProductNameID() As Integer
		Get
			Return Me._ProductNameID
		End Get
		Set
			If ((Me._ProductNameID = value)  _
						= false) Then
				Me.OnProductNameIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductNameID = value
				Me.SendPropertyChanged("ProductNameID")
				Me.OnProductNameIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me.OnLangChanging(value)
				Me.SendPropertyChanging
				Me._Lang = value
				Me.SendPropertyChanged("Lang")
				Me.OnLangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="NVarChar(256)")>  _
	Public Property ProductName() As String
		Get
			Return Me._ProductName
		End Get
		Set
			If (String.Equals(Me._ProductName, value) = false) Then
				Me.OnProductNameChanging(value)
				Me.SendPropertyChanging
				Me._ProductName = value
				Me.SendPropertyChanged("ProductName")
				Me.OnProductNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl", DbType:="NVarChar(256)")>  _
	Public Property fileUrl() As String
		Get
			Return Me._fileUrl
		End Get
		Set
			If (String.Equals(Me._fileUrl, value) = false) Then
				Me.OnfileUrlChanging(value)
				Me.SendPropertyChanging
				Me._fileUrl = value
				Me.SendPropertyChanged("fileUrl")
				Me.OnfileUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LongDescription", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LongDescription() As String
		Get
			Return Me._LongDescription
		End Get
		Set
			If (String.Equals(Me._LongDescription, value) = false) Then
				Me.OnLongDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._LongDescription = value
				Me.SendPropertyChanged("LongDescription")
				Me.OnLongDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl2", DbType:="NVarChar(256)")>  _
	Public Property fileUrl2() As String
		Get
			Return Me._fileUrl2
		End Get
		Set
			If (String.Equals(Me._fileUrl2, value) = false) Then
				Me.OnfileUrl2Changing(value)
				Me.SendPropertyChanging
				Me._fileUrl2 = value
				Me.SendPropertyChanged("fileUrl2")
				Me.OnfileUrl2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductSize")>  _
Partial Public Class ProductSize
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SizeID As Integer
	
	Private _ProductID As Integer
	
	Private _Size As String
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _Enabled As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSizeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSizeIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnSizeChanging(value As String)
    End Sub
    Partial Private Sub OnSizeChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SizeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SizeID() As Integer
		Get
			Return Me._SizeID
		End Get
		Set
			If ((Me._SizeID = value)  _
						= false) Then
				Me.OnSizeIDChanging(value)
				Me.SendPropertyChanging
				Me._SizeID = value
				Me.SendPropertyChanged("SizeID")
				Me.OnSizeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Size", DbType:="NVarChar(50)")>  _
	Public Property Size() As String
		Get
			Return Me._Size
		End Get
		Set
			If (String.Equals(Me._Size, value) = false) Then
				Me.OnSizeChanging(value)
				Me.SendPropertyChanging
				Me._Size = value
				Me.SendPropertyChanged("Size")
				Me.OnSizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductTag")>  _
Partial Public Class ProductTag
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProductID As Integer
	
	Private _TagID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnTagIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTagIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property TagID() As Integer
		Get
			Return Me._TagID
		End Get
		Set
			If ((Me._TagID = value)  _
						= false) Then
				Me.OnTagIDChanging(value)
				Me.SendPropertyChanging
				Me._TagID = value
				Me.SendPropertyChanged("TagID")
				Me.OnTagIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Comment")>  _
Partial Public Class Comment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CommentID As Integer
	
	Private _CommentType As String
	
	Private _ReferenceID As Integer
	
	Private _UserID As String
	
	Private _CommentDate As Date
	
	Private _CommentDescription As String
	
	Private _IsInspected As Boolean
	
	Private _IsDisable As Boolean
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _MediaUrl As String
	
	Private _MediaTitle As String
	
	Private _MediaDesc As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCommentIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCommentIDChanged()
    End Sub
    Partial Private Sub OnCommentTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCommentTypeChanged()
    End Sub
    Partial Private Sub OnReferenceIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnReferenceIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnCommentDateChanging(value As Date)
    End Sub
    Partial Private Sub OnCommentDateChanged()
    End Sub
    Partial Private Sub OnCommentDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnCommentDescriptionChanged()
    End Sub
    Partial Private Sub OnIsInspectedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsInspectedChanged()
    End Sub
    Partial Private Sub OnIsDisableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDisableChanged()
    End Sub
    Partial Private Sub OnParentIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentIDChanged()
    End Sub
    Partial Private Sub OnMediaUrlChanging(value As String)
    End Sub
    Partial Private Sub OnMediaUrlChanged()
    End Sub
    Partial Private Sub OnMediaTitleChanging(value As String)
    End Sub
    Partial Private Sub OnMediaTitleChanged()
    End Sub
    Partial Private Sub OnMediaDescChanging(value As String)
    End Sub
    Partial Private Sub OnMediaDescChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CommentID() As Integer
		Get
			Return Me._CommentID
		End Get
		Set
			If ((Me._CommentID = value)  _
						= false) Then
				Me.OnCommentIDChanging(value)
				Me.SendPropertyChanging
				Me._CommentID = value
				Me.SendPropertyChanged("CommentID")
				Me.OnCommentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentType", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CommentType() As String
		Get
			Return Me._CommentType
		End Get
		Set
			If (String.Equals(Me._CommentType, value) = false) Then
				Me.OnCommentTypeChanging(value)
				Me.SendPropertyChanging
				Me._CommentType = value
				Me.SendPropertyChanged("CommentType")
				Me.OnCommentTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceID", DbType:="Int NOT NULL")>  _
	Public Property ReferenceID() As Integer
		Get
			Return Me._ReferenceID
		End Get
		Set
			If ((Me._ReferenceID = value)  _
						= false) Then
				Me.OnReferenceIDChanging(value)
				Me.SendPropertyChanging
				Me._ReferenceID = value
				Me.SendPropertyChanged("ReferenceID")
				Me.OnReferenceIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentDate", DbType:="DateTime NOT NULL")>  _
	Public Property CommentDate() As Date
		Get
			Return Me._CommentDate
		End Get
		Set
			If ((Me._CommentDate = value)  _
						= false) Then
				Me.OnCommentDateChanging(value)
				Me.SendPropertyChanging
				Me._CommentDate = value
				Me.SendPropertyChanged("CommentDate")
				Me.OnCommentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentDescription", DbType:="NVarChar(1024) NOT NULL", CanBeNull:=false)>  _
	Public Property CommentDescription() As String
		Get
			Return Me._CommentDescription
		End Get
		Set
			If (String.Equals(Me._CommentDescription, value) = false) Then
				Me.OnCommentDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._CommentDescription = value
				Me.SendPropertyChanged("CommentDescription")
				Me.OnCommentDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsInspected", DbType:="Bit NOT NULL")>  _
	Public Property IsInspected() As Boolean
		Get
			Return Me._IsInspected
		End Get
		Set
			If ((Me._IsInspected = value)  _
						= false) Then
				Me.OnIsInspectedChanging(value)
				Me.SendPropertyChanging
				Me._IsInspected = value
				Me.SendPropertyChanged("IsInspected")
				Me.OnIsInspectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDisable", DbType:="Bit NOT NULL")>  _
	Public Property IsDisable() As Boolean
		Get
			Return Me._IsDisable
		End Get
		Set
			If ((Me._IsDisable = value)  _
						= false) Then
				Me.OnIsDisableChanging(value)
				Me.SendPropertyChanging
				Me._IsDisable = value
				Me.SendPropertyChanged("IsDisable")
				Me.OnIsDisableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me.OnParentIDChanging(value)
				Me.SendPropertyChanging
				Me._ParentID = value
				Me.SendPropertyChanged("ParentID")
				Me.OnParentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MediaUrl", DbType:="NVarChar(512)")>  _
	Public Property MediaUrl() As String
		Get
			Return Me._MediaUrl
		End Get
		Set
			If (String.Equals(Me._MediaUrl, value) = false) Then
				Me.OnMediaUrlChanging(value)
				Me.SendPropertyChanging
				Me._MediaUrl = value
				Me.SendPropertyChanged("MediaUrl")
				Me.OnMediaUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MediaTitle", DbType:="NVarChar(256)")>  _
	Public Property MediaTitle() As String
		Get
			Return Me._MediaTitle
		End Get
		Set
			If (String.Equals(Me._MediaTitle, value) = false) Then
				Me.OnMediaTitleChanging(value)
				Me.SendPropertyChanging
				Me._MediaTitle = value
				Me.SendPropertyChanged("MediaTitle")
				Me.OnMediaTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MediaDesc", DbType:="NVarChar(1024)")>  _
	Public Property MediaDesc() As String
		Get
			Return Me._MediaDesc
		End Get
		Set
			If (String.Equals(Me._MediaDesc, value) = false) Then
				Me.OnMediaDescChanging(value)
				Me.SendPropertyChanging
				Me._MediaDesc = value
				Me.SendPropertyChanged("MediaDesc")
				Me.OnMediaDescChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LikeTable")>  _
Partial Public Class LikeTable
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LikeID As Integer
	
	Private _LikeType As String
	
	Private _ReferenceID As System.Nullable(Of Integer)
	
	Private _UserID As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLikeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLikeIDChanged()
    End Sub
    Partial Private Sub OnLikeTypeChanging(value As String)
    End Sub
    Partial Private Sub OnLikeTypeChanged()
    End Sub
    Partial Private Sub OnReferenceIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnReferenceIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LikeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LikeID() As Integer
		Get
			Return Me._LikeID
		End Get
		Set
			If ((Me._LikeID = value)  _
						= false) Then
				Me.OnLikeIDChanging(value)
				Me.SendPropertyChanging
				Me._LikeID = value
				Me.SendPropertyChanged("LikeID")
				Me.OnLikeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LikeType", DbType:="VarChar(50)")>  _
	Public Property LikeType() As String
		Get
			Return Me._LikeType
		End Get
		Set
			If (String.Equals(Me._LikeType, value) = false) Then
				Me.OnLikeTypeChanging(value)
				Me.SendPropertyChanging
				Me._LikeType = value
				Me.SendPropertyChanged("LikeType")
				Me.OnLikeTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceID", DbType:="Int")>  _
	Public Property ReferenceID() As System.Nullable(Of Integer)
		Get
			Return Me._ReferenceID
		End Get
		Set
			If (Me._ReferenceID.Equals(value) = false) Then
				Me.OnReferenceIDChanging(value)
				Me.SendPropertyChanging
				Me._ReferenceID = value
				Me.SendPropertyChanged("ReferenceID")
				Me.OnReferenceIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="NVarChar(256)")>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Tag")>  _
Partial Public Class Tag
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TagID As Integer
	
	Private _Tag As String
	
	Private _TagGroup As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _CreatedBy As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _FunctionID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTagIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTagIDChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnTagGroupChanging(value As String)
    End Sub
    Partial Private Sub OnTagGroupChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnFunctionIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFunctionIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TagID() As Integer
		Get
			Return Me._TagID
		End Get
		Set
			If ((Me._TagID = value)  _
						= false) Then
				Me.OnTagIDChanging(value)
				Me.SendPropertyChanging
				Me._TagID = value
				Me.SendPropertyChanged("TagID")
				Me.OnTagIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="NVarChar(200)")>  _
	Public Property Tag() As String
		Get
			Return Me._Tag
		End Get
		Set
			If (String.Equals(Me._Tag, value) = false) Then
				Me.OnTagChanging(value)
				Me.SendPropertyChanging
				Me._Tag = value
				Me.SendPropertyChanged("Tag")
				Me.OnTagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagGroup", DbType:="NVarChar(500)")>  _
	Public Property TagGroup() As String
		Get
			Return Me._TagGroup
		End Get
		Set
			If (String.Equals(Me._TagGroup, value) = false) Then
				Me.OnTagGroupChanging(value)
				Me.SendPropertyChanging
				Me._TagGroup = value
				Me.SendPropertyChanged("TagGroup")
				Me.OnTagGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me.OnModifiedByChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedBy = value
				Me.SendPropertyChanged("ModifiedBy")
				Me.OnModifiedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me.OnFunctionIDChanging(value)
				Me.SendPropertyChanging
				Me._FunctionID = value
				Me.SendPropertyChanged("FunctionID")
				Me.OnFunctionIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TagName")>  _
Partial Public Class TagName
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TagNameID As Integer
	
	Private _TagID As Integer
	
	Private _Lang As String
	
	Private _TagName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTagNameIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTagNameIDChanged()
    End Sub
    Partial Private Sub OnTagIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTagIDChanged()
    End Sub
    Partial Private Sub OnLangChanging(value As String)
    End Sub
    Partial Private Sub OnLangChanged()
    End Sub
    Partial Private Sub OnTagNameChanging(value As String)
    End Sub
    Partial Private Sub OnTagNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagNameID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TagNameID() As Integer
		Get
			Return Me._TagNameID
		End Get
		Set
			If ((Me._TagNameID = value)  _
						= false) Then
				Me.OnTagNameIDChanging(value)
				Me.SendPropertyChanging
				Me._TagNameID = value
				Me.SendPropertyChanged("TagNameID")
				Me.OnTagNameIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagID", DbType:="Int NOT NULL")>  _
	Public Property TagID() As Integer
		Get
			Return Me._TagID
		End Get
		Set
			If ((Me._TagID = value)  _
						= false) Then
				Me.OnTagIDChanging(value)
				Me.SendPropertyChanging
				Me._TagID = value
				Me.SendPropertyChanged("TagID")
				Me.OnTagIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me.OnLangChanging(value)
				Me.SendPropertyChanging
				Me._Lang = value
				Me.SendPropertyChanged("Lang")
				Me.OnLangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagName", DbType:="NVarChar(100)")>  _
	Public Property TagName() As String
		Get
			Return Me._TagName
		End Get
		Set
			If (String.Equals(Me._TagName, value) = false) Then
				Me.OnTagNameChanging(value)
				Me.SendPropertyChanging
				Me._TagName = value
				Me.SendPropertyChanged("TagName")
				Me.OnTagNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_Tag")>  _
Partial Public Class view_Tag
	
	Private _TagID As Integer
	
	Private _Tag As String
	
	Private _TagGroup As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _Lang As String
	
	Private _TagName As String
	
	Private _CreatedBy As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagID", DbType:="Int NOT NULL")>  _
	Public Property TagID() As Integer
		Get
			Return Me._TagID
		End Get
		Set
			If ((Me._TagID = value)  _
						= false) Then
				Me._TagID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="NVarChar(200)")>  _
	Public Property Tag() As String
		Get
			Return Me._Tag
		End Get
		Set
			If (String.Equals(Me._Tag, value) = false) Then
				Me._Tag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagGroup", DbType:="NVarChar(500)")>  _
	Public Property TagGroup() As String
		Get
			Return Me._TagGroup
		End Get
		Set
			If (String.Equals(Me._TagGroup, value) = false) Then
				Me._TagGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagName", DbType:="NVarChar(100)")>  _
	Public Property TagName() As String
		Get
			Return Me._TagName
		End Get
		Set
			If (String.Equals(Me._TagName, value) = false) Then
				Me._TagName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me._CreatedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me._FunctionID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_ProductTag")>  _
Partial Public Class view_ProductTag
	
	Private _ProductID As System.Nullable(Of Integer)
	
	Private _TagID As Integer
	
	Private _Tag As String
	
	Private _TagGroup As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _Lang As String
	
	Private _TagName As String
	
	Private _CreatedBy As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int")>  _
	Public Property ProductID() As System.Nullable(Of Integer)
		Get
			Return Me._ProductID
		End Get
		Set
			If (Me._ProductID.Equals(value) = false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagID", DbType:="Int NOT NULL")>  _
	Public Property TagID() As Integer
		Get
			Return Me._TagID
		End Get
		Set
			If ((Me._TagID = value)  _
						= false) Then
				Me._TagID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="NVarChar(200)")>  _
	Public Property Tag() As String
		Get
			Return Me._Tag
		End Get
		Set
			If (String.Equals(Me._Tag, value) = false) Then
				Me._Tag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagGroup", DbType:="NVarChar(500)")>  _
	Public Property TagGroup() As String
		Get
			Return Me._TagGroup
		End Get
		Set
			If (String.Equals(Me._TagGroup, value) = false) Then
				Me._TagGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagName", DbType:="NVarChar(100)")>  _
	Public Property TagName() As String
		Get
			Return Me._TagName
		End Get
		Set
			If (String.Equals(Me._TagName, value) = false) Then
				Me._TagName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me._CreatedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_LikeTableCount")>  _
Partial Public Class view_LikeTableCount
	
	Private _Count As System.Nullable(Of Integer)
	
	Private _LikeType As String
	
	Private _ReferenceID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Count", DbType:="Int")>  _
	Public Property Count() As System.Nullable(Of Integer)
		Get
			Return Me._Count
		End Get
		Set
			If (Me._Count.Equals(value) = false) Then
				Me._Count = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LikeType", DbType:="VarChar(50)")>  _
	Public Property LikeType() As String
		Get
			Return Me._LikeType
		End Get
		Set
			If (String.Equals(Me._LikeType, value) = false) Then
				Me._LikeType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceID", DbType:="Int")>  _
	Public Property ReferenceID() As System.Nullable(Of Integer)
		Get
			Return Me._ReferenceID
		End Get
		Set
			If (Me._ReferenceID.Equals(value) = false) Then
				Me._ReferenceID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_LikeTableCountByUser")>  _
Partial Public Class view_LikeTableCountByUser
	
	Private _LikeCount As Integer
	
	Private _LikeType As String
	
	Private _ReferenceID As System.Nullable(Of Integer)
	
	Private _UserID As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LikeCount", DbType:="Int NOT NULL")>  _
	Public Property LikeCount() As Integer
		Get
			Return Me._LikeCount
		End Get
		Set
			If ((Me._LikeCount = value)  _
						= false) Then
				Me._LikeCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LikeType", DbType:="VarChar(50)")>  _
	Public Property LikeType() As String
		Get
			Return Me._LikeType
		End Get
		Set
			If (String.Equals(Me._LikeType, value) = false) Then
				Me._LikeType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceID", DbType:="Int")>  _
	Public Property ReferenceID() As System.Nullable(Of Integer)
		Get
			Return Me._ReferenceID
		End Get
		Set
			If (Me._ReferenceID.Equals(value) = false) Then
				Me._ReferenceID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="NVarChar(256)")>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me._UserID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_Comment")>  _
Partial Public Class view_Comment
	
	Private _CommentID As Integer
	
	Private _CommentType As String
	
	Private _ReferenceID As Integer
	
	Private _UserID As String
	
	Private _CommentDate As Date
	
	Private _CommentDescription As String
	
	Private _IsInspected As Boolean
	
	Private _IsDisable As Boolean
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _MediaUrl As String
	
	Private _MediaTitle As String
	
	Private _MediaDesc As String
	
	Private _Name As String
	
	Private _UserPicUrl As String
	
	Private _LikeCount As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentID", DbType:="Int NOT NULL")>  _
	Public Property CommentID() As Integer
		Get
			Return Me._CommentID
		End Get
		Set
			If ((Me._CommentID = value)  _
						= false) Then
				Me._CommentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentType", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CommentType() As String
		Get
			Return Me._CommentType
		End Get
		Set
			If (String.Equals(Me._CommentType, value) = false) Then
				Me._CommentType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceID", DbType:="Int NOT NULL")>  _
	Public Property ReferenceID() As Integer
		Get
			Return Me._ReferenceID
		End Get
		Set
			If ((Me._ReferenceID = value)  _
						= false) Then
				Me._ReferenceID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me._UserID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentDate", DbType:="DateTime NOT NULL")>  _
	Public Property CommentDate() As Date
		Get
			Return Me._CommentDate
		End Get
		Set
			If ((Me._CommentDate = value)  _
						= false) Then
				Me._CommentDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentDescription", DbType:="NVarChar(1024) NOT NULL", CanBeNull:=false)>  _
	Public Property CommentDescription() As String
		Get
			Return Me._CommentDescription
		End Get
		Set
			If (String.Equals(Me._CommentDescription, value) = false) Then
				Me._CommentDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsInspected", DbType:="Bit NOT NULL")>  _
	Public Property IsInspected() As Boolean
		Get
			Return Me._IsInspected
		End Get
		Set
			If ((Me._IsInspected = value)  _
						= false) Then
				Me._IsInspected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDisable", DbType:="Bit NOT NULL")>  _
	Public Property IsDisable() As Boolean
		Get
			Return Me._IsDisable
		End Get
		Set
			If ((Me._IsDisable = value)  _
						= false) Then
				Me._IsDisable = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me._ParentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MediaUrl", DbType:="NVarChar(512)")>  _
	Public Property MediaUrl() As String
		Get
			Return Me._MediaUrl
		End Get
		Set
			If (String.Equals(Me._MediaUrl, value) = false) Then
				Me._MediaUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MediaTitle", DbType:="NVarChar(256)")>  _
	Public Property MediaTitle() As String
		Get
			Return Me._MediaTitle
		End Get
		Set
			If (String.Equals(Me._MediaTitle, value) = false) Then
				Me._MediaTitle = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MediaDesc", DbType:="NVarChar(1024)")>  _
	Public Property MediaDesc() As String
		Get
			Return Me._MediaDesc
		End Get
		Set
			If (String.Equals(Me._MediaDesc, value) = false) Then
				Me._MediaDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserPicUrl", DbType:="NVarChar(256)")>  _
	Public Property UserPicUrl() As String
		Get
			Return Me._UserPicUrl
		End Get
		Set
			If (String.Equals(Me._UserPicUrl, value) = false) Then
				Me._UserPicUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LikeCount", DbType:="Int NOT NULL")>  _
	Public Property LikeCount() As Integer
		Get
			Return Me._LikeCount
		End Get
		Set
			If ((Me._LikeCount = value)  _
						= false) Then
				Me._LikeCount = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OpinionLeader")>  _
Partial Public Class OpinionLeader
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _OLUserName As String
	
	Private _OLFollower As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnOLUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnOLUserNameChanged()
    End Sub
    Partial Private Sub OnOLFollowerChanging(value As String)
    End Sub
    Partial Private Sub OnOLFollowerChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLUserName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property OLUserName() As String
		Get
			Return Me._OLUserName
		End Get
		Set
			If (String.Equals(Me._OLUserName, value) = false) Then
				Me.OnOLUserNameChanging(value)
				Me.SendPropertyChanging
				Me._OLUserName = value
				Me.SendPropertyChanged("OLUserName")
				Me.OnOLUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLFollower", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property OLFollower() As String
		Get
			Return Me._OLFollower
		End Get
		Set
			If (String.Equals(Me._OLFollower, value) = false) Then
				Me.OnOLFollowerChanging(value)
				Me.SendPropertyChanging
				Me._OLFollower = value
				Me.SendPropertyChanged("OLFollower")
				Me.OnOLFollowerChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ViewCount")>  _
Partial Public Class ViewCount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Type As String
	
	Private _ReferenceID As System.Nullable(Of Integer)
	
	Private _ViewCount As System.Nullable(Of Integer)
	
	Private _LastView As System.Nullable(Of Date)
	
	Private _Viewer As String
	
	Private _Device As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnReferenceIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnReferenceIDChanged()
    End Sub
    Partial Private Sub OnViewCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnViewCountChanged()
    End Sub
    Partial Private Sub OnLastViewChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastViewChanged()
    End Sub
    Partial Private Sub OnViewerChanging(value As String)
    End Sub
    Partial Private Sub OnViewerChanged()
    End Sub
    Partial Private Sub OnDeviceChanging(value As String)
    End Sub
    Partial Private Sub OnDeviceChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NVarChar(50)")>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceID", DbType:="Int")>  _
	Public Property ReferenceID() As System.Nullable(Of Integer)
		Get
			Return Me._ReferenceID
		End Get
		Set
			If (Me._ReferenceID.Equals(value) = false) Then
				Me.OnReferenceIDChanging(value)
				Me.SendPropertyChanging
				Me._ReferenceID = value
				Me.SendPropertyChanged("ReferenceID")
				Me.OnReferenceIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewCount", DbType:="Int")>  _
	Public Property ViewCount() As System.Nullable(Of Integer)
		Get
			Return Me._ViewCount
		End Get
		Set
			If (Me._ViewCount.Equals(value) = false) Then
				Me.OnViewCountChanging(value)
				Me.SendPropertyChanging
				Me._ViewCount = value
				Me.SendPropertyChanged("ViewCount")
				Me.OnViewCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastView", DbType:="DateTime")>  _
	Public Property LastView() As System.Nullable(Of Date)
		Get
			Return Me._LastView
		End Get
		Set
			If (Me._LastView.Equals(value) = false) Then
				Me.OnLastViewChanging(value)
				Me.SendPropertyChanging
				Me._LastView = value
				Me.SendPropertyChanged("LastView")
				Me.OnLastViewChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Viewer", DbType:="NVarChar(256)")>  _
	Public Property Viewer() As String
		Get
			Return Me._Viewer
		End Get
		Set
			If (String.Equals(Me._Viewer, value) = false) Then
				Me.OnViewerChanging(value)
				Me.SendPropertyChanging
				Me._Viewer = value
				Me.SendPropertyChanged("Viewer")
				Me.OnViewerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Device", DbType:="NVarChar(512)")>  _
	Public Property Device() As String
		Get
			Return Me._Device
		End Get
		Set
			If (String.Equals(Me._Device, value) = false) Then
				Me.OnDeviceChanging(value)
				Me.SendPropertyChanging
				Me._Device = value
				Me.SendPropertyChanged("Device")
				Me.OnDeviceChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductDetail")>  _
Partial Public Class ProductDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ProductID As Integer
	
	Private _Vintage As String
	
	Private _Grape As String
	
	Private _Alcohol As System.Nullable(Of Decimal)
	
	Private _Region As String
	
	Private _Body As String
	
	Private _Volume As System.Nullable(Of Integer)
	
	Private _Winery As String
	
	Private _Website As String
	
	Private _InternationalRatings As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnVintageChanging(value As String)
    End Sub
    Partial Private Sub OnVintageChanged()
    End Sub
    Partial Private Sub OnGrapeChanging(value As String)
    End Sub
    Partial Private Sub OnGrapeChanged()
    End Sub
    Partial Private Sub OnAlcoholChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAlcoholChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnBodyChanging(value As String)
    End Sub
    Partial Private Sub OnBodyChanged()
    End Sub
    Partial Private Sub OnVolumeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVolumeChanged()
    End Sub
    Partial Private Sub OnWineryChanging(value As String)
    End Sub
    Partial Private Sub OnWineryChanged()
    End Sub
    Partial Private Sub OnWebsiteChanging(value As String)
    End Sub
    Partial Private Sub OnWebsiteChanged()
    End Sub
    Partial Private Sub OnInternationalRatingsChanging(value As String)
    End Sub
    Partial Private Sub OnInternationalRatingsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vintage", DbType:="NVarChar(50)")>  _
	Public Property Vintage() As String
		Get
			Return Me._Vintage
		End Get
		Set
			If (String.Equals(Me._Vintage, value) = false) Then
				Me.OnVintageChanging(value)
				Me.SendPropertyChanging
				Me._Vintage = value
				Me.SendPropertyChanged("Vintage")
				Me.OnVintageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grape", DbType:="NVarChar(256)")>  _
	Public Property Grape() As String
		Get
			Return Me._Grape
		End Get
		Set
			If (String.Equals(Me._Grape, value) = false) Then
				Me.OnGrapeChanging(value)
				Me.SendPropertyChanging
				Me._Grape = value
				Me.SendPropertyChanged("Grape")
				Me.OnGrapeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alcohol", DbType:="Decimal(5,2)")>  _
	Public Property Alcohol() As System.Nullable(Of Decimal)
		Get
			Return Me._Alcohol
		End Get
		Set
			If (Me._Alcohol.Equals(value) = false) Then
				Me.OnAlcoholChanging(value)
				Me.SendPropertyChanging
				Me._Alcohol = value
				Me.SendPropertyChanged("Alcohol")
				Me.OnAlcoholChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="NVarChar(256)")>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Body", DbType:="NVarChar(256)")>  _
	Public Property Body() As String
		Get
			Return Me._Body
		End Get
		Set
			If (String.Equals(Me._Body, value) = false) Then
				Me.OnBodyChanging(value)
				Me.SendPropertyChanging
				Me._Body = value
				Me.SendPropertyChanged("Body")
				Me.OnBodyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Volume", DbType:="Int")>  _
	Public Property Volume() As System.Nullable(Of Integer)
		Get
			Return Me._Volume
		End Get
		Set
			If (Me._Volume.Equals(value) = false) Then
				Me.OnVolumeChanging(value)
				Me.SendPropertyChanging
				Me._Volume = value
				Me.SendPropertyChanged("Volume")
				Me.OnVolumeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Winery", DbType:="NVarChar(256)")>  _
	Public Property Winery() As String
		Get
			Return Me._Winery
		End Get
		Set
			If (String.Equals(Me._Winery, value) = false) Then
				Me.OnWineryChanging(value)
				Me.SendPropertyChanging
				Me._Winery = value
				Me.SendPropertyChanged("Winery")
				Me.OnWineryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Website", DbType:="NVarChar(MAX)")>  _
	Public Property Website() As String
		Get
			Return Me._Website
		End Get
		Set
			If (String.Equals(Me._Website, value) = false) Then
				Me.OnWebsiteChanging(value)
				Me.SendPropertyChanging
				Me._Website = value
				Me.SendPropertyChanged("Website")
				Me.OnWebsiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternationalRatings", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property InternationalRatings() As String
		Get
			Return Me._InternationalRatings
		End Get
		Set
			If (String.Equals(Me._InternationalRatings, value) = false) Then
				Me.OnInternationalRatingsChanging(value)
				Me.SendPropertyChanging
				Me._InternationalRatings = value
				Me.SendPropertyChanged("InternationalRatings")
				Me.OnInternationalRatingsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_ProductImage")>  _
Partial Public Class view_ProductImage
	
	Private _CategoryID As Integer
	
	Private _ProductID As Integer
	
	Private _ProductCode As String
	
	Private _Name As String
	
	Private _Lang As String
	
	Private _ProductName As String
	
	Private _Description As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _SellingStartDate As System.Nullable(Of Date)
	
	Private _SellingEndDate As System.Nullable(Of Date)
	
	Private _Url As String
	
	Private _Width As Integer
	
	Private _Height As Integer
	
	Private _ThumbnailWidth As Integer
	
	Private _ThumbnailHeight As Integer
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Private _CategoryName As String
	
	Private _fileUrl As String
	
	Private _MOQUnit As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _LongDescription As String
	
	Private _NavigateUrl As String
	
	Private _VideoUrl As String
	
	Private _Author As String
	
	Private _CameraModel As String
	
	Private _SellingPrice As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me._CategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(50)")>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me._ProductCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="NVarChar(256)")>  _
	Public Property ProductName() As String
		Get
			Return Me._ProductName
		End Get
		Set
			If (String.Equals(Me._ProductName, value) = false) Then
				Me._ProductName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingStartDate", DbType:="DateTime")>  _
	Public Property SellingStartDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingStartDate
		End Get
		Set
			If (Me._SellingStartDate.Equals(value) = false) Then
				Me._SellingStartDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingEndDate", DbType:="DateTime")>  _
	Public Property SellingEndDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingEndDate
		End Get
		Set
			If (Me._SellingEndDate.Equals(value) = false) Then
				Me._SellingEndDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Url", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Url() As String
		Get
			Return Me._Url
		End Get
		Set
			If (String.Equals(Me._Url, value) = false) Then
				Me._Url = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Int NOT NULL")>  _
	Public Property Width() As Integer
		Get
			Return Me._Width
		End Get
		Set
			If ((Me._Width = value)  _
						= false) Then
				Me._Width = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Int NOT NULL")>  _
	Public Property Height() As Integer
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailWidth", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailWidth() As Integer
		Get
			Return Me._ThumbnailWidth
		End Get
		Set
			If ((Me._ThumbnailWidth = value)  _
						= false) Then
				Me._ThumbnailWidth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailHeight", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailHeight() As Integer
		Get
			Return Me._ThumbnailHeight
		End Get
		Set
			If ((Me._ThumbnailHeight = value)  _
						= false) Then
				Me._ThumbnailHeight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me._FunctionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl", DbType:="NVarChar(256)")>  _
	Public Property fileUrl() As String
		Get
			Return Me._fileUrl
		End Get
		Set
			If (String.Equals(Me._fileUrl, value) = false) Then
				Me._fileUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQUnit", DbType:="NVarChar(50)")>  _
	Public Property MOQUnit() As String
		Get
			Return Me._MOQUnit
		End Get
		Set
			If (String.Equals(Me._MOQUnit, value) = false) Then
				Me._MOQUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LongDescription", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LongDescription() As String
		Get
			Return Me._LongDescription
		End Get
		Set
			If (String.Equals(Me._LongDescription, value) = false) Then
				Me._LongDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NavigateUrl", DbType:="NVarChar(256)")>  _
	Public Property NavigateUrl() As String
		Get
			Return Me._NavigateUrl
		End Get
		Set
			If (String.Equals(Me._NavigateUrl, value) = false) Then
				Me._NavigateUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VideoUrl", DbType:="NVarChar(256)")>  _
	Public Property VideoUrl() As String
		Get
			Return Me._VideoUrl
		End Get
		Set
			If (String.Equals(Me._VideoUrl, value) = false) Then
				Me._VideoUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(256)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CameraModel", DbType:="NVarChar(500)")>  _
	Public Property CameraModel() As String
		Get
			Return Me._CameraModel
		End Get
		Set
			If (String.Equals(Me._CameraModel, value) = false) Then
				Me._CameraModel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Money")>  _
	Public Property SellingPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SellingPrice
		End Get
		Set
			If (Me._SellingPrice.Equals(value) = false) Then
				Me._SellingPrice = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_productDetail")>  _
Partial Public Class view_productDetail
	
	Private _CategoryID As Integer
	
	Private _ProductID As Integer
	
	Private _ProductCode As String
	
	Private _Name As String
	
	Private _Lang As String
	
	Private _ProductName As String
	
	Private _Description As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _SellingStartDate As System.Nullable(Of Date)
	
	Private _SellingEndDate As System.Nullable(Of Date)
	
	Private _Url As String
	
	Private _Width As Integer
	
	Private _Height As Integer
	
	Private _ThumbnailWidth As Integer
	
	Private _ThumbnailHeight As Integer
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Private _CategoryName As String
	
	Private _fileUrl As String
	
	Private _MOQUnit As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _LongDescription As String
	
	Private _NavigateUrl As String
	
	Private _VideoUrl As String
	
	Private _Author As String
	
	Private _CameraModel As String
	
	Private _SellingPrice As System.Nullable(Of Decimal)
	
	Private _Vintage As String
	
	Private _Grape As String
	
	Private _Alcohol As System.Nullable(Of Decimal)
	
	Private _Region As String
	
	Private _Body As String
	
	Private _Volume As System.Nullable(Of Integer)
	
	Private _Winery As String
	
	Private _Website As String
	
	Private _InternationalRatings As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me._CategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(50)")>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me._ProductCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="NVarChar(256)")>  _
	Public Property ProductName() As String
		Get
			Return Me._ProductName
		End Get
		Set
			If (String.Equals(Me._ProductName, value) = false) Then
				Me._ProductName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingStartDate", DbType:="DateTime")>  _
	Public Property SellingStartDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingStartDate
		End Get
		Set
			If (Me._SellingStartDate.Equals(value) = false) Then
				Me._SellingStartDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingEndDate", DbType:="DateTime")>  _
	Public Property SellingEndDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingEndDate
		End Get
		Set
			If (Me._SellingEndDate.Equals(value) = false) Then
				Me._SellingEndDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Url", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Url() As String
		Get
			Return Me._Url
		End Get
		Set
			If (String.Equals(Me._Url, value) = false) Then
				Me._Url = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Int NOT NULL")>  _
	Public Property Width() As Integer
		Get
			Return Me._Width
		End Get
		Set
			If ((Me._Width = value)  _
						= false) Then
				Me._Width = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Int NOT NULL")>  _
	Public Property Height() As Integer
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailWidth", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailWidth() As Integer
		Get
			Return Me._ThumbnailWidth
		End Get
		Set
			If ((Me._ThumbnailWidth = value)  _
						= false) Then
				Me._ThumbnailWidth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailHeight", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailHeight() As Integer
		Get
			Return Me._ThumbnailHeight
		End Get
		Set
			If ((Me._ThumbnailHeight = value)  _
						= false) Then
				Me._ThumbnailHeight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me._FunctionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl", DbType:="NVarChar(256)")>  _
	Public Property fileUrl() As String
		Get
			Return Me._fileUrl
		End Get
		Set
			If (String.Equals(Me._fileUrl, value) = false) Then
				Me._fileUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQUnit", DbType:="NVarChar(50)")>  _
	Public Property MOQUnit() As String
		Get
			Return Me._MOQUnit
		End Get
		Set
			If (String.Equals(Me._MOQUnit, value) = false) Then
				Me._MOQUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LongDescription", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LongDescription() As String
		Get
			Return Me._LongDescription
		End Get
		Set
			If (String.Equals(Me._LongDescription, value) = false) Then
				Me._LongDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NavigateUrl", DbType:="NVarChar(256)")>  _
	Public Property NavigateUrl() As String
		Get
			Return Me._NavigateUrl
		End Get
		Set
			If (String.Equals(Me._NavigateUrl, value) = false) Then
				Me._NavigateUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VideoUrl", DbType:="NVarChar(256)")>  _
	Public Property VideoUrl() As String
		Get
			Return Me._VideoUrl
		End Get
		Set
			If (String.Equals(Me._VideoUrl, value) = false) Then
				Me._VideoUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(256)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CameraModel", DbType:="NVarChar(500)")>  _
	Public Property CameraModel() As String
		Get
			Return Me._CameraModel
		End Get
		Set
			If (String.Equals(Me._CameraModel, value) = false) Then
				Me._CameraModel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Money")>  _
	Public Property SellingPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SellingPrice
		End Get
		Set
			If (Me._SellingPrice.Equals(value) = false) Then
				Me._SellingPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vintage", DbType:="NVarChar(50)")>  _
	Public Property Vintage() As String
		Get
			Return Me._Vintage
		End Get
		Set
			If (String.Equals(Me._Vintage, value) = false) Then
				Me._Vintage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grape", DbType:="NVarChar(256)")>  _
	Public Property Grape() As String
		Get
			Return Me._Grape
		End Get
		Set
			If (String.Equals(Me._Grape, value) = false) Then
				Me._Grape = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alcohol", DbType:="Decimal(5,2)")>  _
	Public Property Alcohol() As System.Nullable(Of Decimal)
		Get
			Return Me._Alcohol
		End Get
		Set
			If (Me._Alcohol.Equals(value) = false) Then
				Me._Alcohol = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="NVarChar(256)")>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me._Region = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Body", DbType:="NVarChar(256)")>  _
	Public Property Body() As String
		Get
			Return Me._Body
		End Get
		Set
			If (String.Equals(Me._Body, value) = false) Then
				Me._Body = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Volume", DbType:="Int")>  _
	Public Property Volume() As System.Nullable(Of Integer)
		Get
			Return Me._Volume
		End Get
		Set
			If (Me._Volume.Equals(value) = false) Then
				Me._Volume = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Winery", DbType:="NVarChar(256)")>  _
	Public Property Winery() As String
		Get
			Return Me._Winery
		End Get
		Set
			If (String.Equals(Me._Winery, value) = false) Then
				Me._Winery = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Website", DbType:="NVarChar(MAX)")>  _
	Public Property Website() As String
		Get
			Return Me._Website
		End Get
		Set
			If (String.Equals(Me._Website, value) = false) Then
				Me._Website = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternationalRatings", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property InternationalRatings() As String
		Get
			Return Me._InternationalRatings
		End Get
		Set
			If (String.Equals(Me._InternationalRatings, value) = false) Then
				Me._InternationalRatings = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_ProductImageTag")>  _
Partial Public Class view_ProductImageTag
	
	Private _CategoryID As Integer
	
	Private _ProductID As Integer
	
	Private _ProductCode As String
	
	Private _Name As String
	
	Private _Lang As String
	
	Private _ProductName As String
	
	Private _Description As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _SellingStartDate As System.Nullable(Of Date)
	
	Private _SellingEndDate As System.Nullable(Of Date)
	
	Private _Url As String
	
	Private _Width As Integer
	
	Private _Height As Integer
	
	Private _ThumbnailWidth As Integer
	
	Private _ThumbnailHeight As Integer
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Private _CategoryName As String
	
	Private _fileUrl As String
	
	Private _MOQUnit As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _TagID As Integer
	
	Private _SellingPrice As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me._CategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(50)")>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me._ProductCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="NVarChar(256)")>  _
	Public Property ProductName() As String
		Get
			Return Me._ProductName
		End Get
		Set
			If (String.Equals(Me._ProductName, value) = false) Then
				Me._ProductName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingStartDate", DbType:="DateTime")>  _
	Public Property SellingStartDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingStartDate
		End Get
		Set
			If (Me._SellingStartDate.Equals(value) = false) Then
				Me._SellingStartDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingEndDate", DbType:="DateTime")>  _
	Public Property SellingEndDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingEndDate
		End Get
		Set
			If (Me._SellingEndDate.Equals(value) = false) Then
				Me._SellingEndDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Url", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Url() As String
		Get
			Return Me._Url
		End Get
		Set
			If (String.Equals(Me._Url, value) = false) Then
				Me._Url = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Int NOT NULL")>  _
	Public Property Width() As Integer
		Get
			Return Me._Width
		End Get
		Set
			If ((Me._Width = value)  _
						= false) Then
				Me._Width = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Int NOT NULL")>  _
	Public Property Height() As Integer
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailWidth", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailWidth() As Integer
		Get
			Return Me._ThumbnailWidth
		End Get
		Set
			If ((Me._ThumbnailWidth = value)  _
						= false) Then
				Me._ThumbnailWidth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailHeight", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailHeight() As Integer
		Get
			Return Me._ThumbnailHeight
		End Get
		Set
			If ((Me._ThumbnailHeight = value)  _
						= false) Then
				Me._ThumbnailHeight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me._FunctionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl", DbType:="NVarChar(256)")>  _
	Public Property fileUrl() As String
		Get
			Return Me._fileUrl
		End Get
		Set
			If (String.Equals(Me._fileUrl, value) = false) Then
				Me._fileUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQUnit", DbType:="NVarChar(50)")>  _
	Public Property MOQUnit() As String
		Get
			Return Me._MOQUnit
		End Get
		Set
			If (String.Equals(Me._MOQUnit, value) = false) Then
				Me._MOQUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagID", DbType:="Int NOT NULL")>  _
	Public Property TagID() As Integer
		Get
			Return Me._TagID
		End Get
		Set
			If ((Me._TagID = value)  _
						= false) Then
				Me._TagID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Money")>  _
	Public Property SellingPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SellingPrice
		End Get
		Set
			If (Me._SellingPrice.Equals(value) = false) Then
				Me._SellingPrice = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MemberDetail")>  _
Partial Public Class MemberDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UserID As String
	
	Private _Gender As String
	
	Private _Name As String
	
	Private _Email As String
	
	Private _ContactNo As String
	
	Private _DeliveryAddress As String
	
	Private _Country As String
	
	Private _Birthday As Date
	
	Private _CreateDate As Date
	
	Private _FacebookUserID As String
	
	Private _UserPicUrl As String
	
	Private _UserDesc As String
	
	Private _UserWebsite As String
	
	Private _GooglePlusUserID As String
	
	Private _WeiboUserID As String
	
	Private _TwitterUserID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnContactNoChanging(value As String)
    End Sub
    Partial Private Sub OnContactNoChanged()
    End Sub
    Partial Private Sub OnDeliveryAddressChanging(value As String)
    End Sub
    Partial Private Sub OnDeliveryAddressChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    Partial Private Sub OnBirthdayChanging(value As Date)
    End Sub
    Partial Private Sub OnBirthdayChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As Date)
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnFacebookUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnFacebookUserIDChanged()
    End Sub
    Partial Private Sub OnUserPicUrlChanging(value As String)
    End Sub
    Partial Private Sub OnUserPicUrlChanged()
    End Sub
    Partial Private Sub OnUserDescChanging(value As String)
    End Sub
    Partial Private Sub OnUserDescChanged()
    End Sub
    Partial Private Sub OnUserWebsiteChanging(value As String)
    End Sub
    Partial Private Sub OnUserWebsiteChanged()
    End Sub
    Partial Private Sub OnGooglePlusUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnGooglePlusUserIDChanged()
    End Sub
    Partial Private Sub OnWeiboUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnWeiboUserIDChanged()
    End Sub
    Partial Private Sub OnTwitterUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnTwitterUserIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="VarChar(256) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactNo", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ContactNo() As String
		Get
			Return Me._ContactNo
		End Get
		Set
			If (String.Equals(Me._ContactNo, value) = false) Then
				Me.OnContactNoChanging(value)
				Me.SendPropertyChanging
				Me._ContactNo = value
				Me.SendPropertyChanged("ContactNo")
				Me.OnContactNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeliveryAddress", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property DeliveryAddress() As String
		Get
			Return Me._DeliveryAddress
		End Get
		Set
			If (String.Equals(Me._DeliveryAddress, value) = false) Then
				Me.OnDeliveryAddressChanging(value)
				Me.SendPropertyChanging
				Me._DeliveryAddress = value
				Me.SendPropertyChanged("DeliveryAddress")
				Me.OnDeliveryAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Country() As String
		Get
			Return Me._Country
		End Get
		Set
			If (String.Equals(Me._Country, value) = false) Then
				Me.OnCountryChanging(value)
				Me.SendPropertyChanging
				Me._Country = value
				Me.SendPropertyChanged("Country")
				Me.OnCountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Birthday", DbType:="DateTime NOT NULL")>  _
	Public Property Birthday() As Date
		Get
			Return Me._Birthday
		End Get
		Set
			If ((Me._Birthday = value)  _
						= false) Then
				Me.OnBirthdayChanging(value)
				Me.SendPropertyChanging
				Me._Birthday = value
				Me.SendPropertyChanged("Birthday")
				Me.OnBirthdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime NOT NULL")>  _
	Public Property CreateDate() As Date
		Get
			Return Me._CreateDate
		End Get
		Set
			If ((Me._CreateDate = value)  _
						= false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FacebookUserID", DbType:="NVarChar(256)")>  _
	Public Property FacebookUserID() As String
		Get
			Return Me._FacebookUserID
		End Get
		Set
			If (String.Equals(Me._FacebookUserID, value) = false) Then
				Me.OnFacebookUserIDChanging(value)
				Me.SendPropertyChanging
				Me._FacebookUserID = value
				Me.SendPropertyChanged("FacebookUserID")
				Me.OnFacebookUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserPicUrl", DbType:="NVarChar(256)")>  _
	Public Property UserPicUrl() As String
		Get
			Return Me._UserPicUrl
		End Get
		Set
			If (String.Equals(Me._UserPicUrl, value) = false) Then
				Me.OnUserPicUrlChanging(value)
				Me.SendPropertyChanging
				Me._UserPicUrl = value
				Me.SendPropertyChanged("UserPicUrl")
				Me.OnUserPicUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserDesc", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property UserDesc() As String
		Get
			Return Me._UserDesc
		End Get
		Set
			If (String.Equals(Me._UserDesc, value) = false) Then
				Me.OnUserDescChanging(value)
				Me.SendPropertyChanging
				Me._UserDesc = value
				Me.SendPropertyChanged("UserDesc")
				Me.OnUserDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserWebsite", DbType:="NVarChar(MAX)")>  _
	Public Property UserWebsite() As String
		Get
			Return Me._UserWebsite
		End Get
		Set
			If (String.Equals(Me._UserWebsite, value) = false) Then
				Me.OnUserWebsiteChanging(value)
				Me.SendPropertyChanging
				Me._UserWebsite = value
				Me.SendPropertyChanged("UserWebsite")
				Me.OnUserWebsiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GooglePlusUserID", DbType:="NVarChar(256)")>  _
	Public Property GooglePlusUserID() As String
		Get
			Return Me._GooglePlusUserID
		End Get
		Set
			If (String.Equals(Me._GooglePlusUserID, value) = false) Then
				Me.OnGooglePlusUserIDChanging(value)
				Me.SendPropertyChanging
				Me._GooglePlusUserID = value
				Me.SendPropertyChanged("GooglePlusUserID")
				Me.OnGooglePlusUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WeiboUserID", DbType:="NVarChar(256)")>  _
	Public Property WeiboUserID() As String
		Get
			Return Me._WeiboUserID
		End Get
		Set
			If (String.Equals(Me._WeiboUserID, value) = false) Then
				Me.OnWeiboUserIDChanging(value)
				Me.SendPropertyChanging
				Me._WeiboUserID = value
				Me.SendPropertyChanged("WeiboUserID")
				Me.OnWeiboUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TwitterUserID", DbType:="NVarChar(256)")>  _
	Public Property TwitterUserID() As String
		Get
			Return Me._TwitterUserID
		End Get
		Set
			If (String.Equals(Me._TwitterUserID, value) = false) Then
				Me.OnTwitterUserIDChanging(value)
				Me.SendPropertyChanging
				Me._TwitterUserID = value
				Me.SendPropertyChanged("TwitterUserID")
				Me.OnTwitterUserIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SiteFunction")>  _
Partial Public Class SiteFunction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FunctionID As Integer
	
	Private _FunctionName As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _hasCategory As System.Nullable(Of Boolean)
	
	Private _DefaultCategoryID As System.Nullable(Of Integer)
	
	Private _hasCategoryImage As System.Nullable(Of Boolean)
	
	Private _CategoryThumbnailWidth As System.Nullable(Of Integer)
	
	Private _CategoryThumbnailHeight As System.Nullable(Of Integer)
	
	Private _CategoryThumbnailNoImage As String
	
	Private _CategoryMaxLevel As System.Nullable(Of Integer)
	
	Private _CategoryImageWidth As System.Nullable(Of Integer)
	
	Private _CategoryImageHeight As System.Nullable(Of Integer)
	
	Private _CategoryImageNoImage As String
	
	Private _hasProductImage As System.Nullable(Of Boolean)
	
	Private _ProductThumbnailWidth As System.Nullable(Of Integer)
	
	Private _ProductThumbnailHeight As System.Nullable(Of Integer)
	
	Private _ProductThumbnailNoImage As String
	
	Private _ProductImageWidth As System.Nullable(Of Integer)
	
	Private _ProductImageHeight As System.Nullable(Of Integer)
	
	Private _ProductImageCount As System.Nullable(Of Integer)
	
	Private _ProductImageNoImage As String
	
	Private _hasProductCode As System.Nullable(Of Boolean)
	
	Private _hasDetails As System.Nullable(Of Boolean)
	
	Private _hasPrice As System.Nullable(Of Boolean)
	
	Private _hasDateRange As System.Nullable(Of Boolean)
	
	Private _hasTag As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _AllowUser As String
	
	Private _hasFile As System.Nullable(Of Boolean)
	
	Private _hasDescription As System.Nullable(Of Boolean)
	
	Private _HTMLDescription As System.Nullable(Of Boolean)
	
	Private _CategoryImageOptional As System.Nullable(Of Boolean)
	
	Private _ProductImageOptional As System.Nullable(Of Boolean)
	
	Private _CategoryIOSImageWidth As System.Nullable(Of Integer)
	
	Private _CategoryIOSImageHeight As System.Nullable(Of Integer)
	
	Private _CategoryAndroidImageWidth As System.Nullable(Of Integer)
	
	Private _CategoryAndroidImageHeight As System.Nullable(Of Integer)
	
	Private _ProductIOSThumbnailWidth As System.Nullable(Of Integer)
	
	Private _ProductIOSThumbnailHeight As System.Nullable(Of Integer)
	
	Private _ProductIOSImageWidth As System.Nullable(Of Integer)
	
	Private _ProductIOSImageHeight As System.Nullable(Of Integer)
	
	Private _ProductAndroidThumbnailWidth As System.Nullable(Of Integer)
	
	Private _ProductAndroidThumbnailHeight As System.Nullable(Of Integer)
	
	Private _ProductAndroidImageWidth As System.Nullable(Of Integer)
	
	Private _ProductAndroidImageHeight As System.Nullable(Of Integer)
	
	Private _hasLink As System.Nullable(Of Boolean)
	
	Private _CategoryCaptionList As String
	
	Private _hasUrl As System.Nullable(Of Boolean)
	
	Private _hasVideo As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFunctionIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFunctionIDChanged()
    End Sub
    Partial Private Sub OnFunctionNameChanging(value As String)
    End Sub
    Partial Private Sub OnFunctionNameChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    Partial Private Sub OnhasCategoryChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasCategoryChanged()
    End Sub
    Partial Private Sub OnDefaultCategoryIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDefaultCategoryIDChanged()
    End Sub
    Partial Private Sub OnhasCategoryImageChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasCategoryImageChanged()
    End Sub
    Partial Private Sub OnCategoryThumbnailWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryThumbnailWidthChanged()
    End Sub
    Partial Private Sub OnCategoryThumbnailHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryThumbnailHeightChanged()
    End Sub
    Partial Private Sub OnCategoryThumbnailNoImageChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryThumbnailNoImageChanged()
    End Sub
    Partial Private Sub OnCategoryMaxLevelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryMaxLevelChanged()
    End Sub
    Partial Private Sub OnCategoryImageWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryImageWidthChanged()
    End Sub
    Partial Private Sub OnCategoryImageHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryImageHeightChanged()
    End Sub
    Partial Private Sub OnCategoryImageNoImageChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryImageNoImageChanged()
    End Sub
    Partial Private Sub OnhasProductImageChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasProductImageChanged()
    End Sub
    Partial Private Sub OnProductThumbnailWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductThumbnailWidthChanged()
    End Sub
    Partial Private Sub OnProductThumbnailHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductThumbnailHeightChanged()
    End Sub
    Partial Private Sub OnProductThumbnailNoImageChanging(value As String)
    End Sub
    Partial Private Sub OnProductThumbnailNoImageChanged()
    End Sub
    Partial Private Sub OnProductImageWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductImageWidthChanged()
    End Sub
    Partial Private Sub OnProductImageHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductImageHeightChanged()
    End Sub
    Partial Private Sub OnProductImageCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductImageCountChanged()
    End Sub
    Partial Private Sub OnProductImageNoImageChanging(value As String)
    End Sub
    Partial Private Sub OnProductImageNoImageChanged()
    End Sub
    Partial Private Sub OnhasProductCodeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasProductCodeChanged()
    End Sub
    Partial Private Sub OnhasDetailsChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasDetailsChanged()
    End Sub
    Partial Private Sub OnhasPriceChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasPriceChanged()
    End Sub
    Partial Private Sub OnhasDateRangeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasDateRangeChanged()
    End Sub
    Partial Private Sub OnhasTagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasTagChanged()
    End Sub
    Partial Private Sub OnSortOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSortOrderChanged()
    End Sub
    Partial Private Sub OnAllowUserChanging(value As String)
    End Sub
    Partial Private Sub OnAllowUserChanged()
    End Sub
    Partial Private Sub OnhasFileChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasFileChanged()
    End Sub
    Partial Private Sub OnhasDescriptionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasDescriptionChanged()
    End Sub
    Partial Private Sub OnHTMLDescriptionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnHTMLDescriptionChanged()
    End Sub
    Partial Private Sub OnCategoryImageOptionalChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCategoryImageOptionalChanged()
    End Sub
    Partial Private Sub OnProductImageOptionalChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnProductImageOptionalChanged()
    End Sub
    Partial Private Sub OnCategoryIOSImageWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryIOSImageWidthChanged()
    End Sub
    Partial Private Sub OnCategoryIOSImageHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryIOSImageHeightChanged()
    End Sub
    Partial Private Sub OnCategoryAndroidImageWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryAndroidImageWidthChanged()
    End Sub
    Partial Private Sub OnCategoryAndroidImageHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryAndroidImageHeightChanged()
    End Sub
    Partial Private Sub OnProductIOSThumbnailWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductIOSThumbnailWidthChanged()
    End Sub
    Partial Private Sub OnProductIOSThumbnailHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductIOSThumbnailHeightChanged()
    End Sub
    Partial Private Sub OnProductIOSImageWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductIOSImageWidthChanged()
    End Sub
    Partial Private Sub OnProductIOSImageHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductIOSImageHeightChanged()
    End Sub
    Partial Private Sub OnProductAndroidThumbnailWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductAndroidThumbnailWidthChanged()
    End Sub
    Partial Private Sub OnProductAndroidThumbnailHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductAndroidThumbnailHeightChanged()
    End Sub
    Partial Private Sub OnProductAndroidImageWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductAndroidImageWidthChanged()
    End Sub
    Partial Private Sub OnProductAndroidImageHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductAndroidImageHeightChanged()
    End Sub
    Partial Private Sub OnhasLinkChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasLinkChanged()
    End Sub
    Partial Private Sub OnCategoryCaptionListChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryCaptionListChanged()
    End Sub
    Partial Private Sub OnhasUrlChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasUrlChanged()
    End Sub
    Partial Private Sub OnhasVideoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnhasVideoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FunctionID() As Integer
		Get
			Return Me._FunctionID
		End Get
		Set
			If ((Me._FunctionID = value)  _
						= false) Then
				Me.OnFunctionIDChanging(value)
				Me.SendPropertyChanging
				Me._FunctionID = value
				Me.SendPropertyChanged("FunctionID")
				Me.OnFunctionIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionName", DbType:="NVarChar(50)")>  _
	Public Property FunctionName() As String
		Get
			Return Me._FunctionName
		End Get
		Set
			If (String.Equals(Me._FunctionName, value) = false) Then
				Me.OnFunctionNameChanging(value)
				Me.SendPropertyChanging
				Me._FunctionName = value
				Me.SendPropertyChanged("FunctionName")
				Me.OnFunctionNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasCategory", DbType:="Bit")>  _
	Public Property hasCategory() As System.Nullable(Of Boolean)
		Get
			Return Me._hasCategory
		End Get
		Set
			If (Me._hasCategory.Equals(value) = false) Then
				Me.OnhasCategoryChanging(value)
				Me.SendPropertyChanging
				Me._hasCategory = value
				Me.SendPropertyChanged("hasCategory")
				Me.OnhasCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultCategoryID", DbType:="Int")>  _
	Public Property DefaultCategoryID() As System.Nullable(Of Integer)
		Get
			Return Me._DefaultCategoryID
		End Get
		Set
			If (Me._DefaultCategoryID.Equals(value) = false) Then
				Me.OnDefaultCategoryIDChanging(value)
				Me.SendPropertyChanging
				Me._DefaultCategoryID = value
				Me.SendPropertyChanged("DefaultCategoryID")
				Me.OnDefaultCategoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasCategoryImage", DbType:="Bit")>  _
	Public Property hasCategoryImage() As System.Nullable(Of Boolean)
		Get
			Return Me._hasCategoryImage
		End Get
		Set
			If (Me._hasCategoryImage.Equals(value) = false) Then
				Me.OnhasCategoryImageChanging(value)
				Me.SendPropertyChanging
				Me._hasCategoryImage = value
				Me.SendPropertyChanged("hasCategoryImage")
				Me.OnhasCategoryImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryThumbnailWidth", DbType:="Int")>  _
	Public Property CategoryThumbnailWidth() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryThumbnailWidth
		End Get
		Set
			If (Me._CategoryThumbnailWidth.Equals(value) = false) Then
				Me.OnCategoryThumbnailWidthChanging(value)
				Me.SendPropertyChanging
				Me._CategoryThumbnailWidth = value
				Me.SendPropertyChanged("CategoryThumbnailWidth")
				Me.OnCategoryThumbnailWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryThumbnailHeight", DbType:="Int")>  _
	Public Property CategoryThumbnailHeight() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryThumbnailHeight
		End Get
		Set
			If (Me._CategoryThumbnailHeight.Equals(value) = false) Then
				Me.OnCategoryThumbnailHeightChanging(value)
				Me.SendPropertyChanging
				Me._CategoryThumbnailHeight = value
				Me.SendPropertyChanged("CategoryThumbnailHeight")
				Me.OnCategoryThumbnailHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryThumbnailNoImage", DbType:="VarChar(256)")>  _
	Public Property CategoryThumbnailNoImage() As String
		Get
			Return Me._CategoryThumbnailNoImage
		End Get
		Set
			If (String.Equals(Me._CategoryThumbnailNoImage, value) = false) Then
				Me.OnCategoryThumbnailNoImageChanging(value)
				Me.SendPropertyChanging
				Me._CategoryThumbnailNoImage = value
				Me.SendPropertyChanged("CategoryThumbnailNoImage")
				Me.OnCategoryThumbnailNoImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryMaxLevel", DbType:="Int")>  _
	Public Property CategoryMaxLevel() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryMaxLevel
		End Get
		Set
			If (Me._CategoryMaxLevel.Equals(value) = false) Then
				Me.OnCategoryMaxLevelChanging(value)
				Me.SendPropertyChanging
				Me._CategoryMaxLevel = value
				Me.SendPropertyChanged("CategoryMaxLevel")
				Me.OnCategoryMaxLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryImageWidth", DbType:="Int")>  _
	Public Property CategoryImageWidth() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryImageWidth
		End Get
		Set
			If (Me._CategoryImageWidth.Equals(value) = false) Then
				Me.OnCategoryImageWidthChanging(value)
				Me.SendPropertyChanging
				Me._CategoryImageWidth = value
				Me.SendPropertyChanged("CategoryImageWidth")
				Me.OnCategoryImageWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryImageHeight", DbType:="Int")>  _
	Public Property CategoryImageHeight() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryImageHeight
		End Get
		Set
			If (Me._CategoryImageHeight.Equals(value) = false) Then
				Me.OnCategoryImageHeightChanging(value)
				Me.SendPropertyChanging
				Me._CategoryImageHeight = value
				Me.SendPropertyChanged("CategoryImageHeight")
				Me.OnCategoryImageHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryImageNoImage", DbType:="VarChar(256)")>  _
	Public Property CategoryImageNoImage() As String
		Get
			Return Me._CategoryImageNoImage
		End Get
		Set
			If (String.Equals(Me._CategoryImageNoImage, value) = false) Then
				Me.OnCategoryImageNoImageChanging(value)
				Me.SendPropertyChanging
				Me._CategoryImageNoImage = value
				Me.SendPropertyChanged("CategoryImageNoImage")
				Me.OnCategoryImageNoImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasProductImage", DbType:="Bit")>  _
	Public Property hasProductImage() As System.Nullable(Of Boolean)
		Get
			Return Me._hasProductImage
		End Get
		Set
			If (Me._hasProductImage.Equals(value) = false) Then
				Me.OnhasProductImageChanging(value)
				Me.SendPropertyChanging
				Me._hasProductImage = value
				Me.SendPropertyChanged("hasProductImage")
				Me.OnhasProductImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductThumbnailWidth", DbType:="Int")>  _
	Public Property ProductThumbnailWidth() As System.Nullable(Of Integer)
		Get
			Return Me._ProductThumbnailWidth
		End Get
		Set
			If (Me._ProductThumbnailWidth.Equals(value) = false) Then
				Me.OnProductThumbnailWidthChanging(value)
				Me.SendPropertyChanging
				Me._ProductThumbnailWidth = value
				Me.SendPropertyChanged("ProductThumbnailWidth")
				Me.OnProductThumbnailWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductThumbnailHeight", DbType:="Int")>  _
	Public Property ProductThumbnailHeight() As System.Nullable(Of Integer)
		Get
			Return Me._ProductThumbnailHeight
		End Get
		Set
			If (Me._ProductThumbnailHeight.Equals(value) = false) Then
				Me.OnProductThumbnailHeightChanging(value)
				Me.SendPropertyChanging
				Me._ProductThumbnailHeight = value
				Me.SendPropertyChanged("ProductThumbnailHeight")
				Me.OnProductThumbnailHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductThumbnailNoImage", DbType:="VarChar(256)")>  _
	Public Property ProductThumbnailNoImage() As String
		Get
			Return Me._ProductThumbnailNoImage
		End Get
		Set
			If (String.Equals(Me._ProductThumbnailNoImage, value) = false) Then
				Me.OnProductThumbnailNoImageChanging(value)
				Me.SendPropertyChanging
				Me._ProductThumbnailNoImage = value
				Me.SendPropertyChanged("ProductThumbnailNoImage")
				Me.OnProductThumbnailNoImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductImageWidth", DbType:="Int")>  _
	Public Property ProductImageWidth() As System.Nullable(Of Integer)
		Get
			Return Me._ProductImageWidth
		End Get
		Set
			If (Me._ProductImageWidth.Equals(value) = false) Then
				Me.OnProductImageWidthChanging(value)
				Me.SendPropertyChanging
				Me._ProductImageWidth = value
				Me.SendPropertyChanged("ProductImageWidth")
				Me.OnProductImageWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductImageHeight", DbType:="Int")>  _
	Public Property ProductImageHeight() As System.Nullable(Of Integer)
		Get
			Return Me._ProductImageHeight
		End Get
		Set
			If (Me._ProductImageHeight.Equals(value) = false) Then
				Me.OnProductImageHeightChanging(value)
				Me.SendPropertyChanging
				Me._ProductImageHeight = value
				Me.SendPropertyChanged("ProductImageHeight")
				Me.OnProductImageHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductImageCount", DbType:="Int")>  _
	Public Property ProductImageCount() As System.Nullable(Of Integer)
		Get
			Return Me._ProductImageCount
		End Get
		Set
			If (Me._ProductImageCount.Equals(value) = false) Then
				Me.OnProductImageCountChanging(value)
				Me.SendPropertyChanging
				Me._ProductImageCount = value
				Me.SendPropertyChanged("ProductImageCount")
				Me.OnProductImageCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductImageNoImage", DbType:="VarChar(256)")>  _
	Public Property ProductImageNoImage() As String
		Get
			Return Me._ProductImageNoImage
		End Get
		Set
			If (String.Equals(Me._ProductImageNoImage, value) = false) Then
				Me.OnProductImageNoImageChanging(value)
				Me.SendPropertyChanging
				Me._ProductImageNoImage = value
				Me.SendPropertyChanged("ProductImageNoImage")
				Me.OnProductImageNoImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasProductCode", DbType:="Bit")>  _
	Public Property hasProductCode() As System.Nullable(Of Boolean)
		Get
			Return Me._hasProductCode
		End Get
		Set
			If (Me._hasProductCode.Equals(value) = false) Then
				Me.OnhasProductCodeChanging(value)
				Me.SendPropertyChanging
				Me._hasProductCode = value
				Me.SendPropertyChanged("hasProductCode")
				Me.OnhasProductCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasDetails", DbType:="Bit")>  _
	Public Property hasDetails() As System.Nullable(Of Boolean)
		Get
			Return Me._hasDetails
		End Get
		Set
			If (Me._hasDetails.Equals(value) = false) Then
				Me.OnhasDetailsChanging(value)
				Me.SendPropertyChanging
				Me._hasDetails = value
				Me.SendPropertyChanged("hasDetails")
				Me.OnhasDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasPrice", DbType:="Bit")>  _
	Public Property hasPrice() As System.Nullable(Of Boolean)
		Get
			Return Me._hasPrice
		End Get
		Set
			If (Me._hasPrice.Equals(value) = false) Then
				Me.OnhasPriceChanging(value)
				Me.SendPropertyChanging
				Me._hasPrice = value
				Me.SendPropertyChanged("hasPrice")
				Me.OnhasPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasDateRange", DbType:="Bit")>  _
	Public Property hasDateRange() As System.Nullable(Of Boolean)
		Get
			Return Me._hasDateRange
		End Get
		Set
			If (Me._hasDateRange.Equals(value) = false) Then
				Me.OnhasDateRangeChanging(value)
				Me.SendPropertyChanging
				Me._hasDateRange = value
				Me.SendPropertyChanged("hasDateRange")
				Me.OnhasDateRangeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasTag", DbType:="Bit")>  _
	Public Property hasTag() As System.Nullable(Of Boolean)
		Get
			Return Me._hasTag
		End Get
		Set
			If (Me._hasTag.Equals(value) = false) Then
				Me.OnhasTagChanging(value)
				Me.SendPropertyChanging
				Me._hasTag = value
				Me.SendPropertyChanged("hasTag")
				Me.OnhasTagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me.OnSortOrderChanging(value)
				Me.SendPropertyChanging
				Me._SortOrder = value
				Me.SendPropertyChanged("SortOrder")
				Me.OnSortOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowUser", DbType:="NVarChar(256)")>  _
	Public Property AllowUser() As String
		Get
			Return Me._AllowUser
		End Get
		Set
			If (String.Equals(Me._AllowUser, value) = false) Then
				Me.OnAllowUserChanging(value)
				Me.SendPropertyChanging
				Me._AllowUser = value
				Me.SendPropertyChanged("AllowUser")
				Me.OnAllowUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasFile", DbType:="Bit")>  _
	Public Property hasFile() As System.Nullable(Of Boolean)
		Get
			Return Me._hasFile
		End Get
		Set
			If (Me._hasFile.Equals(value) = false) Then
				Me.OnhasFileChanging(value)
				Me.SendPropertyChanging
				Me._hasFile = value
				Me.SendPropertyChanged("hasFile")
				Me.OnhasFileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasDescription", DbType:="Bit")>  _
	Public Property hasDescription() As System.Nullable(Of Boolean)
		Get
			Return Me._hasDescription
		End Get
		Set
			If (Me._hasDescription.Equals(value) = false) Then
				Me.OnhasDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._hasDescription = value
				Me.SendPropertyChanged("hasDescription")
				Me.OnhasDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HTMLDescription", DbType:="Bit")>  _
	Public Property HTMLDescription() As System.Nullable(Of Boolean)
		Get
			Return Me._HTMLDescription
		End Get
		Set
			If (Me._HTMLDescription.Equals(value) = false) Then
				Me.OnHTMLDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._HTMLDescription = value
				Me.SendPropertyChanged("HTMLDescription")
				Me.OnHTMLDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryImageOptional", DbType:="Bit")>  _
	Public Property CategoryImageOptional() As System.Nullable(Of Boolean)
		Get
			Return Me._CategoryImageOptional
		End Get
		Set
			If (Me._CategoryImageOptional.Equals(value) = false) Then
				Me.OnCategoryImageOptionalChanging(value)
				Me.SendPropertyChanging
				Me._CategoryImageOptional = value
				Me.SendPropertyChanged("CategoryImageOptional")
				Me.OnCategoryImageOptionalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductImageOptional", DbType:="Bit")>  _
	Public Property ProductImageOptional() As System.Nullable(Of Boolean)
		Get
			Return Me._ProductImageOptional
		End Get
		Set
			If (Me._ProductImageOptional.Equals(value) = false) Then
				Me.OnProductImageOptionalChanging(value)
				Me.SendPropertyChanging
				Me._ProductImageOptional = value
				Me.SendPropertyChanged("ProductImageOptional")
				Me.OnProductImageOptionalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryIOSImageWidth", DbType:="Int")>  _
	Public Property CategoryIOSImageWidth() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryIOSImageWidth
		End Get
		Set
			If (Me._CategoryIOSImageWidth.Equals(value) = false) Then
				Me.OnCategoryIOSImageWidthChanging(value)
				Me.SendPropertyChanging
				Me._CategoryIOSImageWidth = value
				Me.SendPropertyChanged("CategoryIOSImageWidth")
				Me.OnCategoryIOSImageWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryIOSImageHeight", DbType:="Int")>  _
	Public Property CategoryIOSImageHeight() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryIOSImageHeight
		End Get
		Set
			If (Me._CategoryIOSImageHeight.Equals(value) = false) Then
				Me.OnCategoryIOSImageHeightChanging(value)
				Me.SendPropertyChanging
				Me._CategoryIOSImageHeight = value
				Me.SendPropertyChanged("CategoryIOSImageHeight")
				Me.OnCategoryIOSImageHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryAndroidImageWidth", DbType:="Int")>  _
	Public Property CategoryAndroidImageWidth() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryAndroidImageWidth
		End Get
		Set
			If (Me._CategoryAndroidImageWidth.Equals(value) = false) Then
				Me.OnCategoryAndroidImageWidthChanging(value)
				Me.SendPropertyChanging
				Me._CategoryAndroidImageWidth = value
				Me.SendPropertyChanged("CategoryAndroidImageWidth")
				Me.OnCategoryAndroidImageWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryAndroidImageHeight", DbType:="Int")>  _
	Public Property CategoryAndroidImageHeight() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryAndroidImageHeight
		End Get
		Set
			If (Me._CategoryAndroidImageHeight.Equals(value) = false) Then
				Me.OnCategoryAndroidImageHeightChanging(value)
				Me.SendPropertyChanging
				Me._CategoryAndroidImageHeight = value
				Me.SendPropertyChanged("CategoryAndroidImageHeight")
				Me.OnCategoryAndroidImageHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductIOSThumbnailWidth", DbType:="Int")>  _
	Public Property ProductIOSThumbnailWidth() As System.Nullable(Of Integer)
		Get
			Return Me._ProductIOSThumbnailWidth
		End Get
		Set
			If (Me._ProductIOSThumbnailWidth.Equals(value) = false) Then
				Me.OnProductIOSThumbnailWidthChanging(value)
				Me.SendPropertyChanging
				Me._ProductIOSThumbnailWidth = value
				Me.SendPropertyChanged("ProductIOSThumbnailWidth")
				Me.OnProductIOSThumbnailWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductIOSThumbnailHeight", DbType:="Int")>  _
	Public Property ProductIOSThumbnailHeight() As System.Nullable(Of Integer)
		Get
			Return Me._ProductIOSThumbnailHeight
		End Get
		Set
			If (Me._ProductIOSThumbnailHeight.Equals(value) = false) Then
				Me.OnProductIOSThumbnailHeightChanging(value)
				Me.SendPropertyChanging
				Me._ProductIOSThumbnailHeight = value
				Me.SendPropertyChanged("ProductIOSThumbnailHeight")
				Me.OnProductIOSThumbnailHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductIOSImageWidth", DbType:="Int")>  _
	Public Property ProductIOSImageWidth() As System.Nullable(Of Integer)
		Get
			Return Me._ProductIOSImageWidth
		End Get
		Set
			If (Me._ProductIOSImageWidth.Equals(value) = false) Then
				Me.OnProductIOSImageWidthChanging(value)
				Me.SendPropertyChanging
				Me._ProductIOSImageWidth = value
				Me.SendPropertyChanged("ProductIOSImageWidth")
				Me.OnProductIOSImageWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductIOSImageHeight", DbType:="Int")>  _
	Public Property ProductIOSImageHeight() As System.Nullable(Of Integer)
		Get
			Return Me._ProductIOSImageHeight
		End Get
		Set
			If (Me._ProductIOSImageHeight.Equals(value) = false) Then
				Me.OnProductIOSImageHeightChanging(value)
				Me.SendPropertyChanging
				Me._ProductIOSImageHeight = value
				Me.SendPropertyChanged("ProductIOSImageHeight")
				Me.OnProductIOSImageHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductAndroidThumbnailWidth", DbType:="Int")>  _
	Public Property ProductAndroidThumbnailWidth() As System.Nullable(Of Integer)
		Get
			Return Me._ProductAndroidThumbnailWidth
		End Get
		Set
			If (Me._ProductAndroidThumbnailWidth.Equals(value) = false) Then
				Me.OnProductAndroidThumbnailWidthChanging(value)
				Me.SendPropertyChanging
				Me._ProductAndroidThumbnailWidth = value
				Me.SendPropertyChanged("ProductAndroidThumbnailWidth")
				Me.OnProductAndroidThumbnailWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductAndroidThumbnailHeight", DbType:="Int")>  _
	Public Property ProductAndroidThumbnailHeight() As System.Nullable(Of Integer)
		Get
			Return Me._ProductAndroidThumbnailHeight
		End Get
		Set
			If (Me._ProductAndroidThumbnailHeight.Equals(value) = false) Then
				Me.OnProductAndroidThumbnailHeightChanging(value)
				Me.SendPropertyChanging
				Me._ProductAndroidThumbnailHeight = value
				Me.SendPropertyChanged("ProductAndroidThumbnailHeight")
				Me.OnProductAndroidThumbnailHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductAndroidImageWidth", DbType:="Int")>  _
	Public Property ProductAndroidImageWidth() As System.Nullable(Of Integer)
		Get
			Return Me._ProductAndroidImageWidth
		End Get
		Set
			If (Me._ProductAndroidImageWidth.Equals(value) = false) Then
				Me.OnProductAndroidImageWidthChanging(value)
				Me.SendPropertyChanging
				Me._ProductAndroidImageWidth = value
				Me.SendPropertyChanged("ProductAndroidImageWidth")
				Me.OnProductAndroidImageWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductAndroidImageHeight", DbType:="Int")>  _
	Public Property ProductAndroidImageHeight() As System.Nullable(Of Integer)
		Get
			Return Me._ProductAndroidImageHeight
		End Get
		Set
			If (Me._ProductAndroidImageHeight.Equals(value) = false) Then
				Me.OnProductAndroidImageHeightChanging(value)
				Me.SendPropertyChanging
				Me._ProductAndroidImageHeight = value
				Me.SendPropertyChanged("ProductAndroidImageHeight")
				Me.OnProductAndroidImageHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasLink", DbType:="Bit")>  _
	Public Property hasLink() As System.Nullable(Of Boolean)
		Get
			Return Me._hasLink
		End Get
		Set
			If (Me._hasLink.Equals(value) = false) Then
				Me.OnhasLinkChanging(value)
				Me.SendPropertyChanging
				Me._hasLink = value
				Me.SendPropertyChanged("hasLink")
				Me.OnhasLinkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryCaptionList", DbType:="NVarChar(512)")>  _
	Public Property CategoryCaptionList() As String
		Get
			Return Me._CategoryCaptionList
		End Get
		Set
			If (String.Equals(Me._CategoryCaptionList, value) = false) Then
				Me.OnCategoryCaptionListChanging(value)
				Me.SendPropertyChanging
				Me._CategoryCaptionList = value
				Me.SendPropertyChanged("CategoryCaptionList")
				Me.OnCategoryCaptionListChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasUrl", DbType:="Bit")>  _
	Public Property hasUrl() As System.Nullable(Of Boolean)
		Get
			Return Me._hasUrl
		End Get
		Set
			If (Me._hasUrl.Equals(value) = false) Then
				Me.OnhasUrlChanging(value)
				Me.SendPropertyChanging
				Me._hasUrl = value
				Me.SendPropertyChanged("hasUrl")
				Me.OnhasUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hasVideo", DbType:="Bit")>  _
	Public Property hasVideo() As System.Nullable(Of Boolean)
		Get
			Return Me._hasVideo
		End Get
		Set
			If (Me._hasVideo.Equals(value) = false) Then
				Me.OnhasVideoChanging(value)
				Me.SendPropertyChanging
				Me._hasVideo = value
				Me.SendPropertyChanged("hasVideo")
				Me.OnhasVideoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RestaurantDetail")>  _
Partial Public Class RestaurantDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ProductID As Integer
	
	Private _Address As String
	
	Private _GoogleMap As String
	
	Private _SingleUse As System.Nullable(Of Boolean)
	
	Private _PhoneNumber As String
	
	Private _Email As String
	
	Private _RestMenu As String
	
	Private _Cuisine As String
	
	Private _AvgExpense As System.Nullable(Of Decimal)
	
	Private _SeatsNumber As System.Nullable(Of Integer)
	
	Private _WineStock As System.Nullable(Of Integer)
	
	Private _PayMethod As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnGoogleMapChanging(value As String)
    End Sub
    Partial Private Sub OnGoogleMapChanged()
    End Sub
    Partial Private Sub OnSingleUseChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSingleUseChanged()
    End Sub
    Partial Private Sub OnPhoneNumberChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneNumberChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnRestMenuChanging(value As String)
    End Sub
    Partial Private Sub OnRestMenuChanged()
    End Sub
    Partial Private Sub OnCuisineChanging(value As String)
    End Sub
    Partial Private Sub OnCuisineChanged()
    End Sub
    Partial Private Sub OnAvgExpenseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAvgExpenseChanged()
    End Sub
    Partial Private Sub OnSeatsNumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSeatsNumberChanged()
    End Sub
    Partial Private Sub OnWineStockChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWineStockChanged()
    End Sub
    Partial Private Sub OnPayMethodChanging(value As String)
    End Sub
    Partial Private Sub OnPayMethodChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(MAX)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GoogleMap", DbType:="NVarChar(MAX)")>  _
	Public Property GoogleMap() As String
		Get
			Return Me._GoogleMap
		End Get
		Set
			If (String.Equals(Me._GoogleMap, value) = false) Then
				Me.OnGoogleMapChanging(value)
				Me.SendPropertyChanging
				Me._GoogleMap = value
				Me.SendPropertyChanged("GoogleMap")
				Me.OnGoogleMapChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SingleUse", DbType:="Bit")>  _
	Public Property SingleUse() As System.Nullable(Of Boolean)
		Get
			Return Me._SingleUse
		End Get
		Set
			If (Me._SingleUse.Equals(value) = false) Then
				Me.OnSingleUseChanging(value)
				Me.SendPropertyChanging
				Me._SingleUse = value
				Me.SendPropertyChanged("SingleUse")
				Me.OnSingleUseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneNumber", DbType:="NVarChar(256)")>  _
	Public Property PhoneNumber() As String
		Get
			Return Me._PhoneNumber
		End Get
		Set
			If (String.Equals(Me._PhoneNumber, value) = false) Then
				Me.OnPhoneNumberChanging(value)
				Me.SendPropertyChanging
				Me._PhoneNumber = value
				Me.SendPropertyChanged("PhoneNumber")
				Me.OnPhoneNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(MAX)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RestMenu", DbType:="NVarChar(256)")>  _
	Public Property RestMenu() As String
		Get
			Return Me._RestMenu
		End Get
		Set
			If (String.Equals(Me._RestMenu, value) = false) Then
				Me.OnRestMenuChanging(value)
				Me.SendPropertyChanging
				Me._RestMenu = value
				Me.SendPropertyChanged("RestMenu")
				Me.OnRestMenuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cuisine", DbType:="NVarChar(MAX)")>  _
	Public Property Cuisine() As String
		Get
			Return Me._Cuisine
		End Get
		Set
			If (String.Equals(Me._Cuisine, value) = false) Then
				Me.OnCuisineChanging(value)
				Me.SendPropertyChanging
				Me._Cuisine = value
				Me.SendPropertyChanged("Cuisine")
				Me.OnCuisineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AvgExpense", DbType:="Decimal(10,2)")>  _
	Public Property AvgExpense() As System.Nullable(Of Decimal)
		Get
			Return Me._AvgExpense
		End Get
		Set
			If (Me._AvgExpense.Equals(value) = false) Then
				Me.OnAvgExpenseChanging(value)
				Me.SendPropertyChanging
				Me._AvgExpense = value
				Me.SendPropertyChanged("AvgExpense")
				Me.OnAvgExpenseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeatsNumber", DbType:="Int")>  _
	Public Property SeatsNumber() As System.Nullable(Of Integer)
		Get
			Return Me._SeatsNumber
		End Get
		Set
			If (Me._SeatsNumber.Equals(value) = false) Then
				Me.OnSeatsNumberChanging(value)
				Me.SendPropertyChanging
				Me._SeatsNumber = value
				Me.SendPropertyChanged("SeatsNumber")
				Me.OnSeatsNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WineStock", DbType:="Int")>  _
	Public Property WineStock() As System.Nullable(Of Integer)
		Get
			Return Me._WineStock
		End Get
		Set
			If (Me._WineStock.Equals(value) = false) Then
				Me.OnWineStockChanging(value)
				Me.SendPropertyChanging
				Me._WineStock = value
				Me.SendPropertyChanged("WineStock")
				Me.OnWineStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayMethod", DbType:="NVarChar(256)")>  _
	Public Property PayMethod() As String
		Get
			Return Me._PayMethod
		End Get
		Set
			If (String.Equals(Me._PayMethod, value) = false) Then
				Me.OnPayMethodChanging(value)
				Me.SendPropertyChanging
				Me._PayMethod = value
				Me.SendPropertyChanged("PayMethod")
				Me.OnPayMethodChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RestaurantEventDateTime")>  _
Partial Public Class RestaurantEventDateTime
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ProductID As Integer
	
	Private _FromDateTime As Date
	
	Private _ToDateTime As Date
	
	Private _Enabled As Boolean
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnFromDateTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnFromDateTimeChanged()
    End Sub
    Partial Private Sub OnToDateTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnToDateTimeChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FromDateTime", DbType:="DateTime NOT NULL")>  _
	Public Property FromDateTime() As Date
		Get
			Return Me._FromDateTime
		End Get
		Set
			If ((Me._FromDateTime = value)  _
						= false) Then
				Me.OnFromDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._FromDateTime = value
				Me.SendPropertyChanged("FromDateTime")
				Me.OnFromDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ToDateTime", DbType:="DateTime NOT NULL")>  _
	Public Property ToDateTime() As Date
		Get
			Return Me._ToDateTime
		End Get
		Set
			If ((Me._ToDateTime = value)  _
						= false) Then
				Me.OnToDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._ToDateTime = value
				Me.SendPropertyChanged("ToDateTime")
				Me.OnToDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit NOT NULL")>  _
	Public Property Enabled() As Boolean
		Get
			Return Me._Enabled
		End Get
		Set
			If ((Me._Enabled = value)  _
						= false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me.OnModifiedByChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedBy = value
				Me.SendPropertyChanged("ModifiedBy")
				Me.OnModifiedByChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_RestaurantDetail")>  _
Partial Public Class view_RestaurantDetail
	
	Private _ProductID As Integer
	
	Private _Description As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _Lang As String
	
	Private _ProductName As String
	
	Private _Address As String
	
	Private _GoogleMap As String
	
	Private _SingleUse As System.Nullable(Of Boolean)
	
	Private _PhoneNumber As String
	
	Private _Email As String
	
	Private _Cuisine As String
	
	Private _RestMenu As String
	
	Private _AvgExpense As System.Nullable(Of Decimal)
	
	Private _SeatsNumber As System.Nullable(Of Integer)
	
	Private _WineStock As System.Nullable(Of Integer)
	
	Private _PayMethod As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me._CreatedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="NVarChar(256)")>  _
	Public Property ProductName() As String
		Get
			Return Me._ProductName
		End Get
		Set
			If (String.Equals(Me._ProductName, value) = false) Then
				Me._ProductName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(MAX)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me._Address = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GoogleMap", DbType:="NVarChar(MAX)")>  _
	Public Property GoogleMap() As String
		Get
			Return Me._GoogleMap
		End Get
		Set
			If (String.Equals(Me._GoogleMap, value) = false) Then
				Me._GoogleMap = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SingleUse", DbType:="Bit")>  _
	Public Property SingleUse() As System.Nullable(Of Boolean)
		Get
			Return Me._SingleUse
		End Get
		Set
			If (Me._SingleUse.Equals(value) = false) Then
				Me._SingleUse = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneNumber", DbType:="NVarChar(256)")>  _
	Public Property PhoneNumber() As String
		Get
			Return Me._PhoneNumber
		End Get
		Set
			If (String.Equals(Me._PhoneNumber, value) = false) Then
				Me._PhoneNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(MAX)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cuisine", DbType:="NVarChar(MAX)")>  _
	Public Property Cuisine() As String
		Get
			Return Me._Cuisine
		End Get
		Set
			If (String.Equals(Me._Cuisine, value) = false) Then
				Me._Cuisine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RestMenu", DbType:="NVarChar(256)")>  _
	Public Property RestMenu() As String
		Get
			Return Me._RestMenu
		End Get
		Set
			If (String.Equals(Me._RestMenu, value) = false) Then
				Me._RestMenu = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AvgExpense", DbType:="Decimal(10,2)")>  _
	Public Property AvgExpense() As System.Nullable(Of Decimal)
		Get
			Return Me._AvgExpense
		End Get
		Set
			If (Me._AvgExpense.Equals(value) = false) Then
				Me._AvgExpense = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeatsNumber", DbType:="Int")>  _
	Public Property SeatsNumber() As System.Nullable(Of Integer)
		Get
			Return Me._SeatsNumber
		End Get
		Set
			If (Me._SeatsNumber.Equals(value) = false) Then
				Me._SeatsNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WineStock", DbType:="Int")>  _
	Public Property WineStock() As System.Nullable(Of Integer)
		Get
			Return Me._WineStock
		End Get
		Set
			If (Me._WineStock.Equals(value) = false) Then
				Me._WineStock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayMethod", DbType:="NVarChar(256)")>  _
	Public Property PayMethod() As String
		Get
			Return Me._PayMethod
		End Get
		Set
			If (String.Equals(Me._PayMethod, value) = false) Then
				Me._PayMethod = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductRelated")>  _
Partial Public Class ProductRelated
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ProductID As Integer
	
	Private _RelatedID As Integer
	
	Private _Enabled As Boolean
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _RelatedType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnRelatedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRelatedIDChanged()
    End Sub
    Partial Private Sub OnEnabledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnabledChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnRelatedTypeChanging(value As String)
    End Sub
    Partial Private Sub OnRelatedTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RelatedID", DbType:="Int NOT NULL")>  _
	Public Property RelatedID() As Integer
		Get
			Return Me._RelatedID
		End Get
		Set
			If ((Me._RelatedID = value)  _
						= false) Then
				Me.OnRelatedIDChanging(value)
				Me.SendPropertyChanging
				Me._RelatedID = value
				Me.SendPropertyChanged("RelatedID")
				Me.OnRelatedIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit NOT NULL")>  _
	Public Property Enabled() As Boolean
		Get
			Return Me._Enabled
		End Get
		Set
			If ((Me._Enabled = value)  _
						= false) Then
				Me.OnEnabledChanging(value)
				Me.SendPropertyChanging
				Me._Enabled = value
				Me.SendPropertyChanged("Enabled")
				Me.OnEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me.OnModifiedByChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedBy = value
				Me.SendPropertyChanged("ModifiedBy")
				Me.OnModifiedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RelatedType", DbType:="NVarChar(100)")>  _
	Public Property RelatedType() As String
		Get
			Return Me._RelatedType
		End Get
		Set
			If (String.Equals(Me._RelatedType, value) = false) Then
				Me.OnRelatedTypeChanging(value)
				Me.SendPropertyChanging
				Me._RelatedType = value
				Me.SendPropertyChanged("RelatedType")
				Me.OnRelatedTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EventDetail")>  _
Partial Public Class EventDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ProductID As Integer
	
	Private _CurrencyCode As String
	
	Private _EventPrice As Decimal
	
	Private _GlassPrice1 As System.Nullable(Of Decimal)
	
	Private _GlassVolume1 As System.Nullable(Of Decimal)
	
	Private _GlassPrice2 As System.Nullable(Of Decimal)
	
	Private _GlassVolume2 As System.Nullable(Of Decimal)
	
	Private _GlassPrice3 As System.Nullable(Of Decimal)
	
	Private _GlassVolume3 As System.Nullable(Of Decimal)
	
	Private _MaxAttend As Integer
	
	Private _MenuUrl As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnCurrencyCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCurrencyCodeChanged()
    End Sub
    Partial Private Sub OnEventPriceChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEventPriceChanged()
    End Sub
    Partial Private Sub OnGlassPrice1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGlassPrice1Changed()
    End Sub
    Partial Private Sub OnGlassVolume1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGlassVolume1Changed()
    End Sub
    Partial Private Sub OnGlassPrice2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGlassPrice2Changed()
    End Sub
    Partial Private Sub OnGlassVolume2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGlassVolume2Changed()
    End Sub
    Partial Private Sub OnGlassPrice3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGlassPrice3Changed()
    End Sub
    Partial Private Sub OnGlassVolume3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGlassVolume3Changed()
    End Sub
    Partial Private Sub OnMaxAttendChanging(value As Integer)
    End Sub
    Partial Private Sub OnMaxAttendChanged()
    End Sub
    Partial Private Sub OnMenuUrlChanging(value As String)
    End Sub
    Partial Private Sub OnMenuUrlChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrencyCode", DbType:="VarChar(50)")>  _
	Public Property CurrencyCode() As String
		Get
			Return Me._CurrencyCode
		End Get
		Set
			If (String.Equals(Me._CurrencyCode, value) = false) Then
				Me.OnCurrencyCodeChanging(value)
				Me.SendPropertyChanging
				Me._CurrencyCode = value
				Me.SendPropertyChanged("CurrencyCode")
				Me.OnCurrencyCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EventPrice", DbType:="Decimal(7,2) NOT NULL")>  _
	Public Property EventPrice() As Decimal
		Get
			Return Me._EventPrice
		End Get
		Set
			If ((Me._EventPrice = value)  _
						= false) Then
				Me.OnEventPriceChanging(value)
				Me.SendPropertyChanging
				Me._EventPrice = value
				Me.SendPropertyChanged("EventPrice")
				Me.OnEventPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlassPrice1", DbType:="Decimal(7,2)")>  _
	Public Property GlassPrice1() As System.Nullable(Of Decimal)
		Get
			Return Me._GlassPrice1
		End Get
		Set
			If (Me._GlassPrice1.Equals(value) = false) Then
				Me.OnGlassPrice1Changing(value)
				Me.SendPropertyChanging
				Me._GlassPrice1 = value
				Me.SendPropertyChanged("GlassPrice1")
				Me.OnGlassPrice1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlassVolume1", DbType:="Decimal(7,2)")>  _
	Public Property GlassVolume1() As System.Nullable(Of Decimal)
		Get
			Return Me._GlassVolume1
		End Get
		Set
			If (Me._GlassVolume1.Equals(value) = false) Then
				Me.OnGlassVolume1Changing(value)
				Me.SendPropertyChanging
				Me._GlassVolume1 = value
				Me.SendPropertyChanged("GlassVolume1")
				Me.OnGlassVolume1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlassPrice2", DbType:="Decimal(7,2)")>  _
	Public Property GlassPrice2() As System.Nullable(Of Decimal)
		Get
			Return Me._GlassPrice2
		End Get
		Set
			If (Me._GlassPrice2.Equals(value) = false) Then
				Me.OnGlassPrice2Changing(value)
				Me.SendPropertyChanging
				Me._GlassPrice2 = value
				Me.SendPropertyChanged("GlassPrice2")
				Me.OnGlassPrice2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlassVolume2", DbType:="Decimal(7,2)")>  _
	Public Property GlassVolume2() As System.Nullable(Of Decimal)
		Get
			Return Me._GlassVolume2
		End Get
		Set
			If (Me._GlassVolume2.Equals(value) = false) Then
				Me.OnGlassVolume2Changing(value)
				Me.SendPropertyChanging
				Me._GlassVolume2 = value
				Me.SendPropertyChanged("GlassVolume2")
				Me.OnGlassVolume2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlassPrice3", DbType:="Decimal(7,2)")>  _
	Public Property GlassPrice3() As System.Nullable(Of Decimal)
		Get
			Return Me._GlassPrice3
		End Get
		Set
			If (Me._GlassPrice3.Equals(value) = false) Then
				Me.OnGlassPrice3Changing(value)
				Me.SendPropertyChanging
				Me._GlassPrice3 = value
				Me.SendPropertyChanged("GlassPrice3")
				Me.OnGlassPrice3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlassVolume3", DbType:="Decimal(7,2)")>  _
	Public Property GlassVolume3() As System.Nullable(Of Decimal)
		Get
			Return Me._GlassVolume3
		End Get
		Set
			If (Me._GlassVolume3.Equals(value) = false) Then
				Me.OnGlassVolume3Changing(value)
				Me.SendPropertyChanging
				Me._GlassVolume3 = value
				Me.SendPropertyChanged("GlassVolume3")
				Me.OnGlassVolume3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxAttend", DbType:="Int NOT NULL")>  _
	Public Property MaxAttend() As Integer
		Get
			Return Me._MaxAttend
		End Get
		Set
			If ((Me._MaxAttend = value)  _
						= false) Then
				Me.OnMaxAttendChanging(value)
				Me.SendPropertyChanging
				Me._MaxAttend = value
				Me.SendPropertyChanged("MaxAttend")
				Me.OnMaxAttendChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MenuUrl", DbType:="NVarChar(256)")>  _
	Public Property MenuUrl() As String
		Get
			Return Me._MenuUrl
		End Get
		Set
			If (String.Equals(Me._MenuUrl, value) = false) Then
				Me.OnMenuUrlChanging(value)
				Me.SendPropertyChanging
				Me._MenuUrl = value
				Me.SendPropertyChanged("MenuUrl")
				Me.OnMenuUrlChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrderForm")>  _
Partial Public Class OrderForm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OrderID As Integer
	
	Private _OrderNumber As String
	
	Private _OrderDate As Date
	
	Private _CustomerName As String
	
	Private _ContactPhone As String
	
	Private _DeliveryAddress As String
	
	Private _Country As String
	
	Private _Email As String
	
	Private _Remark As String
	
	Private _PaymentMethod As Integer
	
	Private _DeliveryMethod As Integer
	
	Private _OrderStatus As String
	
	Private _TotalAmount As Decimal
	
	Private _TransactionRefNo As String
	
	Private _PaidDate As Date
	
	Private _PayPalStatus As String
	
	Private _Lang As String
	
	Private _LastUpdateUser As String
	
	Private _LastUpdateTime As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOrderIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOrderIDChanged()
    End Sub
    Partial Private Sub OnOrderNumberChanging(value As String)
    End Sub
    Partial Private Sub OnOrderNumberChanged()
    End Sub
    Partial Private Sub OnOrderDateChanging(value As Date)
    End Sub
    Partial Private Sub OnOrderDateChanged()
    End Sub
    Partial Private Sub OnCustomerNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerNameChanged()
    End Sub
    Partial Private Sub OnContactPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnContactPhoneChanged()
    End Sub
    Partial Private Sub OnDeliveryAddressChanging(value As String)
    End Sub
    Partial Private Sub OnDeliveryAddressChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnPaymentMethodChanging(value As Integer)
    End Sub
    Partial Private Sub OnPaymentMethodChanged()
    End Sub
    Partial Private Sub OnDeliveryMethodChanging(value As Integer)
    End Sub
    Partial Private Sub OnDeliveryMethodChanged()
    End Sub
    Partial Private Sub OnOrderStatusChanging(value As String)
    End Sub
    Partial Private Sub OnOrderStatusChanged()
    End Sub
    Partial Private Sub OnTotalAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotalAmountChanged()
    End Sub
    Partial Private Sub OnTransactionRefNoChanging(value As String)
    End Sub
    Partial Private Sub OnTransactionRefNoChanged()
    End Sub
    Partial Private Sub OnPaidDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPaidDateChanged()
    End Sub
    Partial Private Sub OnPayPalStatusChanging(value As String)
    End Sub
    Partial Private Sub OnPayPalStatusChanged()
    End Sub
    Partial Private Sub OnLangChanging(value As String)
    End Sub
    Partial Private Sub OnLangChanged()
    End Sub
    Partial Private Sub OnLastUpdateUserChanging(value As String)
    End Sub
    Partial Private Sub OnLastUpdateUserChanged()
    End Sub
    Partial Private Sub OnLastUpdateTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnLastUpdateTimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OrderID() As Integer
		Get
			Return Me._OrderID
		End Get
		Set
			If ((Me._OrderID = value)  _
						= false) Then
				Me.OnOrderIDChanging(value)
				Me.SendPropertyChanging
				Me._OrderID = value
				Me.SendPropertyChanged("OrderID")
				Me.OnOrderIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderNumber", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OrderNumber() As String
		Get
			Return Me._OrderNumber
		End Get
		Set
			If (String.Equals(Me._OrderNumber, value) = false) Then
				Me.OnOrderNumberChanging(value)
				Me.SendPropertyChanging
				Me._OrderNumber = value
				Me.SendPropertyChanged("OrderNumber")
				Me.OnOrderNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderDate", DbType:="DateTime NOT NULL")>  _
	Public Property OrderDate() As Date
		Get
			Return Me._OrderDate
		End Get
		Set
			If ((Me._OrderDate = value)  _
						= false) Then
				Me.OnOrderDateChanging(value)
				Me.SendPropertyChanging
				Me._OrderDate = value
				Me.SendPropertyChanged("OrderDate")
				Me.OnOrderDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerName() As String
		Get
			Return Me._CustomerName
		End Get
		Set
			If (String.Equals(Me._CustomerName, value) = false) Then
				Me.OnCustomerNameChanging(value)
				Me.SendPropertyChanging
				Me._CustomerName = value
				Me.SendPropertyChanged("CustomerName")
				Me.OnCustomerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPhone", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ContactPhone() As String
		Get
			Return Me._ContactPhone
		End Get
		Set
			If (String.Equals(Me._ContactPhone, value) = false) Then
				Me.OnContactPhoneChanging(value)
				Me.SendPropertyChanging
				Me._ContactPhone = value
				Me.SendPropertyChanged("ContactPhone")
				Me.OnContactPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeliveryAddress", DbType:="NText NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DeliveryAddress() As String
		Get
			Return Me._DeliveryAddress
		End Get
		Set
			If (String.Equals(Me._DeliveryAddress, value) = false) Then
				Me.OnDeliveryAddressChanging(value)
				Me.SendPropertyChanging
				Me._DeliveryAddress = value
				Me.SendPropertyChanged("DeliveryAddress")
				Me.OnDeliveryAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Country() As String
		Get
			Return Me._Country
		End Get
		Set
			If (String.Equals(Me._Country, value) = false) Then
				Me.OnCountryChanging(value)
				Me.SendPropertyChanging
				Me._Country = value
				Me.SendPropertyChanged("Country")
				Me.OnCountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentMethod", DbType:="Int NOT NULL")>  _
	Public Property PaymentMethod() As Integer
		Get
			Return Me._PaymentMethod
		End Get
		Set
			If ((Me._PaymentMethod = value)  _
						= false) Then
				Me.OnPaymentMethodChanging(value)
				Me.SendPropertyChanging
				Me._PaymentMethod = value
				Me.SendPropertyChanged("PaymentMethod")
				Me.OnPaymentMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeliveryMethod", DbType:="Int NOT NULL")>  _
	Public Property DeliveryMethod() As Integer
		Get
			Return Me._DeliveryMethod
		End Get
		Set
			If ((Me._DeliveryMethod = value)  _
						= false) Then
				Me.OnDeliveryMethodChanging(value)
				Me.SendPropertyChanging
				Me._DeliveryMethod = value
				Me.SendPropertyChanged("DeliveryMethod")
				Me.OnDeliveryMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderStatus", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OrderStatus() As String
		Get
			Return Me._OrderStatus
		End Get
		Set
			If (String.Equals(Me._OrderStatus, value) = false) Then
				Me.OnOrderStatusChanging(value)
				Me.SendPropertyChanging
				Me._OrderStatus = value
				Me.SendPropertyChanged("OrderStatus")
				Me.OnOrderStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalAmount", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property TotalAmount() As Decimal
		Get
			Return Me._TotalAmount
		End Get
		Set
			If ((Me._TotalAmount = value)  _
						= false) Then
				Me.OnTotalAmountChanging(value)
				Me.SendPropertyChanging
				Me._TotalAmount = value
				Me.SendPropertyChanged("TotalAmount")
				Me.OnTotalAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionRefNo", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property TransactionRefNo() As String
		Get
			Return Me._TransactionRefNo
		End Get
		Set
			If (String.Equals(Me._TransactionRefNo, value) = false) Then
				Me.OnTransactionRefNoChanging(value)
				Me.SendPropertyChanging
				Me._TransactionRefNo = value
				Me.SendPropertyChanged("TransactionRefNo")
				Me.OnTransactionRefNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaidDate", DbType:="DateTime NOT NULL")>  _
	Public Property PaidDate() As Date
		Get
			Return Me._PaidDate
		End Get
		Set
			If ((Me._PaidDate = value)  _
						= false) Then
				Me.OnPaidDateChanging(value)
				Me.SendPropertyChanging
				Me._PaidDate = value
				Me.SendPropertyChanged("PaidDate")
				Me.OnPaidDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayPalStatus", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PayPalStatus() As String
		Get
			Return Me._PayPalStatus
		End Get
		Set
			If (String.Equals(Me._PayPalStatus, value) = false) Then
				Me.OnPayPalStatusChanging(value)
				Me.SendPropertyChanging
				Me._PayPalStatus = value
				Me.SendPropertyChanged("PayPalStatus")
				Me.OnPayPalStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me.OnLangChanging(value)
				Me.SendPropertyChanging
				Me._Lang = value
				Me.SendPropertyChanged("Lang")
				Me.OnLangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdateUser", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LastUpdateUser() As String
		Get
			Return Me._LastUpdateUser
		End Get
		Set
			If (String.Equals(Me._LastUpdateUser, value) = false) Then
				Me.OnLastUpdateUserChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdateUser = value
				Me.SendPropertyChanged("LastUpdateUser")
				Me.OnLastUpdateUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdateTime", DbType:="DateTime NOT NULL")>  _
	Public Property LastUpdateTime() As Date
		Get
			Return Me._LastUpdateTime
		End Get
		Set
			If ((Me._LastUpdateTime = value)  _
						= false) Then
				Me.OnLastUpdateTimeChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdateTime = value
				Me.SendPropertyChanged("LastUpdateTime")
				Me.OnLastUpdateTimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrderItem")>  _
Partial Public Class OrderItem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OrderItemId As Integer
	
	Private _OrderNumber As String
	
	Private _OrderProductId As Integer
	
	Private _OrderProductCode As String
	
	Private _OrderProductName As String
	
	Private _OrderQuantity As Integer
	
	Private _OrderPrice As Decimal
	
	Private _OrderShippingFee As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOrderItemIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnOrderItemIdChanged()
    End Sub
    Partial Private Sub OnOrderNumberChanging(value As String)
    End Sub
    Partial Private Sub OnOrderNumberChanged()
    End Sub
    Partial Private Sub OnOrderProductIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnOrderProductIdChanged()
    End Sub
    Partial Private Sub OnOrderProductCodeChanging(value As String)
    End Sub
    Partial Private Sub OnOrderProductCodeChanged()
    End Sub
    Partial Private Sub OnOrderProductNameChanging(value As String)
    End Sub
    Partial Private Sub OnOrderProductNameChanged()
    End Sub
    Partial Private Sub OnOrderQuantityChanging(value As Integer)
    End Sub
    Partial Private Sub OnOrderQuantityChanged()
    End Sub
    Partial Private Sub OnOrderPriceChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOrderPriceChanged()
    End Sub
    Partial Private Sub OnOrderShippingFeeChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOrderShippingFeeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderItemId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OrderItemId() As Integer
		Get
			Return Me._OrderItemId
		End Get
		Set
			If ((Me._OrderItemId = value)  _
						= false) Then
				Me.OnOrderItemIdChanging(value)
				Me.SendPropertyChanging
				Me._OrderItemId = value
				Me.SendPropertyChanged("OrderItemId")
				Me.OnOrderItemIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderNumber", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OrderNumber() As String
		Get
			Return Me._OrderNumber
		End Get
		Set
			If (String.Equals(Me._OrderNumber, value) = false) Then
				Me.OnOrderNumberChanging(value)
				Me.SendPropertyChanging
				Me._OrderNumber = value
				Me.SendPropertyChanged("OrderNumber")
				Me.OnOrderNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderProductId", DbType:="Int NOT NULL")>  _
	Public Property OrderProductId() As Integer
		Get
			Return Me._OrderProductId
		End Get
		Set
			If ((Me._OrderProductId = value)  _
						= false) Then
				Me.OnOrderProductIdChanging(value)
				Me.SendPropertyChanging
				Me._OrderProductId = value
				Me.SendPropertyChanged("OrderProductId")
				Me.OnOrderProductIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderProductCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OrderProductCode() As String
		Get
			Return Me._OrderProductCode
		End Get
		Set
			If (String.Equals(Me._OrderProductCode, value) = false) Then
				Me.OnOrderProductCodeChanging(value)
				Me.SendPropertyChanging
				Me._OrderProductCode = value
				Me.SendPropertyChanged("OrderProductCode")
				Me.OnOrderProductCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderProductName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property OrderProductName() As String
		Get
			Return Me._OrderProductName
		End Get
		Set
			If (String.Equals(Me._OrderProductName, value) = false) Then
				Me.OnOrderProductNameChanging(value)
				Me.SendPropertyChanging
				Me._OrderProductName = value
				Me.SendPropertyChanged("OrderProductName")
				Me.OnOrderProductNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderQuantity", DbType:="Int NOT NULL")>  _
	Public Property OrderQuantity() As Integer
		Get
			Return Me._OrderQuantity
		End Get
		Set
			If ((Me._OrderQuantity = value)  _
						= false) Then
				Me.OnOrderQuantityChanging(value)
				Me.SendPropertyChanging
				Me._OrderQuantity = value
				Me.SendPropertyChanged("OrderQuantity")
				Me.OnOrderQuantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderPrice", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property OrderPrice() As Decimal
		Get
			Return Me._OrderPrice
		End Get
		Set
			If ((Me._OrderPrice = value)  _
						= false) Then
				Me.OnOrderPriceChanging(value)
				Me.SendPropertyChanging
				Me._OrderPrice = value
				Me.SendPropertyChanged("OrderPrice")
				Me.OnOrderPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderShippingFee", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property OrderShippingFee() As Decimal
		Get
			Return Me._OrderShippingFee
		End Get
		Set
			If ((Me._OrderShippingFee = value)  _
						= false) Then
				Me.OnOrderShippingFeeChanging(value)
				Me.SendPropertyChanging
				Me._OrderShippingFee = value
				Me.SendPropertyChanged("OrderShippingFee")
				Me.OnOrderShippingFeeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrderStatus")>  _
Partial Public Class OrderStatus
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OrderStatusCode As String
	
	Private _IsDefault As Boolean
	
	Private _ColorCode As String
	
	Private _Sort As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOrderStatusCodeChanging(value As String)
    End Sub
    Partial Private Sub OnOrderStatusCodeChanged()
    End Sub
    Partial Private Sub OnIsDefaultChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDefaultChanged()
    End Sub
    Partial Private Sub OnColorCodeChanging(value As String)
    End Sub
    Partial Private Sub OnColorCodeChanged()
    End Sub
    Partial Private Sub OnSortChanging(value As Integer)
    End Sub
    Partial Private Sub OnSortChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderStatusCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property OrderStatusCode() As String
		Get
			Return Me._OrderStatusCode
		End Get
		Set
			If (String.Equals(Me._OrderStatusCode, value) = false) Then
				Me.OnOrderStatusCodeChanging(value)
				Me.SendPropertyChanging
				Me._OrderStatusCode = value
				Me.SendPropertyChanged("OrderStatusCode")
				Me.OnOrderStatusCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDefault", DbType:="Bit NOT NULL")>  _
	Public Property IsDefault() As Boolean
		Get
			Return Me._IsDefault
		End Get
		Set
			If ((Me._IsDefault = value)  _
						= false) Then
				Me.OnIsDefaultChanging(value)
				Me.SendPropertyChanging
				Me._IsDefault = value
				Me.SendPropertyChanged("IsDefault")
				Me.OnIsDefaultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ColorCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ColorCode() As String
		Get
			Return Me._ColorCode
		End Get
		Set
			If (String.Equals(Me._ColorCode, value) = false) Then
				Me.OnColorCodeChanging(value)
				Me.SendPropertyChanging
				Me._ColorCode = value
				Me.SendPropertyChanged("ColorCode")
				Me.OnColorCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sort", DbType:="Int NOT NULL")>  _
	Public Property Sort() As Integer
		Get
			Return Me._Sort
		End Get
		Set
			If ((Me._Sort = value)  _
						= false) Then
				Me.OnSortChanging(value)
				Me.SendPropertyChanging
				Me._Sort = value
				Me.SendPropertyChanged("Sort")
				Me.OnSortChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrderStatusLang")>  _
Partial Public Class OrderStatusLang
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OrderStatusCode As String
	
	Private _Lang As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOrderStatusCodeChanging(value As String)
    End Sub
    Partial Private Sub OnOrderStatusCodeChanged()
    End Sub
    Partial Private Sub OnLangChanging(value As String)
    End Sub
    Partial Private Sub OnLangChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderStatusCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property OrderStatusCode() As String
		Get
			Return Me._OrderStatusCode
		End Get
		Set
			If (String.Equals(Me._OrderStatusCode, value) = false) Then
				Me.OnOrderStatusCodeChanging(value)
				Me.SendPropertyChanging
				Me._OrderStatusCode = value
				Me.SendPropertyChanged("OrderStatusCode")
				Me.OnOrderStatusCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me.OnLangChanging(value)
				Me.SendPropertyChanging
				Me._Lang = value
				Me.SendPropertyChanged("Lang")
				Me.OnLangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PaymentMethod")>  _
Partial Public Class PaymentMethod
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PaymentMethodId As Integer
	
	Private _PaymentMethodName As String
	
	Private _PaymentPage As String
	
	Private _ImageUrl As String
	
	Private _Sort As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPaymentMethodIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPaymentMethodIdChanged()
    End Sub
    Partial Private Sub OnPaymentMethodNameChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentMethodNameChanged()
    End Sub
    Partial Private Sub OnPaymentPageChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentPageChanged()
    End Sub
    Partial Private Sub OnImageUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImageUrlChanged()
    End Sub
    Partial Private Sub OnSortChanging(value As Integer)
    End Sub
    Partial Private Sub OnSortChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentMethodId", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property PaymentMethodId() As Integer
		Get
			Return Me._PaymentMethodId
		End Get
		Set
			If ((Me._PaymentMethodId = value)  _
						= false) Then
				Me.OnPaymentMethodIdChanging(value)
				Me.SendPropertyChanging
				Me._PaymentMethodId = value
				Me.SendPropertyChanged("PaymentMethodId")
				Me.OnPaymentMethodIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentMethodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PaymentMethodName() As String
		Get
			Return Me._PaymentMethodName
		End Get
		Set
			If (String.Equals(Me._PaymentMethodName, value) = false) Then
				Me.OnPaymentMethodNameChanging(value)
				Me.SendPropertyChanging
				Me._PaymentMethodName = value
				Me.SendPropertyChanged("PaymentMethodName")
				Me.OnPaymentMethodNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentPage", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PaymentPage() As String
		Get
			Return Me._PaymentPage
		End Get
		Set
			If (String.Equals(Me._PaymentPage, value) = false) Then
				Me.OnPaymentPageChanging(value)
				Me.SendPropertyChanging
				Me._PaymentPage = value
				Me.SendPropertyChanged("PaymentPage")
				Me.OnPaymentPageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageUrl", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ImageUrl() As String
		Get
			Return Me._ImageUrl
		End Get
		Set
			If (String.Equals(Me._ImageUrl, value) = false) Then
				Me.OnImageUrlChanging(value)
				Me.SendPropertyChanging
				Me._ImageUrl = value
				Me.SendPropertyChanged("ImageUrl")
				Me.OnImageUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sort", DbType:="Int NOT NULL")>  _
	Public Property Sort() As Integer
		Get
			Return Me._Sort
		End Get
		Set
			If ((Me._Sort = value)  _
						= false) Then
				Me.OnSortChanging(value)
				Me.SendPropertyChanging
				Me._Sort = value
				Me.SendPropertyChanged("Sort")
				Me.OnSortChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PaymentMethodLang")>  _
Partial Public Class PaymentMethodLang
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LangPaymentMethodId As Integer
	
	Private _PaymentMethodId As Integer
	
	Private _Lang As String
	
	Private _LangPaymentMethod As String
	
	Private _LangDescription As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLangPaymentMethodIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLangPaymentMethodIdChanged()
    End Sub
    Partial Private Sub OnPaymentMethodIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPaymentMethodIdChanged()
    End Sub
    Partial Private Sub OnLangChanging(value As String)
    End Sub
    Partial Private Sub OnLangChanged()
    End Sub
    Partial Private Sub OnLangPaymentMethodChanging(value As String)
    End Sub
    Partial Private Sub OnLangPaymentMethodChanged()
    End Sub
    Partial Private Sub OnLangDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnLangDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LangPaymentMethodId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LangPaymentMethodId() As Integer
		Get
			Return Me._LangPaymentMethodId
		End Get
		Set
			If ((Me._LangPaymentMethodId = value)  _
						= false) Then
				Me.OnLangPaymentMethodIdChanging(value)
				Me.SendPropertyChanging
				Me._LangPaymentMethodId = value
				Me.SendPropertyChanged("LangPaymentMethodId")
				Me.OnLangPaymentMethodIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentMethodId", DbType:="Int NOT NULL")>  _
	Public Property PaymentMethodId() As Integer
		Get
			Return Me._PaymentMethodId
		End Get
		Set
			If ((Me._PaymentMethodId = value)  _
						= false) Then
				Me.OnPaymentMethodIdChanging(value)
				Me.SendPropertyChanging
				Me._PaymentMethodId = value
				Me.SendPropertyChanged("PaymentMethodId")
				Me.OnPaymentMethodIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me.OnLangChanging(value)
				Me.SendPropertyChanging
				Me._Lang = value
				Me.SendPropertyChanged("Lang")
				Me.OnLangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LangPaymentMethod", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LangPaymentMethod() As String
		Get
			Return Me._LangPaymentMethod
		End Get
		Set
			If (String.Equals(Me._LangPaymentMethod, value) = false) Then
				Me.OnLangPaymentMethodChanging(value)
				Me.SendPropertyChanging
				Me._LangPaymentMethod = value
				Me.SendPropertyChanged("LangPaymentMethod")
				Me.OnLangPaymentMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LangDescription", DbType:="NText NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LangDescription() As String
		Get
			Return Me._LangDescription
		End Get
		Set
			If (String.Equals(Me._LangDescription, value) = false) Then
				Me.OnLangDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._LangDescription = value
				Me.SendPropertyChanged("LangDescription")
				Me.OnLangDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PayPalLog")>  _
Partial Public Class PayPalLog
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PayPalLogId As Integer
	
	Private _receiver_email As String
	
	Private _receiver_id As String
	
	Private _residence_country As String
	
	Private _transaction_subject As String
	
	Private _txn_id As String
	
	Private _txn_type As String
	
	Private _payer_email As String
	
	Private _payer_id As String
	
	Private _payer_status As String
	
	Private _first_name As String
	
	Private _last_name As String
	
	Private _address_city As String
	
	Private _address_country As String
	
	Private _address_country_code As String
	
	Private _address_name As String
	
	Private _address_state As String
	
	Private _address_status As String
	
	Private _address_street As String
	
	Private _address_zip As String
	
	Private _custom As String
	
	Private _handling_amount As Decimal
	
	Private _item_name As String
	
	Private _item_number As String
	
	Private _mc_currency As String
	
	Private _mc_fee As Decimal
	
	Private _mc_gross As Decimal
	
	Private _payment_date As Date
	
	Private _payment_fee As Decimal
	
	Private _payment_gross As Decimal
	
	Private _payment_status As String
	
	Private _payment_type As String
	
	Private _quantity As Integer
	
	Private _shipping As Decimal
	
	Private _tax As Decimal
	
	Private _verify_sign As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPayPalLogIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPayPalLogIdChanged()
    End Sub
    Partial Private Sub Onreceiver_emailChanging(value As String)
    End Sub
    Partial Private Sub Onreceiver_emailChanged()
    End Sub
    Partial Private Sub Onreceiver_idChanging(value As String)
    End Sub
    Partial Private Sub Onreceiver_idChanged()
    End Sub
    Partial Private Sub Onresidence_countryChanging(value As String)
    End Sub
    Partial Private Sub Onresidence_countryChanged()
    End Sub
    Partial Private Sub Ontransaction_subjectChanging(value As String)
    End Sub
    Partial Private Sub Ontransaction_subjectChanged()
    End Sub
    Partial Private Sub Ontxn_idChanging(value As String)
    End Sub
    Partial Private Sub Ontxn_idChanged()
    End Sub
    Partial Private Sub Ontxn_typeChanging(value As String)
    End Sub
    Partial Private Sub Ontxn_typeChanged()
    End Sub
    Partial Private Sub Onpayer_emailChanging(value As String)
    End Sub
    Partial Private Sub Onpayer_emailChanged()
    End Sub
    Partial Private Sub Onpayer_idChanging(value As String)
    End Sub
    Partial Private Sub Onpayer_idChanged()
    End Sub
    Partial Private Sub Onpayer_statusChanging(value As String)
    End Sub
    Partial Private Sub Onpayer_statusChanged()
    End Sub
    Partial Private Sub Onfirst_nameChanging(value As String)
    End Sub
    Partial Private Sub Onfirst_nameChanged()
    End Sub
    Partial Private Sub Onlast_nameChanging(value As String)
    End Sub
    Partial Private Sub Onlast_nameChanged()
    End Sub
    Partial Private Sub Onaddress_cityChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_cityChanged()
    End Sub
    Partial Private Sub Onaddress_countryChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_countryChanged()
    End Sub
    Partial Private Sub Onaddress_country_codeChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_country_codeChanged()
    End Sub
    Partial Private Sub Onaddress_nameChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_nameChanged()
    End Sub
    Partial Private Sub Onaddress_stateChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_stateChanged()
    End Sub
    Partial Private Sub Onaddress_statusChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_statusChanged()
    End Sub
    Partial Private Sub Onaddress_streetChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_streetChanged()
    End Sub
    Partial Private Sub Onaddress_zipChanging(value As String)
    End Sub
    Partial Private Sub Onaddress_zipChanged()
    End Sub
    Partial Private Sub OncustomChanging(value As String)
    End Sub
    Partial Private Sub OncustomChanged()
    End Sub
    Partial Private Sub Onhandling_amountChanging(value As Decimal)
    End Sub
    Partial Private Sub Onhandling_amountChanged()
    End Sub
    Partial Private Sub Onitem_nameChanging(value As String)
    End Sub
    Partial Private Sub Onitem_nameChanged()
    End Sub
    Partial Private Sub Onitem_numberChanging(value As String)
    End Sub
    Partial Private Sub Onitem_numberChanged()
    End Sub
    Partial Private Sub Onmc_currencyChanging(value As String)
    End Sub
    Partial Private Sub Onmc_currencyChanged()
    End Sub
    Partial Private Sub Onmc_feeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onmc_feeChanged()
    End Sub
    Partial Private Sub Onmc_grossChanging(value As Decimal)
    End Sub
    Partial Private Sub Onmc_grossChanged()
    End Sub
    Partial Private Sub Onpayment_dateChanging(value As Date)
    End Sub
    Partial Private Sub Onpayment_dateChanged()
    End Sub
    Partial Private Sub Onpayment_feeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onpayment_feeChanged()
    End Sub
    Partial Private Sub Onpayment_grossChanging(value As Decimal)
    End Sub
    Partial Private Sub Onpayment_grossChanged()
    End Sub
    Partial Private Sub Onpayment_statusChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_statusChanged()
    End Sub
    Partial Private Sub Onpayment_typeChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_typeChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As Integer)
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnshippingChanging(value As Decimal)
    End Sub
    Partial Private Sub OnshippingChanged()
    End Sub
    Partial Private Sub OntaxChanging(value As Decimal)
    End Sub
    Partial Private Sub OntaxChanged()
    End Sub
    Partial Private Sub Onverify_signChanging(value As String)
    End Sub
    Partial Private Sub Onverify_signChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayPalLogId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PayPalLogId() As Integer
		Get
			Return Me._PayPalLogId
		End Get
		Set
			If ((Me._PayPalLogId = value)  _
						= false) Then
				Me.OnPayPalLogIdChanging(value)
				Me.SendPropertyChanging
				Me._PayPalLogId = value
				Me.SendPropertyChanged("PayPalLogId")
				Me.OnPayPalLogIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_receiver_email", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property receiver_email() As String
		Get
			Return Me._receiver_email
		End Get
		Set
			If (String.Equals(Me._receiver_email, value) = false) Then
				Me.Onreceiver_emailChanging(value)
				Me.SendPropertyChanging
				Me._receiver_email = value
				Me.SendPropertyChanged("receiver_email")
				Me.Onreceiver_emailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_receiver_id", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property receiver_id() As String
		Get
			Return Me._receiver_id
		End Get
		Set
			If (String.Equals(Me._receiver_id, value) = false) Then
				Me.Onreceiver_idChanging(value)
				Me.SendPropertyChanging
				Me._receiver_id = value
				Me.SendPropertyChanged("receiver_id")
				Me.Onreceiver_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_residence_country", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property residence_country() As String
		Get
			Return Me._residence_country
		End Get
		Set
			If (String.Equals(Me._residence_country, value) = false) Then
				Me.Onresidence_countryChanging(value)
				Me.SendPropertyChanging
				Me._residence_country = value
				Me.SendPropertyChanged("residence_country")
				Me.Onresidence_countryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_transaction_subject", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property transaction_subject() As String
		Get
			Return Me._transaction_subject
		End Get
		Set
			If (String.Equals(Me._transaction_subject, value) = false) Then
				Me.Ontransaction_subjectChanging(value)
				Me.SendPropertyChanging
				Me._transaction_subject = value
				Me.SendPropertyChanged("transaction_subject")
				Me.Ontransaction_subjectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txn_id", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property txn_id() As String
		Get
			Return Me._txn_id
		End Get
		Set
			If (String.Equals(Me._txn_id, value) = false) Then
				Me.Ontxn_idChanging(value)
				Me.SendPropertyChanging
				Me._txn_id = value
				Me.SendPropertyChanged("txn_id")
				Me.Ontxn_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txn_type", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property txn_type() As String
		Get
			Return Me._txn_type
		End Get
		Set
			If (String.Equals(Me._txn_type, value) = false) Then
				Me.Ontxn_typeChanging(value)
				Me.SendPropertyChanging
				Me._txn_type = value
				Me.SendPropertyChanged("txn_type")
				Me.Ontxn_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payer_email", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property payer_email() As String
		Get
			Return Me._payer_email
		End Get
		Set
			If (String.Equals(Me._payer_email, value) = false) Then
				Me.Onpayer_emailChanging(value)
				Me.SendPropertyChanging
				Me._payer_email = value
				Me.SendPropertyChanged("payer_email")
				Me.Onpayer_emailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payer_id", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property payer_id() As String
		Get
			Return Me._payer_id
		End Get
		Set
			If (String.Equals(Me._payer_id, value) = false) Then
				Me.Onpayer_idChanging(value)
				Me.SendPropertyChanging
				Me._payer_id = value
				Me.SendPropertyChanged("payer_id")
				Me.Onpayer_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payer_status", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property payer_status() As String
		Get
			Return Me._payer_status
		End Get
		Set
			If (String.Equals(Me._payer_status, value) = false) Then
				Me.Onpayer_statusChanging(value)
				Me.SendPropertyChanging
				Me._payer_status = value
				Me.SendPropertyChanged("payer_status")
				Me.Onpayer_statusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_first_name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property first_name() As String
		Get
			Return Me._first_name
		End Get
		Set
			If (String.Equals(Me._first_name, value) = false) Then
				Me.Onfirst_nameChanging(value)
				Me.SendPropertyChanging
				Me._first_name = value
				Me.SendPropertyChanged("first_name")
				Me.Onfirst_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_last_name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property last_name() As String
		Get
			Return Me._last_name
		End Get
		Set
			If (String.Equals(Me._last_name, value) = false) Then
				Me.Onlast_nameChanging(value)
				Me.SendPropertyChanging
				Me._last_name = value
				Me.SendPropertyChanged("last_name")
				Me.Onlast_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_city", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_city() As String
		Get
			Return Me._address_city
		End Get
		Set
			If (String.Equals(Me._address_city, value) = false) Then
				Me.Onaddress_cityChanging(value)
				Me.SendPropertyChanging
				Me._address_city = value
				Me.SendPropertyChanged("address_city")
				Me.Onaddress_cityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_country", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_country() As String
		Get
			Return Me._address_country
		End Get
		Set
			If (String.Equals(Me._address_country, value) = false) Then
				Me.Onaddress_countryChanging(value)
				Me.SendPropertyChanging
				Me._address_country = value
				Me.SendPropertyChanged("address_country")
				Me.Onaddress_countryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_country_code", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_country_code() As String
		Get
			Return Me._address_country_code
		End Get
		Set
			If (String.Equals(Me._address_country_code, value) = false) Then
				Me.Onaddress_country_codeChanging(value)
				Me.SendPropertyChanging
				Me._address_country_code = value
				Me.SendPropertyChanged("address_country_code")
				Me.Onaddress_country_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_name() As String
		Get
			Return Me._address_name
		End Get
		Set
			If (String.Equals(Me._address_name, value) = false) Then
				Me.Onaddress_nameChanging(value)
				Me.SendPropertyChanging
				Me._address_name = value
				Me.SendPropertyChanged("address_name")
				Me.Onaddress_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_state", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_state() As String
		Get
			Return Me._address_state
		End Get
		Set
			If (String.Equals(Me._address_state, value) = false) Then
				Me.Onaddress_stateChanging(value)
				Me.SendPropertyChanging
				Me._address_state = value
				Me.SendPropertyChanged("address_state")
				Me.Onaddress_stateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_status", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_status() As String
		Get
			Return Me._address_status
		End Get
		Set
			If (String.Equals(Me._address_status, value) = false) Then
				Me.Onaddress_statusChanging(value)
				Me.SendPropertyChanging
				Me._address_status = value
				Me.SendPropertyChanged("address_status")
				Me.Onaddress_statusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_street", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_street() As String
		Get
			Return Me._address_street
		End Get
		Set
			If (String.Equals(Me._address_street, value) = false) Then
				Me.Onaddress_streetChanging(value)
				Me.SendPropertyChanging
				Me._address_street = value
				Me.SendPropertyChanged("address_street")
				Me.Onaddress_streetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address_zip", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property address_zip() As String
		Get
			Return Me._address_zip
		End Get
		Set
			If (String.Equals(Me._address_zip, value) = false) Then
				Me.Onaddress_zipChanging(value)
				Me.SendPropertyChanging
				Me._address_zip = value
				Me.SendPropertyChanged("address_zip")
				Me.Onaddress_zipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_custom", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property custom() As String
		Get
			Return Me._custom
		End Get
		Set
			If (String.Equals(Me._custom, value) = false) Then
				Me.OncustomChanging(value)
				Me.SendPropertyChanging
				Me._custom = value
				Me.SendPropertyChanged("custom")
				Me.OncustomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_handling_amount", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property handling_amount() As Decimal
		Get
			Return Me._handling_amount
		End Get
		Set
			If ((Me._handling_amount = value)  _
						= false) Then
				Me.Onhandling_amountChanging(value)
				Me.SendPropertyChanging
				Me._handling_amount = value
				Me.SendPropertyChanged("handling_amount")
				Me.Onhandling_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_item_name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property item_name() As String
		Get
			Return Me._item_name
		End Get
		Set
			If (String.Equals(Me._item_name, value) = false) Then
				Me.Onitem_nameChanging(value)
				Me.SendPropertyChanging
				Me._item_name = value
				Me.SendPropertyChanged("item_name")
				Me.Onitem_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_item_number", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property item_number() As String
		Get
			Return Me._item_number
		End Get
		Set
			If (String.Equals(Me._item_number, value) = false) Then
				Me.Onitem_numberChanging(value)
				Me.SendPropertyChanging
				Me._item_number = value
				Me.SendPropertyChanged("item_number")
				Me.Onitem_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mc_currency", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property mc_currency() As String
		Get
			Return Me._mc_currency
		End Get
		Set
			If (String.Equals(Me._mc_currency, value) = false) Then
				Me.Onmc_currencyChanging(value)
				Me.SendPropertyChanging
				Me._mc_currency = value
				Me.SendPropertyChanged("mc_currency")
				Me.Onmc_currencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mc_fee", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property mc_fee() As Decimal
		Get
			Return Me._mc_fee
		End Get
		Set
			If ((Me._mc_fee = value)  _
						= false) Then
				Me.Onmc_feeChanging(value)
				Me.SendPropertyChanging
				Me._mc_fee = value
				Me.SendPropertyChanged("mc_fee")
				Me.Onmc_feeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mc_gross", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property mc_gross() As Decimal
		Get
			Return Me._mc_gross
		End Get
		Set
			If ((Me._mc_gross = value)  _
						= false) Then
				Me.Onmc_grossChanging(value)
				Me.SendPropertyChanging
				Me._mc_gross = value
				Me.SendPropertyChanged("mc_gross")
				Me.Onmc_grossChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_date", DbType:="DateTime NOT NULL")>  _
	Public Property payment_date() As Date
		Get
			Return Me._payment_date
		End Get
		Set
			If ((Me._payment_date = value)  _
						= false) Then
				Me.Onpayment_dateChanging(value)
				Me.SendPropertyChanging
				Me._payment_date = value
				Me.SendPropertyChanged("payment_date")
				Me.Onpayment_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_fee", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property payment_fee() As Decimal
		Get
			Return Me._payment_fee
		End Get
		Set
			If ((Me._payment_fee = value)  _
						= false) Then
				Me.Onpayment_feeChanging(value)
				Me.SendPropertyChanging
				Me._payment_fee = value
				Me.SendPropertyChanged("payment_fee")
				Me.Onpayment_feeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_gross", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property payment_gross() As Decimal
		Get
			Return Me._payment_gross
		End Get
		Set
			If ((Me._payment_gross = value)  _
						= false) Then
				Me.Onpayment_grossChanging(value)
				Me.SendPropertyChanging
				Me._payment_gross = value
				Me.SendPropertyChanged("payment_gross")
				Me.Onpayment_grossChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_status", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property payment_status() As String
		Get
			Return Me._payment_status
		End Get
		Set
			If (String.Equals(Me._payment_status, value) = false) Then
				Me.Onpayment_statusChanging(value)
				Me.SendPropertyChanging
				Me._payment_status = value
				Me.SendPropertyChanged("payment_status")
				Me.Onpayment_statusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_type", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property payment_type() As String
		Get
			Return Me._payment_type
		End Get
		Set
			If (String.Equals(Me._payment_type, value) = false) Then
				Me.Onpayment_typeChanging(value)
				Me.SendPropertyChanging
				Me._payment_type = value
				Me.SendPropertyChanged("payment_type")
				Me.Onpayment_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Int NOT NULL")>  _
	Public Property quantity() As Integer
		Get
			Return Me._quantity
		End Get
		Set
			If ((Me._quantity = value)  _
						= false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipping", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property shipping() As Decimal
		Get
			Return Me._shipping
		End Get
		Set
			If ((Me._shipping = value)  _
						= false) Then
				Me.OnshippingChanging(value)
				Me.SendPropertyChanging
				Me._shipping = value
				Me.SendPropertyChanged("shipping")
				Me.OnshippingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tax", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property tax() As Decimal
		Get
			Return Me._tax
		End Get
		Set
			If ((Me._tax = value)  _
						= false) Then
				Me.OntaxChanging(value)
				Me.SendPropertyChanging
				Me._tax = value
				Me.SendPropertyChanged("tax")
				Me.OntaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_verify_sign", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property verify_sign() As String
		Get
			Return Me._verify_sign
		End Get
		Set
			If (String.Equals(Me._verify_sign, value) = false) Then
				Me.Onverify_signChanging(value)
				Me.SendPropertyChanging
				Me._verify_sign = value
				Me.SendPropertyChanged("verify_sign")
				Me.Onverify_signChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PayPalStatusMap")>  _
Partial Public Class PayPalStatusMap
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PayPalStatus As String
	
	Private _OrderStatusCode As String
	
	Private _PayPalDescription As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPayPalStatusChanging(value As String)
    End Sub
    Partial Private Sub OnPayPalStatusChanged()
    End Sub
    Partial Private Sub OnOrderStatusCodeChanging(value As String)
    End Sub
    Partial Private Sub OnOrderStatusCodeChanged()
    End Sub
    Partial Private Sub OnPayPalDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnPayPalDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayPalStatus", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PayPalStatus() As String
		Get
			Return Me._PayPalStatus
		End Get
		Set
			If (String.Equals(Me._PayPalStatus, value) = false) Then
				Me.OnPayPalStatusChanging(value)
				Me.SendPropertyChanging
				Me._PayPalStatus = value
				Me.SendPropertyChanged("PayPalStatus")
				Me.OnPayPalStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderStatusCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OrderStatusCode() As String
		Get
			Return Me._OrderStatusCode
		End Get
		Set
			If (String.Equals(Me._OrderStatusCode, value) = false) Then
				Me.OnOrderStatusCodeChanging(value)
				Me.SendPropertyChanging
				Me._OrderStatusCode = value
				Me.SendPropertyChanged("OrderStatusCode")
				Me.OnOrderStatusCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayPalDescription", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property PayPalDescription() As String
		Get
			Return Me._PayPalDescription
		End Get
		Set
			If (String.Equals(Me._PayPalDescription, value) = false) Then
				Me.OnPayPalDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._PayPalDescription = value
				Me.SendPropertyChanged("PayPalDescription")
				Me.OnPayPalDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EventUser")>  _
Partial Public Class EventUser
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _OrderID As System.Nullable(Of Integer)
	
	Private _UserID As String
	
	Private _Email As String
	
	Private _EventID As Integer
	
	Private _InviteBy As String
	
	Private _EventStatus As String
	
	Private _UUID As System.Guid
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreatedBy As String
	
	Private _UpdateDate As System.Nullable(Of Date)
	
	Private _UpdatedBy As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnOrderIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOrderIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnEventIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEventIDChanged()
    End Sub
    Partial Private Sub OnInviteByChanging(value As String)
    End Sub
    Partial Private Sub OnInviteByChanged()
    End Sub
    Partial Private Sub OnEventStatusChanging(value As String)
    End Sub
    Partial Private Sub OnEventStatusChanged()
    End Sub
    Partial Private Sub OnUUIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnUUIDChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnUpdateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdateDateChanged()
    End Sub
    Partial Private Sub OnUpdatedByChanging(value As String)
    End Sub
    Partial Private Sub OnUpdatedByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderID", DbType:="Int")>  _
	Public Property OrderID() As System.Nullable(Of Integer)
		Get
			Return Me._OrderID
		End Get
		Set
			If (Me._OrderID.Equals(value) = false) Then
				Me.OnOrderIDChanging(value)
				Me.SendPropertyChanging
				Me._OrderID = value
				Me.SendPropertyChanged("OrderID")
				Me.OnOrderIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="NVarChar(256)")>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EventID", DbType:="Int NOT NULL")>  _
	Public Property EventID() As Integer
		Get
			Return Me._EventID
		End Get
		Set
			If ((Me._EventID = value)  _
						= false) Then
				Me.OnEventIDChanging(value)
				Me.SendPropertyChanging
				Me._EventID = value
				Me.SendPropertyChanged("EventID")
				Me.OnEventIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InviteBy", DbType:="NVarChar(256)")>  _
	Public Property InviteBy() As String
		Get
			Return Me._InviteBy
		End Get
		Set
			If (String.Equals(Me._InviteBy, value) = false) Then
				Me.OnInviteByChanging(value)
				Me.SendPropertyChanging
				Me._InviteBy = value
				Me.SendPropertyChanged("InviteBy")
				Me.OnInviteByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EventStatus", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property EventStatus() As String
		Get
			Return Me._EventStatus
		End Get
		Set
			If (String.Equals(Me._EventStatus, value) = false) Then
				Me.OnEventStatusChanging(value)
				Me.SendPropertyChanging
				Me._EventStatus = value
				Me.SendPropertyChanged("EventStatus")
				Me.OnEventStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UUID", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property UUID() As System.Guid
		Get
			Return Me._UUID
		End Get
		Set
			If ((Me._UUID = value)  _
						= false) Then
				Me.OnUUIDChanging(value)
				Me.SendPropertyChanging
				Me._UUID = value
				Me.SendPropertyChanged("UUID")
				Me.OnUUIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="DateTime")>  _
	Public Property UpdateDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdateDate
		End Get
		Set
			If (Me._UpdateDate.Equals(value) = false) Then
				Me.OnUpdateDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdateDate = value
				Me.SendPropertyChanged("UpdateDate")
				Me.OnUpdateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedBy", DbType:="NVarChar(256)")>  _
	Public Property UpdatedBy() As String
		Get
			Return Me._UpdatedBy
		End Get
		Set
			If (String.Equals(Me._UpdatedBy, value) = false) Then
				Me.OnUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._UpdatedBy = value
				Me.SendPropertyChanged("UpdatedBy")
				Me.OnUpdatedByChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
