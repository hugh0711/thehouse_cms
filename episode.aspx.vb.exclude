Imports System.Net
Imports System.IO
Imports Newtonsoft.Json
Imports Newtonsoft.Json.Linq
Imports Facebook
Imports Facebook.Web


Partial Class episode
    Inherits System.Web.UI.Page

    Protected FacebookID As String
    Protected ReplyWatermarkText As String = "發表回應..."

    Protected Shared _Type As String
    Protected Shared _ReferenceID As Integer
    Protected AccessToken As String = ""
    Protected EpisodeID As Integer = 0
    Protected Username As String = ""
    Protected FBID As String = ""
    Protected FBName As String = ""

    Protected dtLike As CommentDataSet.LikeTableDataTable

    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init
        Dim TypeID As Integer = CInt(ConfigurationManager.AppSettings("CollectionTypeID"))
        ddlCollectionGroup.DataSource = (New UserProductDataSetTableAdapters.UserProductGroupTableAdapter()).GetDataByTypeID(TypeID, 0)
        ddlCollectionGroup.DataBind()
        txtComment.Text = ReplyWatermarkText
    End Sub


    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not Page.IsPostBack Then
            Session("ImageFilename") = ""

            If Request("id") IsNot Nothing Then
                ViewState("id") = CInt(Request("id"))
                hfdProductID.Value = Request("id")
                LoadData()
            End If

            If Page.User.Identity.Name = "" Then
                pnlRegister.Visible = True
                pnlPost.Visible = False
            Else
                pnlRegister.Visible = False
                pnlPost.Visible = True
            End If

        End If

        ' Load LikeTable
        dtLike = (New CommentDataSetTableAdapters.LikeTableTableAdapter()).GetDataByLikeTypeUserID("comment", Username)

    End Sub

#Region "Episode"

    Protected Sub LoadData()
        Dim VideoAdapter As New ProductDataSetTableAdapters.view_ProductTableAdapter()
        Dim VideoTable As ProductDataSet.view_ProductDataTable
        Dim VideoRow As ProductDataSet.view_ProductRow
        Dim ID As Integer = ViewState("id")

        VideoTable = VideoAdapter.GetDataByProductID(ID, Session("MyCulture"))
        If VideoTable.Rows.Count > 0 Then
            VideoRow = VideoTable.Rows(0)

            With VideoRow
                hfdProductID.Value = .ProductID
                If .SellingStartDate > Now() Then
                    lblNAMessage.Text = String.Format("影片將於{0:d}播放", .SellingStartDate)
                    phdInfo.Visible = False
                    phdInfo2.Visible = False
                ElseIf .SellingEndDate < Now() Then
                    lblNAMessage.Text = "無法播放影片"
                    phdInfo.Visible = False
                    phdInfo2.Visible = False
                Else
                    phdNA.Visible = False
                    hfdEpisodeID.Value = .ProductID
                    hfdProgramID.Value = .CategoryID
                    Dim iframe As String = "<iframe width=""610"" height=""344"" src=""http://www.youtube.com/embed/{0}?rel=0&autoplay=1"" frameborder=""0"" allowfullscreen></iframe>"
                    txtVideoFrame.Text = String.Format(iframe, .MOQUnit)  'YouTube Video ID
                    txtEpisode.Text = .ProductName
                    FacebookID = .ProductionLeadTime  ' Facebook ID
                    lblDescription.Text = .Description
                    pnlInfoControl.Visible = Page.User.Identity.IsAuthenticated
                    If .LongDescription.Trim <> "" Then
                        pnlInfo.Visible = True
                        ltrInfo.Text = .LongDescription
                    Else
                        pnlInfo.Visible = False
                    End If
                    'If .fileUrl.Trim <> "" Then
                    '    pnlInfo.Visible = True
                    '    imgInfo.ImageUrl = .fileUrl
                    '    'imgInfo.Attributes("onclick") = "TINY.box.show({iframe:""" & .fileUrl & """, width: 750, height:500 })"
                    '    imgInfo.Attributes("onclick") = "window.open('" & .fileUrl & "', 'info', 'height=500, width=700, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no')"
                    'Else
                    '    pnlInfo.Visible = False
                    'End If
                    share_title.Attributes("content") = .ProductName
                    share_description.Attributes("content") = Utility.TrimHtml(.Description, 120)
                    share_image.Attributes("content") = VideoClass.GetPreview(.MOQUnit)
                    _ReferenceID = .ProductID
                    _Type = "episode"
                    hfdReferenceID.Value = _ReferenceID
                    hfdType.Value = _Type
                    Dim Count As Integer = (New CommentDataSetTableAdapters.CommentTableAdapter()).GetCount(_Type, _ReferenceID)
                    tabComment.HeaderText = String.Format("評論 ({0})", Count)

                    Count = (New CommentDataSetTableAdapters.LikeTableTableAdapter()).LikeCount(_Type, _ReferenceID).GetValueOrDefault(0)
                    If Count > 0 Then
                        lblLikeEpside.Text = String.Format("共有{0}個Like", Count)
                    End If

                    Dim CategoryAdapter As New CategoryDataSetTableAdapters.view_CategoryTableAdapter()
                    Dim CategoryTable As CategoryDataSet.view_CategoryDataTable
                    Dim CategoryRow As CategoryDataSet.view_CategoryRow
                    Dim CategoryID As Integer

                    CategoryTable = CategoryAdapter.GetDataByCategoryID(.CategoryID, Session("MyCulture"))
                    If CategoryTable.Rows.Count > 0 Then
                        CategoryRow = CategoryTable.Rows(0)

                        'txtProgram.Text = .CategoryName
                        CategoryID = .CategoryID
                        lnkProgram.Text = .CategoryName
                        lnkProgram.NavigateUrl = String.Format("~/program.aspx?id={0}", .CategoryID)

                        CategoryID = CategoryAdapter.GetParentID(CategoryID)
                        'txtChannel.Text = CategoryAdapter.GetCategoryName(CategoryID, Session("MyCulture"))
                        lnkChannel.Text = CategoryAdapter.GetCategoryName(CategoryID, Session("MyCulture"))
                        lnkChannel.NavigateUrl = String.Format("~/channel.aspx?id={0}", CategoryID)
                    End If

                    If Page.User.Identity.IsAuthenticated Then
                        Username = Page.User.Identity.Name
                    End If

                    ' Check if it is in the Favorite Video
                    pnlMemberPanel.Visible = Page.User.Identity.IsAuthenticated
                    If Page.User.Identity.IsAuthenticated Then
                        Dim TypeID As Integer = CInt(ConfigurationManager.AppSettings("FavVideoTypeID"))
                        Dim VideoCount As Integer = (New UserProductDataSetTableAdapters.UserProductTableAdapter()).GetProductCount(Username, .ProductID, TypeID).GetValueOrDefault(0)
                        If VideoCount = 0 Then
                            btnRemoveFav.Visible = False
                        Else
                            btnAddFav.Visible = False
                        End If

                        Dim LikeCount As Integer = (New CommentDataSetTableAdapters.LikeTableTableAdapter()).LikeCountByUserID("episode", ID, Username).GetValueOrDefault(0)
                        If LikeCount = 0 Then
                            btnUnlikeEpisode.Visible = False
                        Else
                            btnLikeEpisode.Visible = False
                        End If

                        TypeID = CInt(ConfigurationManager.AppSettings("CollectionTypeID"))
                        Dim GroupID As Integer = (New UserProductDataSetTableAdapters.UserProductTableAdapter()).GetGroupID(Username, .ProductID, TypeID).GetValueOrDefault(0)
                        If GroupID = 0 Then
                            btnRemoveCollection.Visible = False
                            ddlCollectionGroup.SelectedValue = GroupID
                        Else
                            btnAddCollection.Visible = False
                            ddlCollectionGroup.Visible = False
                        End If
                    End If

                    ' Check Facebook logged in
                    Dim FBContext As New FacebookWebContext()
                    If FBContext.IsAuthenticated Then
                        AccessToken = FBContext.AccessToken()
                        Dim FBClient As New FacebookWebClient()
                        FBID = FBContext.UserId

                        Dim result = CType(FBClient.Get(FBID), Facebook.JsonObject)
                        FBName = result("name")
                    End If

                    ' Add View Count
                    StatClass.AddViewCount("episode", ID, Username)

                    EpisodeID = ID
                End If
            End With

        End If
    End Sub

    Protected Function ShowLikeButton(CommentID As Integer) As Boolean
        Dim dr As CommentDataSet.LikeTableRow() = dtLike.Select("ReferenceID = " & CommentID)
        Return (dr.Length = 0)
    End Function

    Protected Sub UpdatePanel1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles UpdatePanel1.PreRender
        If Not String.IsNullOrWhiteSpace(hfdType.Value) And Not String.IsNullOrWhiteSpace(hfdReferenceID.Value) Then
            Dim Count As Integer = (New CommentDataSetTableAdapters.CommentTableAdapter()).GetCount(hfdType.Value, CInt(hfdReferenceID.Value))
            tabComment.HeaderText = String.Format("評論 ({0})", Count)
        End If
    End Sub

    Protected Sub btnAddFav_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAddFav.Click
        Dim dsFavVideo As New UserProductDataSetTableAdapters.UserProductTableAdapter()
        Dim TypeID As Integer = CInt(ConfigurationManager.AppSettings("FavVideoTypeID"))
        Dim Username As String = Page.User.Identity.Name
        Dim ProductID As Integer = CInt(hfdProductID.Value)
        Dim SortOrder As Integer = 0
        Dim GroupID As Integer = 0
        dsFavVideo.Insert(Username, TypeID, GroupID, ProductID, SortOrder, Date.Now(), Username)
        btnAddFav.Visible = False
        btnRemoveFav.Visible = True
    End Sub

    Protected Sub btnRemoveFav_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnRemoveFav.Click
        Dim dsFavVideo As New UserProductDataSetTableAdapters.UserProductTableAdapter()
        Dim TypeID As Integer = CInt(ConfigurationManager.AppSettings("FavVideoTypeID"))
        Dim Username As String = Page.User.Identity.Name
        Dim ProductID As Integer = CInt(hfdProductID.Value)
        dsFavVideo.DeleteQuery(Username, ProductID, TypeID)
        btnAddFav.Visible = True
        btnRemoveFav.Visible = False

    End Sub

    Protected Sub btnAddCollection_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAddCollection.Click
        Dim dsFavVideo As New UserProductDataSetTableAdapters.UserProductTableAdapter()
        Dim TypeID As Integer = CInt(ConfigurationManager.AppSettings("CollectionTypeID"))
        Dim Username As String = Page.User.Identity.Name
        Dim ProductID As Integer = CInt(hfdProductID.Value)
        Dim SortOrder As Integer = 0
        Dim GroupID As Integer = CInt(ddlCollectionGroup.SelectedValue)
        dsFavVideo.Insert(Page.User.Identity.Name, TypeID, GroupID, ProductID, SortOrder, Date.Now(), Username)
        btnAddCollection.Visible = False
        ddlCollectionGroup.Visible = False
        btnRemoveCollection.Visible = True
    End Sub

    Protected Sub btnRemoveCollection_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnRemoveCollection.Click
        Dim dsFavVideo As New UserProductDataSetTableAdapters.UserProductTableAdapter()
        Dim TypeID As Integer = CInt(ConfigurationManager.AppSettings("CollectionTypeID"))
        Dim Username As String = Page.User.Identity.Name
        Dim ProductID As Integer = CInt(hfdProductID.Value)
        dsFavVideo.DeleteQuery(Username, ProductID, TypeID)
        btnAddCollection.Visible = True
        ddlCollectionGroup.Visible = True
        btnRemoveCollection.Visible = False
    End Sub

#End Region


#Region "Comment"


    Protected Sub btnPost_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnPost.Click
        Dim CommentAdapter As New CommentDataSetTableAdapters.CommentTableAdapter()
        Dim UserID As String = Page.User.Identity.Name
        Dim MediaUrl As String = ""
        Dim MediaTitle As String = ""
        Dim MediaDesc As String = ""
        Dim CommentText As String = Utility.ReplaceLf(txtComment.Text)
        Dim VideoID As String
        If pnlVideoUrl.Visible Then
            VideoID = VideoClass.GetVideoID(txtVideoUrl.Text)

            Try
                Dim uri As New Uri("http://gdata.youtube.com/feeds/api/videos/" & VideoID & "?v=2&alt=json-in-script")
                Dim WebReq As HttpWebRequest = HttpWebRequest.Create(uri)
                WebReq.Method = WebRequestMethods.Http.Get
                Dim WebResp As HttpWebResponse = WebReq.GetResponse()
                Dim Reader As New StreamReader(WebResp.GetResponseStream())
                Dim JSONText As String = Reader.ReadToEnd()
                WebResp.Close()

                If JSONText.StartsWith("gdata.io.handleScriptLoaded(") Then
                    JSONText = JSONText.Substring(28)
                    Dim p As Integer = JSONText.LastIndexOf(")")
                    JSONText = JSONText.Substring(0, p)
                    Dim Data As JObject = JObject.Parse(JSONText)

                    MediaTitle = CType(Data.SelectToken("entry.media$group.media$title.$t"), String)
                    MediaDesc = CType(Data.SelectToken("entry.media$group.media$description.$t"), String)
                    If MediaDesc.Length > 300 Then
                        MediaDesc = MediaDesc.Substring(0, 300) & "..."
                    End If
                    MediaUrl = "youtube://" & VideoID
                End If
            Catch ex As WebException
                ' Not Valid YouTube ID
            End Try
        End If

        If pnlImageUpload.Visible Then
            If Session("ImageFilename") <> "" Then
                MediaUrl = "image://" & Session("ImageFilename")
            End If
        End If

        CommentAdapter.Insert(hfdType.Value, CInt(hfdReferenceID.Value), UserID, Now(), CommentText, False, False, 0, MediaUrl, MediaTitle, MediaDesc)
        txtComment.Text = ""
        lvwComment.DataBind()
        CommentUpdatePanel.Update()
    End Sub

    Protected Sub btnInspect_Click(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim CommentAdapter As New CommentDataSetTableAdapters.CommentTableAdapter()
        Dim Container As Control = CType(sender, LinkButton).Parent()
        Dim hfdCommentID As HiddenField = CType(Container.FindControl("hfdCommentID"), HiddenField)
        Dim CommentID As Integer = CInt(hfdCommentID.Value)
        CommentAdapter.UpdateInspected(True, CommentID)
        lvwComment.DataBind()
        CommentUpdatePanel.Update()
    End Sub

    'Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
    '    If Not Page.IsPostBack Then
    '        If Page.User.Identity.Name = "" Then
    '            pnlRegister.Visible = True
    '            pnlPost.Visible = False
    '        Else
    '            pnlRegister.Visible = False
    '            pnlPost.Visible = True
    '        End If
    '        hfdType.Value = _Type
    '        hfdReferenceID.Value = _ReferenceID
    '    End If
    'End Sub


    Protected Sub btnAddImage_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAddImage.Click
        pnlImageUpload.Visible = True
        pnlVideoUrl.Visible = False
    End Sub

    Protected Sub btnAddVideo_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAddVideo.Click
        pnlImageUpload.Visible = False
        pnlVideoUrl.Visible = True
    End Sub


    Protected Function IsCurrentUser(ByVal UserID As String) As Boolean
        Dim Ret As Boolean = False

        If Not Page.User.Identity Is Nothing Then
            If Page.User.Identity.Name = UserID Then
                Ret = True
            End If
        End If
        Return Ret
    End Function

    Protected Function ShowThumbnail(ByVal Url As String) As String
        Dim RetUrl As String = ""
        Dim VideoID As String = GetVideoID(Url)
        If VideoID <> "" Then
            RetUrl = VideoClass.GetPreview(VideoID)
        End If
        Return RetUrl
    End Function

    Protected Function GetVideoID(ByVal Url As String) As String
        Dim Ret As String = ""
        If Url.StartsWith("youtube://") Then
            Ret = Url.Substring(10)
        End If
        Return Ret
    End Function

    Protected Function GetEmbedVideoUrl(ByVal Url As String) As String
        Dim VideoID As String = GetVideoID(Url)
        Return String.Format("http://www.youtube.com/embed/{0}?rel=0", VideoID)
    End Function

    Protected Function GetImageUrl(ByVal Url As String, ByVal ImageSize As ImageClass.ImageSize) As String
        Dim Ret As String = ""
        If Url.StartsWith("image://") Then
            Ret = Url.Substring(8)

            Select Case ImageSize
                Case ImageClass.ImageSize.Thumbnail
                    Ret = IO.Path.Combine(ConfigurationManager.AppSettings("CommentThumbnailPath"), Ret)
                Case ImageClass.ImageSize.Normal
                    Ret = IO.Path.Combine(ConfigurationManager.AppSettings("CommentImagePath"), Ret)
            End Select
        End If
        Return Ret
    End Function

    Protected Function IsVideo(ByVal MediaUrl As String) As Boolean
        Return MediaUrl.StartsWith("youtube://")
    End Function

    Protected Function IsImage(ByVal MediaUrl As String) As Boolean
        Return MediaUrl.StartsWith("image://")
    End Function

    Protected Sub AsyncFileUpload1_UploadedComplete(ByVal sender As Object, ByVal e As AjaxControlToolkit.AsyncFileUploadEventArgs) Handles AsyncFileUpload1.UploadedComplete
        If AsyncFileUpload1.HasFile Then
            Dim Filename As String = Guid.NewGuid().ToString & IO.Path.GetExtension(e.FileName)
            Dim Url As String = IO.Path.Combine(ConfigurationManager.AppSettings("CommentImagePath"), Filename)
            'AsyncFileUpload1.SaveAs(Server.MapPath(Url))
            Dim Image As Drawing.Image = Drawing.Image.FromStream(AsyncFileUpload1.PostedFile.InputStream())
            Dim tbSize As Drawing.Size = New Drawing.Size(CInt(ConfigurationManager.AppSettings("CommentImageWidth")), CInt(ConfigurationManager.AppSettings("CommentImageHeight")))
            Dim tb As Drawing.Image = ImageClass.ResizeImage(Image, tbSize)
            Filename = IO.Path.GetFileNameWithoutExtension(Filename) & ".jpg"
            Url = IO.Path.Combine(ConfigurationManager.AppSettings("CommentImagePath"), Filename)
            ImageClass.SaveJPGWithCompressionSetting(tb, Server.MapPath(Url), CLng(ConfigurationManager.AppSettings("JpegCompression")))

            'Dim Image As Drawing.Image = Drawing.Image.FromFile(Server.MapPath(Url))
            tbSize = New Drawing.Size(CInt(ConfigurationManager.AppSettings("CommentThumbnailWidth")), CInt(ConfigurationManager.AppSettings("CommentThumbnailHeight")))
            tb = ImageClass.ResizeImage(tb, tbSize)
            Url = IO.Path.Combine(ConfigurationManager.AppSettings("CommentThumbnailPath"), Filename)
            ImageClass.SaveJPGWithCompressionSetting(tb, Server.MapPath(Url), CLng(ConfigurationManager.AppSettings("JpegCompression")))
            Session("ImageFilename") = Filename

            CommentUpdatePanel.Update()
            ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "reply", "top.imagePreview('#" & Image2.ClientID & "', '" & Page.ResolveClientUrl(Url) & "');", True)

        End If
    End Sub

    <System.Web.Services.WebMethod()> _
    <System.Web.Script.Services.ScriptMethod(UseHttpGet:=True)> _
    Public Shared Function CommentReply(ByVal CommentID As Integer, ByVal Comment As String, ByVal ID As String) As String
        Dim User As MembershipUser = Membership.GetUser()
        Dim daComment As New CommentDataSetTableAdapters.CommentTableAdapter()
        Dim NewCommentID As Integer
        Dim PostDate As Date = Now()
        Comment = Utility.ReplaceLf(Comment)
        NewCommentID = daComment.InsertQuery(_Type, _ReferenceID, User.UserName, PostDate, Comment, False, False, CommentID, "", "", "")

        Dim Ret As String = ""
        Dim NickName As String = (New MemberDetailDataSetTableAdapters.MemberDetailTableAdapter()).GetName(User.UserName)
        Dim CommentJson As New CommentJsonClass(NewCommentID, NickName, Comment, PostDate, ID)
        Ret = JsonConvert.SerializeObject(CommentJson, Formatting.None)

        Return Ret
    End Function

    <System.Web.Services.WebMethod()> _
    <System.Web.Script.Services.ScriptMethod(UseHttpGet:=True)> _
    Public Shared Function CommentLike(CommentID As Integer, LikeValue As Boolean) As Integer
        Dim da As New CommentDataSetTableAdapters.LikeTableTableAdapter()
        Dim User As MembershipUser = Membership.GetUser()
        Dim RowAffected As Integer
        Dim Result As Integer
        Dim _Type As String = "comment"

        If LikeValue Then
            RowAffected = da.Insert(_Type, CommentID, User.UserName, Now())
        Else
            RowAffected = da.DeleteQuery(_Type, CommentID, User.UserName)
        End If
    
        Result = da.LikeCount(_Type, CommentID)
        If RowAffected = 0 Then
            Result *= -1
        End If

        Return Result
    End Function




#End Region


    <System.Web.Services.WebMethod()> _
    <System.Web.Script.Services.ScriptMethod()> _
    Public Shared Sub AddViewCount(ID As Integer, Username As String)
        StatClass.AddViewCount("episode_fb_share", ID, Username)
    End Sub

    Protected Sub btnLikeEpisode_Click(sender As Object, e As System.EventArgs) Handles btnLikeEpisode.Click
        Dim da As New CommentDataSetTableAdapters.LikeTableTableAdapter()
        Dim ID As Integer = ViewState("id")
        Dim CurrentUser As String = Page.User.Identity.Name
        da.Insert("episode", ID, CurrentUser, Now())
        btnLikeEpisode.Visible = False
        btnUnlikeEpisode.Visible = True
        Dim Count As Integer = (New CommentDataSetTableAdapters.LikeTableTableAdapter()).LikeCount(_Type, _ReferenceID).GetValueOrDefault(0)
        If Count > 0 Then
            lblLikeEpside.Text = String.Format("共有{0}個Like", Count)
        Else
            lblLikeEpside.Text = ""
        End If
    End Sub

    Protected Sub btnUnlikeEpisode_Click(sender As Object, e As System.EventArgs) Handles btnUnlikeEpisode.Click
        Dim da As New CommentDataSetTableAdapters.LikeTableTableAdapter()
        Dim ID As Integer = ViewState("id")
        Dim CurrentUser As String = Page.User.Identity.Name
        da.DeleteQuery("episode", ID, CurrentUser)
        btnLikeEpisode.Visible = True
        btnUnlikeEpisode.Visible = False
        Dim Count As Integer = (New CommentDataSetTableAdapters.LikeTableTableAdapter()).LikeCount(_Type, _ReferenceID).GetValueOrDefault(0)
        If Count > 0 Then
            lblLikeEpside.Text = String.Format("共有{0}個Like", Count)
        Else
            lblLikeEpside.Text = ""
        End If
    End Sub

    Protected Sub btnLogin_Click(sender As Object, e As System.EventArgs) Handles btnLogin.Click
        FormsAuthentication.RedirectToLoginPage()
    End Sub
End Class
